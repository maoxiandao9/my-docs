<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://ps.zpj.io/atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
  <id>https://ps.zpj.io/</id>
  <title>PicoScenes</title>
  <subtitle>「Java 学习指北 + Java 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，复习 Java 知识点，首选 JavaGuide！  </subtitle>
  <icon>https://ps.zpj.io/favicon.ico</icon>
  <updated>2025-04-14T03:56:18.838Z</updated>
  <generator>@vuepress/plugin-feed</generator>
  <link rel="self" href="https://ps.zpj.io/atom.xml"/>
  <link rel="alternate" href="https://ps.zpj.io/"/>
  <entry>
    <title type="text">PicoScenes: Enabling Modern Wi-Fi ISAC Research!</title>
    <id>https://ps.zpj.io/home.html</id>
    <link href="https://ps.zpj.io/home.html"/>
    <updated>2025-04-11T07:48:27.000Z</updated>
    <summary type="html"><![CDATA[<h2>News!</h2>
<ul>
<li><strong>May 12, 2024</strong> PicoScenes Radar mode now supports SISO, SIMO, MIMO and MIMO across multiple devices measurements, see <a href="/userManual/scenarios.html#wi-fi-radar-80211bf-mono-static-sensing-mode-with-80211agnacaxbe-frame-format" target="_blank">Wi-Fi Radar (802.11bf Mono-Static Sensing Mode) with 802.11a/g/n/ac/ax/be Frame Format</a>.</li>
<li><strong>Mar. 19, 2024</strong> PicoScenes now provides a UDP forwarding/receiving utility! See <a href="/userManual/utilities.html#udp-forwarder-plugin--udpremotelogger" target="_blank">UDP-Forwarder Plugin &amp; UDPRemoteLogger</a>.</li>
<li><strong>Mar. 19, 2024</strong> PicoScenes now officially supports Ubuntu 22.04! See <a href="/userManual/installation.html#picoscenes-software-installation" target="_blank">PicoScenes Software Installation</a>.</li>
<li><strong>Mar. 12, 2024</strong> We are pleased to announce that our research, "<strong>Reshaping Wi-Fi ISAC with High-Coherence Hardware Capabilities</strong>", has been accepted by <strong>IEEE Communication Magazine (IF=11.2)</strong>. For More information, please visit its online supplementary materials <a href="/userManual/reshaping-wifi-isac.html" target="_blank">Online supplementaries for "Reshaping Wi-Fi ISAC with High-Coherence Hardware Capabilities"</a>.</li>
<li><strong>Jan. 20, 2024</strong> <a href="/userManual/plugin.html" target="_blank">Developing Your PicoScenes Plugins</a> page is completely rewritten. Thanks to Tian Teng for his brilliant work!</li>
<li><strong>Dec. 26, 2023</strong> Revise the <a href="/userManual/ni.html" target="_blank">Selling NI USRP Devices (与NI合作销售USRP系列产品)</a> page.</li>
<li><strong>Dec. 20, 2023</strong> Initiating the Ubuntu 22.04 (and soon 24.04) transition of PicoScenes system (client program and CI server).</li>
<li><strong>Dec. 3, 2023</strong> Add Radar and MIMO-Radar modes for SDR frontend, see <a href="/userManual/scenarios.html#wi-fi-radar-80211bf-mono-static-sensing-mode-with-80211agnacaxbe-frame-format" target="_blank">Wi-Fi Radar (802.11bf Mono-Static Sensing Mode) with 802.11a/g/n/ac/ax/be Frame Format.</a>.</li>
<li><strong>Dec. 2, 2023</strong> Major update to license: all limitations for COTS NICS (6 GHz band, 11ax 80/160 MHz CBW packet injection and more) removed! More than 10 SDR-only limitations are removed (unlimited channel/bandwidth access, Wi-Fi 7 Tx and Rx, up to 320 MHz CBW and more). See <a href="/userManual/features_pricing.html" target="_blank">Features &amp; License</a> for more details. (<strong>Upgrade to latest version to validate</strong>!)</li>
<li><strong>Nov. 29, 2023</strong> Add a new page <a href="/userManual/ni.html" target="_blank">Selling NI USRP Devices (与NI合作销售USRP系列产品)</a> describing how we collaborate with NI selling USRP hardware. This program is exclusively available in mainland China.</li>
<li><strong>Nov. 28, 2023</strong> Add a new page <a href="/userManual/features_pricing.html" target="_blank">Features &amp; License</a> replacing the old PSLP page.</li>
<li><strong>Nov. 20, 2023</strong> page <a href="/userManual/scenarios.html" target="_blank">CSI Measurement using PicoScenes</a> is completely rewritten. Readability is significantly improved.</li>
<li><strong>Nov. 18, 2023</strong> Add docs for two experimental features: <a href="/userManual/scenarios.html#dual-channel-spectrum-splitting-and-stitching-experimental" target="_blank">Dual-Channel Spectrum Splitting and Stitching (Experimental)</a> and <a href="/userManual/scenarios.html#multi-thread-rx-decoding-experimental" target="_blank">Multi-Thread Rx Decoding (Experimental)</a>.</li>
<li><strong>Nov. 17, 2023</strong> Add two quick reference pages: <a href="/userManual/channels.html" target="_blank">Wi-Fi Channelization</a> and <a href="/userManual/presets.html" target="_blank">PicoScenes Presets</a>.</li>
<li><strong>Nov. 16, 2023</strong> Page revised <a href="/userManual/hardware.html" target="_blank">Supported Hardware</a>, <a href="/userManual/installation.html" target="_blank">PicoScenes Installation &amp; Upgrade</a>, <a href="/userManual/scenarios.html" target="_blank">CSI Measurement using PicoScenes</a>, and <a href="/userManual/utilities.html" target="_blank">Utility Programs and Bash Scripts</a>.</li>
<li><strong>Nov. 1, 2023</strong> <strong>PicoScenes adds Wi-Fi 7 (EHT-SU) support for SDR frontends.</strong> PicoScenes is currently the only platform support Wi-Fi 7 based ISAC research. See our Wi-Fi 7 examples <a href="/userManual/scenarios.html#transmitting-80211agnacaxbe-protocol-frames-using-sdr-devices" target="_blank">Transmitting 802.11a/g/n/ac/ax/be protocol frames using SDR Devices</a>.</li>
</ul>]]></summary>
    <content type="html"><![CDATA[<h2>News!</h2>
<ul>
<li><strong>May 12, 2024</strong> PicoScenes Radar mode now supports SISO, SIMO, MIMO and MIMO across multiple devices measurements, see <a href="/userManual/scenarios.html#wi-fi-radar-80211bf-mono-static-sensing-mode-with-80211agnacaxbe-frame-format" target="_blank">Wi-Fi Radar (802.11bf Mono-Static Sensing Mode) with 802.11a/g/n/ac/ax/be Frame Format</a>.</li>
<li><strong>Mar. 19, 2024</strong> PicoScenes now provides a UDP forwarding/receiving utility! See <a href="/userManual/utilities.html#udp-forwarder-plugin--udpremotelogger" target="_blank">UDP-Forwarder Plugin &amp; UDPRemoteLogger</a>.</li>
<li><strong>Mar. 19, 2024</strong> PicoScenes now officially supports Ubuntu 22.04! See <a href="/userManual/installation.html#picoscenes-software-installation" target="_blank">PicoScenes Software Installation</a>.</li>
<li><strong>Mar. 12, 2024</strong> We are pleased to announce that our research, "<strong>Reshaping Wi-Fi ISAC with High-Coherence Hardware Capabilities</strong>", has been accepted by <strong>IEEE Communication Magazine (IF=11.2)</strong>. For More information, please visit its online supplementary materials <a href="/userManual/reshaping-wifi-isac.html" target="_blank">Online supplementaries for "Reshaping Wi-Fi ISAC with High-Coherence Hardware Capabilities"</a>.</li>
<li><strong>Jan. 20, 2024</strong> <a href="/userManual/plugin.html" target="_blank">Developing Your PicoScenes Plugins</a> page is completely rewritten. Thanks to Tian Teng for his brilliant work!</li>
<li><strong>Dec. 26, 2023</strong> Revise the <a href="/userManual/ni.html" target="_blank">Selling NI USRP Devices (与NI合作销售USRP系列产品)</a> page.</li>
<li><strong>Dec. 20, 2023</strong> Initiating the Ubuntu 22.04 (and soon 24.04) transition of PicoScenes system (client program and CI server).</li>
<li><strong>Dec. 3, 2023</strong> Add Radar and MIMO-Radar modes for SDR frontend, see <a href="/userManual/scenarios.html#wi-fi-radar-80211bf-mono-static-sensing-mode-with-80211agnacaxbe-frame-format" target="_blank">Wi-Fi Radar (802.11bf Mono-Static Sensing Mode) with 802.11a/g/n/ac/ax/be Frame Format.</a>.</li>
<li><strong>Dec. 2, 2023</strong> Major update to license: all limitations for COTS NICS (6 GHz band, 11ax 80/160 MHz CBW packet injection and more) removed! More than 10 SDR-only limitations are removed (unlimited channel/bandwidth access, Wi-Fi 7 Tx and Rx, up to 320 MHz CBW and more). See <a href="/userManual/features_pricing.html" target="_blank">Features &amp; License</a> for more details. (<strong>Upgrade to latest version to validate</strong>!)</li>
<li><strong>Nov. 29, 2023</strong> Add a new page <a href="/userManual/ni.html" target="_blank">Selling NI USRP Devices (与NI合作销售USRP系列产品)</a> describing how we collaborate with NI selling USRP hardware. This program is exclusively available in mainland China.</li>
<li><strong>Nov. 28, 2023</strong> Add a new page <a href="/userManual/features_pricing.html" target="_blank">Features &amp; License</a> replacing the old PSLP page.</li>
<li><strong>Nov. 20, 2023</strong> page <a href="/userManual/scenarios.html" target="_blank">CSI Measurement using PicoScenes</a> is completely rewritten. Readability is significantly improved.</li>
<li><strong>Nov. 18, 2023</strong> Add docs for two experimental features: <a href="/userManual/scenarios.html#dual-channel-spectrum-splitting-and-stitching-experimental" target="_blank">Dual-Channel Spectrum Splitting and Stitching (Experimental)</a> and <a href="/userManual/scenarios.html#multi-thread-rx-decoding-experimental" target="_blank">Multi-Thread Rx Decoding (Experimental)</a>.</li>
<li><strong>Nov. 17, 2023</strong> Add two quick reference pages: <a href="/userManual/channels.html" target="_blank">Wi-Fi Channelization</a> and <a href="/userManual/presets.html" target="_blank">PicoScenes Presets</a>.</li>
<li><strong>Nov. 16, 2023</strong> Page revised <a href="/userManual/hardware.html" target="_blank">Supported Hardware</a>, <a href="/userManual/installation.html" target="_blank">PicoScenes Installation &amp; Upgrade</a>, <a href="/userManual/scenarios.html" target="_blank">CSI Measurement using PicoScenes</a>, and <a href="/userManual/utilities.html" target="_blank">Utility Programs and Bash Scripts</a>.</li>
<li><strong>Nov. 1, 2023</strong> <strong>PicoScenes adds Wi-Fi 7 (EHT-SU) support for SDR frontends.</strong> PicoScenes is currently the only platform support Wi-Fi 7 based ISAC research. See our Wi-Fi 7 examples <a href="/userManual/scenarios.html#transmitting-80211agnacaxbe-protocol-frames-using-sdr-devices" target="_blank">Transmitting 802.11a/g/n/ac/ax/be protocol frames using SDR Devices</a>.</li>
</ul>
<h2>What is PicoScenes?</h2>
<p>PicoScenes is a powerful middleware for modern Wi-Fi integrated sensing and communication (Wi-Fi ISAC) research that addresses two key barriers in the field: hardware limitations and software functionality.</p>
<h3>Hardware Side</h3>
<p>PicoScenes is compatible with a wide range of CSI-extractable devices, including commercial off-the-shelf (COTS) Wi-Fi NICs and software-defined radio (SDR) devices. The supported COTS NIC models include Intel Wi-Fi 6E AX210 (<strong>AX210</strong>), Intel Wi-Fi 6 AX200 (<strong>AX200</strong>), Qualcomm Atheros AR9300 (<strong>QCA9300</strong>), and the legendary Intel Wireless Link 5300 (<strong>IWL5300</strong>). The supported SDR devices include the HackRF One and <em>all</em> models of <strong>USRP</strong> devices.</p>
<p>For COTS Wi-Fi NICs, PicoScenes provides many exclusive hardware features:</p>
<ul>
<li>
<p>With AX210/AX200 NIC, PicoScenes is the first and currently the only publicly available platform that enables <strong>CSI extraction for 802.11ax-format</strong> frames using commodity Wi-Fi hardware. It supports CSI extraction for <strong>all Wi-Fi formats (802.11a/g/n/ac/ax)</strong> and <strong>up to 160 MHz bandwidth</strong>. Additionally, PicoScenes enables <strong>CSI measurement for all overheard frames in monitor mode</strong>, utilizing the surrounding Wi-Fi devices as excitation signals for ISAC research &amp; applications.</p>
</li>
<li>
<p>With AX210 NIC, PicoScenes is the first and currently the only publicly available platform that enables packet injection and <strong>CSI measurement in the Wi-Fi 6 GHz band</strong> using the AX210 NIC. It unlocks <strong>a total of 1.18 GHz</strong> spectrum from 5945 MHz to 7125 MHz, providing researchers worldwide with continuous spectrum availability for Wi-Fi ISAC research. The AX210 NIC, as the next-generation of AX200, is the only Wi-Fi 6E NIC ready for Wi-Fi ISAC, marking the entrance of Wi-Fi ISAC into the Wi-Fi 6E era.</p>
</li>
<li>
<p>With QCA9300 NIC, PicoScenes offers <strong>arbitrary tuning for both carrier frequency and baseband sampling rate</strong>, providing a total of <strong>2.4 GHz-wide spectrum</strong> availability and <strong>2.5 to 80 MHz bandwidth</strong>. It also includes <strong>manual Rx gain control</strong> ranging from 0 to 66 dB. The platform supports QCA9300 to IWL5300 CSI measurement, as well as Tx/Rx radio-chain control and transmission of <strong>extra spatial sounding</strong> LTFs (HT-ELTFs).</p>
</li>
</ul>
<p>For SDR, PicoScenes is currently the <em>only</em> platform that can transform a SDR device into a SDR-based Wi-Fi NIC, <em>i.e.</em>, <strong>transmitting/receiving Wi-Fi frames and measuring their CSI in real time just like a full-functional Wi-Fi NIC</strong>. It has four major highlights: full protocol compliance, rich PHY-layer control, complete and all-stage PHY-layer information, and high performance.</p>
<ul>
<li>
<p><strong>Full Protocol Compliance up to Wi-Fi 7</strong>: PicoScenes Wi-Fi baseband supports transmitting and receiving Wi-Fi frames in all formats, including 802.11a/g/n/ac/<strong>ax/be</strong>, and across all bandwidths (20/40/80/<strong>160/320 MHz</strong>). It also supports all coding schemes (LDPC and BCC), <em>all modulation and coding schemes (MCS 0 to 13)</em>, and <em>up to 4x4 MIMO</em>.</p>
</li>
<li>
<p><strong>Rich PHY-Layer Control</strong>: PicoScenes <strong>grants users extensive control over the transmission and reception process</strong>. Users can operate in non-standard carrier frequencies and bandwidths, manually specify carrier frequency offset (CFO), sampling frequency offset (SFO), symbol timing offset (STO), I/Q mismatching, resampling, and various OFDM encoding/decoding settings. PicoScenes is the first platform to provide <em>signal precoding/steering capabilities</em>, allowing users to implement beamforming, phased array, or arbitrary Tx equalization. For example, users can specify antenna positions and desired angles of departure (AoD) for phased array applications, and PicoScenes will calculate the steering matrix and apply it to the spatial mapping mechanism of 802.11n/ac/ax/be.</p>
</li>
<li>
<p><strong>Complete and All-Stage PHY-Layer Information</strong>: PicoScenes provides users with comprehensive information about the PHY layer. This includes not only the <em>raw I/Q streams</em> but also all the staged information produced during the OFDM demodulation process. This information includes CSI computed by L-LTF (<em>Legacy CSI</em>), CSI computed by HT/VHT/HE/EHT-LTF (<em>HT/VHT/HE/EHT-CSI</em>), <em>CFO/SFO estimation</em>, and low-level <em>per-packet baseband signals</em>.</p>
</li>
<li>
<p><strong>High Performance</strong>: PicoScenes is designed to support real-time Wi-Fi ISAC research with high performance. It can achieve up to 1 kHz CSI measurement at a 20 MHz bandwidth (single thread), support <em>multi-thread RX decoding</em>, and achieve packet injection rates of up to 4 kHz in real-time mode and up to 40 kHz in <em>signal-replay mode</em>. For timing-tolerant research, PicoScenes offers signal record and replay functionalities for both Tx and Rx I/Q streams, enabling users to capture signals and decode frames without packet loss. PicoScenes also provides a <em>Virtual SDR mode</em>, allowing users to generate, manipulate, and test Wi-Fi baseband signals without connecting to an actual SDR device.</p>
</li>
</ul>
<h3>Software Side</h3>
<p>PicoScenes is far beyond a simple CSI data logger but a versatile Wi-Fi ISAC research platform. As far as we know, It is the first and currently the only platform that supports <strong>multi-NIC concurrent CSI measurement</strong>, which significantly simplifies the array-based CSI measurement. Besides that, it also features the live CSI plot, various low-level controls, and <strong>packet injection in all-format and all-bandwidth</strong>, which promises a fixed-rate CSI measurement.</p>
<p>As a Wi-Fi ISAC research middleware, PicoScenes encapsulates the per-NIC low-level hardware controls into a set of unified APIs and exposes them to the upper-level plugin layer. Through the PicoScenes plugin mechanism, <strong>complex and interactive CSI measurement tasks can be easily prototyped in a mission-focus manner</strong>. We demonstrate this advantage by <em>EchoProbe</em>, a PicoScenes plugin, which provides <em>ms</em>-grade round-trip CSI measurement, large spectrum scanning and the most basic CSI data logging capabilities.</p>
<p>PicoScenes MATLAB Toolbox (PMT) is the MATLAB parsing routine for the <em>.csi</em> file generated by the PicoScenes. The parsing can be as easy as just <strong>dragging the .csi files into MATLAB</strong>. The fundamental data structure is in versioned-segment format, which guarantees forward compatibility across the future upgrade.</p>
<p>The PicoScenes software ecosystem (customized driver, platform, and plugins) is <strong>built against the latest kernel, packaged in the Debian .deb format, and auto-updated via the easy</strong> <em>apt upgrade</em> <strong>command</strong>. A fresh-new installation can be as short as 10 minutes. Setting up a CSI-measurement environment can never be such easy!</p>
<p>You may refer to <a href="/userManual/features_pricing.html" target="_blank">Features &amp; License</a> to learn all the features of PicoScenes platform. We hope you enjoy the next ride of Wi-Fi ISAC research, supercharged by PicoScenes!</p>
]]></content>
    <published>2025-04-11T07:48:27.000Z</published>
  </entry>
  <entry>
    <title type="text">Application Notes</title>
    <id>https://ps.zpj.io/appnotes/appnotes.html</id>
    <link href="https://ps.zpj.io/appnotes/appnotes.html"/>
    <updated>2025-04-14T03:56:18.845Z</updated>
    <summary type="html"><![CDATA[<p>Explore our extensive library of application notes and technical tutorials designed to enhance your understanding and use of the PicoScenes platform.</p>
<h2>PicoScenes Tricks</h2>
<h2>Wi-Fi Knowledge</h2>
<ul>
<li><strong><a href="channels">Wi-Fi Channelization</a></strong>: A detailed explanation of Wi-Fi channel specifications for both COTS NICs and SDR devices, including examples of how to correctly set channels for <code>array_prepare_for_picoscenes</code> and <code>PicoScenes</code> commands.</li>
</ul>]]></summary>
    <content type="html"><![CDATA[<p>Explore our extensive library of application notes and technical tutorials designed to enhance your understanding and use of the PicoScenes platform.</p>
<h2>PicoScenes Tricks</h2>
<h2>Wi-Fi Knowledge</h2>
<ul>
<li><strong><a href="channels">Wi-Fi Channelization</a></strong>: A detailed explanation of Wi-Fi channel specifications for both COTS NICs and SDR devices, including examples of how to correctly set channels for <code>array_prepare_for_picoscenes</code> and <code>PicoScenes</code> commands.</li>
</ul>
<h2>Hardware Guides</h2>
<h3>SDR Device Setup</h3>
<ul>
<li><strong><a href="connect-usrp">Connecting NI USRP Devices</a></strong>: This guide provides the bandwidth estimation for signal streaming and details the connection methods for various NI USRP models, including B2x0/N2x0/E3x0/N3x0/X3x0/X4x0.</li>
<li><strong><a href="x4x0-and-other-mpm-get-started">Getting Started with NI USRP X4x0 Series</a></strong>: A comprehensive guide for setting up and configuring NI USRP devices with MPM architecture, including X4x0 series, E320, and N3xx series. Covers network configuration, filesystem upgrades, and initial verification steps.</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title type="text">Connecting NI USRP Devices</title>
    <id>https://ps.zpj.io/appnotes/connect-usrp.html</id>
    <link href="https://ps.zpj.io/appnotes/connect-usrp.html"/>
    <updated>2025-04-14T03:56:18.846Z</updated>
    <summary type="html"><![CDATA[<h2>Document Structure</h2>
<p>This guide is organized into the following sections:</p>
<ol>
<li><a href="#bandwidth-requirement-for-signal-streaming">Bandwidth Requirements</a> - Explains the bandwidth calculation for I/Q signal streaming</li>
<li><a href="#ni-usrp-b2x0">NI USRP B2x0</a> - USB 3.0 connectivity</li>
<li><a href="#ni-usrp-n2x0">NI USRP N2x0</a> - 1GbE connectivity</li>
<li><a href="#ni-usrp-x3x0-series">NI USRP X3x0 Series</a> - dual-10GbE connectivity</li>
<li><a href="#ni-usrp-n3xx-series">NI USRP N3xx Series</a>
<ul>
<li><a href="#n300-and-n310">N300 and N310</a> - Dual-10GbE connectivity</li>
<li><a href="#n320-and-n321">N320 and N321</a> - Dual-10GbE or QSFP+ connectivity</li>
</ul>
</li>
<li><a href="#ni-usrp-e320">NI USRP E320</a> - 10GbE connectivity</li>
<li><a href="#ni-usrp-x4xx-series">NI USRP X4xx Series</a> - Dual-100GbE connectivity</li>
<li><a href="#commons-of-mpm-architecture-devices-e320n3xxx4xx">Commons of MPM Architecture Devices</a> - RJ45 and USB Console JTag ports of E320, N3xx and X4xx</li>
</ol>]]></summary>
    <content type="html"><![CDATA[<h2>Document Structure</h2>
<p>This guide is organized into the following sections:</p>
<ol>
<li><a href="#bandwidth-requirement-for-signal-streaming">Bandwidth Requirements</a> - Explains the bandwidth calculation for I/Q signal streaming</li>
<li><a href="#ni-usrp-b2x0">NI USRP B2x0</a> - USB 3.0 connectivity</li>
<li><a href="#ni-usrp-n2x0">NI USRP N2x0</a> - 1GbE connectivity</li>
<li><a href="#ni-usrp-x3x0-series">NI USRP X3x0 Series</a> - dual-10GbE connectivity</li>
<li><a href="#ni-usrp-n3xx-series">NI USRP N3xx Series</a>
<ul>
<li><a href="#n300-and-n310">N300 and N310</a> - Dual-10GbE connectivity</li>
<li><a href="#n320-and-n321">N320 and N321</a> - Dual-10GbE or QSFP+ connectivity</li>
</ul>
</li>
<li><a href="#ni-usrp-e320">NI USRP E320</a> - 10GbE connectivity</li>
<li><a href="#ni-usrp-x4xx-series">NI USRP X4xx Series</a> - Dual-100GbE connectivity</li>
<li><a href="#commons-of-mpm-architecture-devices-e320n3xxx4xx">Commons of MPM Architecture Devices</a> - RJ45 and USB Console JTag ports of E320, N3xx and X4xx</li>
</ol>
<p>Each section provides detailed information about the connection methods, required hardware, and performance considerations for the respective USRP model.</p>
<h2>Bandwidth Requirement for Signal Streaming</h2>
<p>Understanding the bandwidth required for transmitting I/Q signals is crucial for comprehending why USRP devices continually upgrade their network interfaces, as well as understanding why <em>mismatched connections can trigger various transmission issues</em>.</p>
<p>Here is the equation, which calculates the <strong>total bandwidth requirement for transmitting I/Q signals</strong>:</p>
<p>Where:</p>
<ul>
<li> is the total bandwidth required (bits/s)</li>
<li> is the sampling rate (number of I/Q samples/s)</li>
<li> is the number of channels (This is hardware channel. Don't confuse with the <em>Wi-Fi channels</em>.)</li>
<li> is the number of bits per I/Q sample.  can be two values:
<ul>
<li>32-bit: Most USRPs use 16-bit I/Q wire-transfer format, i.e., 2 bytes for I and 2 bytes for Q;</li>
<li>16-bit: N2x0 also supports 8-bit I/Q wire-transfer format, however, this degrades the signal quality.</li>
</ul>
</li>
</ul>
<p>For example:</p>
<ul>
<li>The N2x0's master clock rate (MCR) is 100 MHz, however, sampling at 100 MHz sampling rate requires: , which is far beyond the capacity of a 1GbE connection.</li>
<li>The X3x0's MCR is 200 MHz, thus sampling the two channels at 200 MHz requires: . This is beyond the capacity of a single 10GbE connection, which is why the X3x0 adopts dual-SFP+ for dual-10GbE connections.</li>
<li>The X410's maximum MCR is 500 MHz (with <code>CG_400</code> FPGA image). The maximum bandwidth requirement for sampling 4 channels would be: . This massive bandwidth requirement explains why the X410 utilizes high-speed 100GbE connections to handle the data throughput.</li>
<li>In contrast, the HackRF One has a maximum sampling rate of 20 MHz and uses 8-bit I/Q transfer format (16 bits per sample): . This bandwidth requirement is well within the capacity of USB 2.0 (480 Mbps), which explains why HackRF One can operate effectively with a USB 2.0 connection.</li>
</ul>
<h2>NI USRP B2x0</h2>
<p>All B2x0 series devices are connected using a <strong>USB 3.0 cable</strong>. It is important to note that USB 3.0 cables can be identified by their <em>blue-colored "tongue"</em> and the presence of <em>five additional contacts inside the connector</em> compared to USB 2.0.</p>
<div style="text-align: center; margin: 20px 0;">
  
  <p style="font-style: italic; margin-top: 10px;">USB 3.0 cable for connecting NI USRP B2x0 devices</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>The USB 3.0 connection significantly limits the B2x0's maximum sampling rate, specifically to 28 MHz sampling rate for two channels, or 56 MHz for a single channel. To fully utilize the performance of the AD9361 frontend, consider the <a href="#ni-usrp-e320">NI USRP E320</a>, which avoids this limitation with a 10GbE connection.</p>
</div>
<h2>NI USRP N2x0</h2>
<p>The NI USRP N2x0 utilizes a <strong>1GbE Ethernet</strong> port for connectivity with the host computer. Simply use a Cat 6 Ethernet cable to connect the RJ45 ports of both the N2x0 and your host computer.</p>
<div style="text-align: center; margin: 20px 0;">
  
  <p style="font-style: italic; margin-top: 10px;">Cat 6 Ethernet Cable for connecting NI USRP N2x0 devices</p>
</div>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>As described in <a href="#bandwidth-requirement-for-signal-streaming">Bandwidth Computation</a>, the 1GbE connection significantly limits the N2x0's maximum sampling rate, specifically to 25 MHz with 16-bit wire-transfer format, or 50 MHz with 8-bit format.</p>
</div>
<h2>NI USRP X3x0 series</h2>
<p>The NI USRP X3x0 series devices (X300 and X310) use <strong>dual-SFP+ interfaces</strong> for signal streaming, supporting up to <strong>dual-10GbE</strong> connection with <code>XG</code> firmware. With this dual-10GbE connection, the X3x0 can transmit and receive I/Q streams from dual channels with up to 200 MSPS rate.</p>
<p>The following is our recommended connection solution based on our long-term practice, balancing performance, reliability, and low risk of physical damage.</p>
<h3>Cable &amp; Connector for 10GbE Connection</h3>
<p><strong>SFP+ DAC (Direct Attach Copper) Cable</strong> is our preferred choice. It features integrated SFP+ connectors on both ends, which enhances robustness and minimizes the risk of physical damage. It is both cost-effective and highly reliable. Additionally, since the SFP+ connectors are directly attached to the cable, you don't need to worry about losing adapters.</p>
<div style="text-align: center; margin: 20px 0;">
  
  <p style="font-style: italic; margin-top: 10px;">SFP+ DAC cable is recommended for connecting NI USRP X3x0 devices</p>
</div>
<p>Alternatives (not recommended):</p>
<ol>
<li>
<p><strong>RJ45 Cable + Dual SFP+ to RJ45 Adapters</strong>: This setup allows the use of standard Ethernet cables with SFP+ ports but tends to be more expensive. The adapters are separate components that need to be kept track of, and improper use of RJ45 adapters can damage the SFP+ interfaces.</p>
</li>
<li>
<p><strong>Separate Optical Cable and SFP+ Optical Transceivers</strong>: This option involves using individual optical cables and SFP+ optical transceivers at each end. It allows for significantly longer connection distances without compromising signal quality. However, it is more expensive and requires careful handling of the optical cables to avoid physical damage. There is also a risk of misplacing the adapters.</p>
</li>
<li>
<p><strong>SFP+ AOC Cable</strong>: Similar to the DAC cable, the SFP+ AOC (Active Optical Cable) incorporates fiber optics, which makes it more costly and more prone to physical damage.</p>
</li>
</ol>
<h3>10GbE NIC Solution</h3>
<h4>Quad-10GbE Connectivity for Desktop Computer</h4>
<p>For desktop computers, we strongly recommend the <strong>Intel X710-DA4 Quad-Port 10GbE</strong> Ethernet NIC. Unlike cheaper single or dual-port 10GbE NICs that limit you to a single USRP device, this quad-port NIC enables true multi-USRP operation. We have tested it to simultaneously operate two USRP X3x0 devices (or a single X410 device), supporting clock-synchronized four channels with a 200 MSPS rate (250 MSPS for the X410) for both transmission and reception. The system achieves impressive peak throughput rates of up to 2 GB/s for both sending and receiving data, making it significantly more capable than basic single/dual-10GbE NICs.</p>
<div style="text-align: center; margin: 20px 0;">
  
  <p style="font-style: italic; margin-top: 10px;">Intel X710-DA4 Quad-Port 10GbE NIC for desktop computers</p>
</div>
<h4>Single 10GbE Connectivity for Laptop with Thunderbolt 3+ Port</h4>
<p>For laptops equipped with Thunderbolt 3+ ports, we utilize the <strong>QNAP QNA-T310G1S Thunderbolt 3 to 10GbE SFP+</strong> NIC. This NIC has been tested to operate one USRP X3x0 device (or a single X410 device), supporting one channel with a 200 MSPS rate (250 MSPS for the X410) for both transmission and reception. The system can achieve peak throughput rates of up to 480 MB/s for both sending and receiving data.</p>
<div style="text-align: center; margin: 20px 0;">
  
  <p style="font-style: italic; margin-top: 10px;">QNAP QNA-T310G1S adapter for Thunderbolt 3+ laptops</p>
</div>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>We have tested that you CANNOT achieve dual-10GbE streaming by just using two such adapters.</p>
</div>
<h4>Dual 10GbE Connectivity for Laptop with Thunderbolt 3+ Port</h4>
<p>The <strong>Sonnet Twin10G SFP28 Thunderbolt Adapter</strong> is a <em>possible</em> solution. This adapter provides two SFP+ ports through a single Thunderbolt connection, potentially enabling the operation of a dual-channel USRP X3x0 device at full capacity.</p>
<div style="text-align: center; margin: 20px 0;">
  
  <p style="font-style: italic; margin-top: 10px;">Sonnet Twin10G SFP28 Thunderbolt Adapter for dual 10GbE connections</p>
</div>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>We do NOT test this solution ourselves. If you have successfully achieved dual-10GbE streaming using this device, please let us know and we will update this page.</p>
</div>
<h4>Single 10GbE Connectivity for Laptop without Thunderbolt 3+ Port</h4>
<p>For laptops without Thunderbolt 3+ ports, an <strong>M.2-to-10GbE adapter</strong> is perhaps the last available solution. However, this approach has serious limitations:</p>
<ol>
<li><strong>M.2 Slot Usage</strong>: Requires one M.2 slot, typically used for SSD storage</li>
<li><strong>Physical Risk</strong>: Cannot properly close the laptop's back panel, risking physical damage</li>
</ol>
<div style="text-align: center; margin: 20px 0;">
  
  <p style="font-style: italic; margin-top: 10px;">M.2-to-10GbE adapter - use with caution</p>
</div>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>We do NOT test this solution ourselves. For serious USRP-based research and development, we strongly recommend using either a desktop computer or a laptop with Thunderbolt 3+ ports. However, if you have successfully implemented this solution, please let us know and we will update this page.</p>
</div>
<h3>1GbE Mode: Severely Limited Performance</h3>
<p>The 1GbE mode (SFP+ Port 0 under <code>HG</code> firmware), which comes enabled by default for initial hardware setup purposes, severely restricts data streaming capabilities. As detailed in the <a href="#bandwidth-requirement-for-signal-streaming">Network Bandwidth Calculation</a>, this mode only supports a single channel with sampling rates below 25 MSPS - <strong>far below the device's full potential</strong>. Due to these significant bandwidth limitations, 1GbE mode should never be used for serious research or development work. It should only be utilized during initial device setup and basic connectivity testing.</p>
<h3>PCIe Interface? Not Recommended!</h3>
<p>Besides Ethernet connectivity, the NI USRP X3x0 series also provides a direct PCIe connection option through the "PCIe Connectivity Kit". However, we strongly advise <strong>AGAINST</strong> using this solution. The PCIe cable and host-side card are prohibitively expensive, and most importantly, <strong>this interface does NOT support multi-USRP combination</strong>.</p>
<h2>NI USRP N3xx Series</h2>
<h3>N300 and N310</h3>
<p>The N300 and N310 models feature the same <strong>dual-SFP+ interfaces</strong> as the X3x0 for signal streaming, supporting up to <strong>dual-10GbE</strong> connections. For details, refer to the <a href="#ni-usrp-x3x0-series">NI USRP X3x0 section</a>.</p>
<h3>N320 and N321</h3>
<p>The N320 and N321 models feature <strong>dual-SFP+ interfaces</strong> and an additional <strong>QSFP+ interface</strong>. For dual-SFP+ interfaces, refer to the <a href="#ni-usrp-x3x0-series">NI USRP X3x0 section</a>. Regardless of the connection type used, it is necessary to flash the <code>XG</code> firmware to achieve dual-10GbE connections.</p>
<h4>QSFP+ based Connectivity</h4>
<p>Although the QSFP+ interface (literally quad-lane SFP+) supports 4  10GbE, the N320 and N321 models only utilize two lanes, making it equivalent to a dual-10GbE connection.</p>
<p>We use a <strong>QSFP+ to 4x SFP+ Breakout Cable</strong> to connect N320 and N321 to the <a href="#quad-10gbe-connectivity-for-desktop-computer">host-side Intel X710 NIC</a>.</p>
<div style="text-align: center; margin: 20px 0;">
  
  <p style="font-style: italic; margin-top: 10px;">QSFP+ to 4x SFP+ Breakout Cable for connecting NI USRP N320 and N321</p>
</div>
<h3>MPM Architecture</h3>
<p>The N3xx utilizes the MPM (Modular Peripheral Manager) architecture. For details on properly using its high-speed SFP+/QSFP+ ports, RJ45 port, and USB Console JTAG port, please refer to the <a href="#commons-of-mpm-architecture-devices-e320n3xxx4xx">Commons of MPM Architecture Devices</a> section.</p>
<h2>NI USRP E320</h2>
<p>The E320 model utilizes a single <strong>SFP+ interface</strong> for signal streaming, supporting up to <strong>10GbE</strong> connection. This setup aligns with the connectivity approach used for the X3x0 model. For details, refer to the <a href="#ni-usrp-x3x0-series">NI USRP X3x0 section</a>.</p>
<p>The E320 utilizes the MPM (Modular Peripheral Manager) architecture. For details on properly using its high-speed 10GbE port, RJ45 port, and USB Console JTAG port, please refer to the <a href="#commons-of-mpm-architecture-devices-e320n3xxx4xx">Commons of MPM Architecture Devices</a> section.</p>
<h2>NI USRP X4xx Series</h2>
<p>The X4xx series devices, X410 and X440, are equipped with <strong>dual QSFP28 interfaces</strong>, supporting up to <strong>dual-100GbE</strong> connections. When paired with the <code>CG_400</code> firmware, the X410 supports simultaneous 500 MSPS Tx and Rx across four channels. When paired with the <code>CG_1600</code> firmware, the X440 supports up to 2 GSPS Tx and Rx on a single channel.</p>
<h3>Host-Side Ethernet Solutions</h3>
<p>We provide two proven solutions for connecting X4xx devices, each suited for different performance requirements.</p>
<h4>Solution 1: Dual-100GbE Connection for Desktop (Recommended)</h4>
<p>Our recommended solution utilizes the <strong>Mellanox/NVIDIA ConnectX-5 EX (MCX516A-CDAT)</strong> NIC. This dual-port QSFP28 card supports both 40GbE and 100GbE modes through its PCIe Gen4 x16 interface, offering maximum performance and future-proofing capabilities. This NIC has been <em>officially tested by NI to achieve the maximum performance</em> claimed by X4xx devices.</p>
<div style="text-align: center; margin: 20px 0;">
  
  <p style="font-style: italic; margin-top: 10px;">Mellanox/NVIDIA ConnectX-5 EX dual-port 100GbE NIC</p>
</div>
<p>For connectivity, we recommend using <strong>QSFP28 DAC cables</strong>. The number of cables needed depends on your FPGA image, See <a href="#choose-fpga-image">Choose FPGA Image</a>.</p>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>Solution 1 is recommended for high-performance applications but is exclusive to X4xx devices.</p>
</div>
<div style="text-align: center; margin: 20px 0;">
  
  <p style="font-style: italic; margin-top: 10px;">QSFP28 DAC cable for 100GbE connections</p>
</div>
<h4>Solution 2: Quad-10GbE Connection for Desktop</h4>
<p>We reuse the <a href="#quad-10gbe-connectivity-for-desktop-computer"><strong>Intel X710-DA4 Quad-Port 10GbE</strong></a> NIC for this solution. This approach is particularly valuable for working with multiple USRP generations, as the same NIC can be used with X3x0 and N3x0 devices. The connection requires a <a href="#qsfp-based-connectivity"><strong>QSFP+ to 4x SFP+ breakout cable</strong></a>, which connects the X4xx's QSFP28 Port 0 (operating in 40GbE with <code>X4_200</code> FPGA image) to the NIC's four SFP+ ports.</p>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>Although limited to 250 MSPS per channel, Solution 2 is more convenient for working with other USRP models, like E320, X3x0 and N3xx.</p>
</div>
<h4>Solution 3: Single/Dual-10GbE Connection for Laptop</h4>
<p>For laptops with Thunderbolt 3+ ports, we recommend using the same solutions as described in the <a href="#ni-usrp-x3x0-series">NI USRP X3x0 section</a>:</p>
<ol>
<li>
<p><strong>Single 10GbE Connection</strong>: Use the <a href="#single-10gbe-connectivity-for-laptop-with-thunderbolt-3-port"><strong>QNAP QNA-T310G1S Thunderbolt 3 to 10GbE SFP+</strong></a> NIC. This setup supports one channel with a 250 MSPS rate (with <code>X4_200</code> FPGA image) for both transmission and reception.</p>
</li>
<li>
<p><strong>Dual 10GbE Connection</strong>: The <a href="#dual-10gbe-connectivity-for-laptop-with-thunderbolt-3-port"><strong>Sonnet Twin10G SFP28 Thunderbolt Adapter</strong></a> is a <em>possible</em> solution for dual-channel operation. However, we have not tested this configuration ourselves.</p>
</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>For laptops without Thunderbolt 3+ ports, we strongly recommend using a desktop computer instead of attempting to use M.2-to-10GbE adapters. The performance limitations and physical risks associated with M.2 adapters make them unsuitable for serious USRP development.</p>
</div>
<h3>Choose FPGA Image</h3>
<p>The choice of FPGA image determines both the device's capabilities and its network requirements:</p>
<p>The standard performance images (<code>UC_200</code> and <code>X4_200</code>) support sampling rates up to 250 MSPS per channel. These images enable the built-in DUC/DDC (Digital Up/Down Conversion), allowing devices to operate at multiple sampling rates: 250, 125, 83.333, 62.5, 50, 25 MHz, etc. Note that <code>UC_200</code> works exclusively with Solution 1, while <code>X4_200</code> only works with Solution 2.</p>
<p>The high-performance images (<code>CG_400</code> and <code>CG_1600</code>) require Solution 1's dual-100GbE connectivity to achieve maximum hardware capabilities. The <code>CG_400</code> enables impressive 500 MSPS operation across all four channels on the X410, while the <code>CG_1600</code> pushes the X440 to its limits with up to 2 GSPS on a single channel. However, to achieve these peak performance levels, these images bypass the DUC/DDC (Digital Up/Down Conversion) functionality. As a result, unlike the <code>UC_200</code>/<code>X4_200</code> images that offer flexible sampling rate options, devices running high-performance images can only operate at their maximum sampling rates.</p>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>High-performance images place extreme computational demands on the host computer. Using them indiscriminately will lead to severe performance bottlenecks. Only use <code>CG_400</code> or <code>CG_1600</code> images when sampling rates above 250 MSPS are <em>truly needed</em> for your application.</p>
</div>
<h3>MPM Architecture</h3>
<p>The X4xx utilizes the MPM (Modular Peripheral Manager) architecture. For details on properly using its high-speed QSFP28+ ports, RJ45 port, and USB Console JTAG port, please refer to the <a href="#commons-of-mpm-architecture-devices-e320n3xxx4xx">Commons of MPM Architecture Devices</a> section.</p>
<h2>Commons of MPM Architecture Devices (E320/N3xx/X4xx)</h2>
<p>The E320, N3xx, and X4xx series devices employ an advanced architecture known as the Modular Peripheral Manager (MPM). This architecture integrates two key components:</p>
<ol>
<li><strong>Processing System (PS)</strong>: An ARM-based Linux system that handles device management, configuration, and control</li>
<li><strong>Programmable Logic (PL)</strong>: An FPGA that processes the I/Q signals and handles high-speed data streaming</li>
</ol>
<p>This dual-system design provides robust device management capabilities while maintaining high-performance signal processing. However, it also introduces some important considerations regarding device connectivity and management.</p>
<h3>RJ45 Port: Only for Management and Connectivity Test</h3>
<p>The RJ45 port provides direct access to the embedded Linux system (PS), enabling users to perform essential device management tasks such as firmware updates, network configuration, system monitoring, and initial setup verification.</p>
<p>While this port can technically handle signal streaming, we <strong>strongly recommend against using it for data transmission</strong> for several critical reasons:</p>
<ol>
<li><strong>Bandwidth Constraints</strong>: The 1GbE RJ45 connection significantly limits throughput, preventing the device from reaching its full potential</li>
<li><strong>Increased Latency</strong>: Data must traverse through the Linux system (PS) before reaching the FPGA (PL), adding substantial processing delays</li>
<li><strong>Degraded Performance</strong>: The data path between PS and PL creates performance bottlenecks, leading to timing inconsistencies and reduced data rates</li>
</ol>
<h3>USB Console JTAG: Emergency Recovery Interface</h3>
<p>The USB Console JTAG port enables <strong>direct serial communication with the embedded Linux system</strong>. While users typically interact with the device via SSH over Ethernet during normal operation, this port serves as a <strong>critical recovery mechanism</strong> in situations where SSH connectivity becomes unavailable.</p>
<h3>DANGER: Never Use SFP+/QSFP+/QSFP28+ for Device Management!</h3>
<p><strong>Never attempt device management operations through SFP+/QSFP+/QSFP28+ ports</strong>. These high-speed interfaces are designed exclusively for signal streaming, and using them for device management tasks can lead to serious consequences including abrupt connection termination, failed updates, device bricking, or permanent hardware damage. For all device management operations, <strong>always use the dedicated RJ45 port or USB Console JTAG interface</strong>.</p>
]]></content>
  </entry>
  <entry>
    <title type="text">Getting Started with NI USRP X4x0 Series</title>
    <id>https://ps.zpj.io/appnotes/x410-setup.html</id>
    <link href="https://ps.zpj.io/appnotes/x410-setup.html"/>
    <updated>2025-04-14T03:56:18.865Z</updated>
    <summary type="html"><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Although this guide is specifically written for the X4x0 series, the procedures described here are fully compatible with all USRP devices using the MPM (Modular Peripheral Manager) architecture, including the E320 and N3xx series.</p>
</div>]]></summary>
    <content type="html"><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Although this guide is specifically written for the X4x0 series, the procedures described here are fully compatible with all USRP devices using the MPM (Modular Peripheral Manager) architecture, including the E320 and N3xx series.</p>
</div>
<h2>Document Structure</h2>
<p>This document is structured into several key stages to guide you through setting up and utilizing the NI USRP X4x0 series device effectively:</p>
<ol>
<li><a href="#connect-the-device-to-the-internet-via-the-1gbe-port">Connect The Device to the Internet via the 1GbE Port</a></li>
<li><a href="#device-discovery">Device Discovery</a></li>
<li><a href="#test-internet-connection">Test Internet Connection</a></li>
<li><a href="#configure-proxy-settings">Configure Proxy Settings</a></li>
<li><a href="#upgrade-x4x0-filesystem">Upgrade X4x0 Filesystem</a></li>
<li><a href="#flash-fpga-image">Flash FPGA Image</a></li>
<li><a href="#next-steps">Next Steps</a></li>
</ol>
<h2>Connect The Device to the Internet via the 1GbE Port</h2>
<p>The NI USRP X4x0 device features two QSFP28+ interfaces and a single 1GbE Ethernet interface. The 1GbE port serves as the primary management interface, configured to obtain its IP address via the <strong>DHCP protocol</strong>. This port requires an internet connection for hardware initialization and firmware updates. While using a router with internet connectivity is a common approach, it adds unnecessary hardware and cables. More importantly, users with network access restrictions may find that a router doesn't provide full internet access. Therefore, we recommend establishing a direct connection between the 1GbE port and a host computer that shares its full-access internet connection. Below, we provide connection solutions for Mac, Ubuntu, and Windows platforms:</p>
<h3>Key Steps for Mac:</h3>
<ol>
<li>Connect the X4x0's 1GbE interface directly to your Mac using an Ethernet cable.</li>
<li>Open System Preferences and search for 'Sharing'.</li>
<li>Select "Internet Sharing" from the search results.</li>
<li>Choose your Wi-Fi network from the "<em>Share your connection from</em>" menu.</li>
<li>Select the Ethernet port connected to the X4x0 in the "<em>To computers using</em>" list.</li>
<li>Within a minute, the USRP should acquire an IP address and internet access.</li>
<li>For users with limited internet access, install proxy software with LAN Sharing capabilities on your Mac.</li>
</ol>
<h3>Key Steps for Ubuntu:</h3>
<ol>
<li>Connect the X4x0's 1GbE interface directly to your Ubuntu machine using an Ethernet cable.</li>
<li>Open System Preferences and navigate to Network settings.</li>
<li>Select the Ethernet connection that connects to the X4x0.</li>
<li>Go to the IPv4 Settings tab and select "Shared to other computers".</li>
<li>Click Save to apply the changes.</li>
<li>Within a minute, the USRP should acquire an IP address and internet access.</li>
<li>For users with limited internet access, install proxy software with LAN Sharing capabilities on your Ubuntu machine.</li>
</ol>
<h3>Key Steps for Windows:</h3>
<ol>
<li>Connect the X4x0's 1GbE interface directly to your PC using an Ethernet cable.</li>
<li>Open Control Panel and navigate to Network and Sharing Center &gt; Change adapter settings.</li>
<li>Right-click your internet connection (e.g., WiFi) and select "Properties".</li>
<li>Go to the Sharing tab and check "Allow other network users to connect through this computer's Internet connection".</li>
<li>Select the Ethernet connection used by the X4x0 from the dropdown menu under "Home networking connection".</li>
<li>Click OK to enable Internet Sharing.</li>
<li>Within a minute, the USRP should acquire an IP address and internet access.</li>
<li>For users with limited internet access, install proxy software with LAN Sharing capabilities on your PC.</li>
</ol>
<h2>Device Discovery</h2>
<p>After setting up the network sharing as described above, the X4x0 device should have obtained an IP address. You can verify this by running the <code>uhd_find_devices</code> command on your host computer. This command should display the detected X4x0 device with its IP address.</p>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>The <code>uhd_find_devices</code> command is provided by the USRP Hardware Driver (UHD). For PicoScenes users, the UHD driver will be automatically installed during the PicoScenes installation process. For detailed installation instructions, please refer to the <a href="/userManual/installation.html#picoscenes-software-installation" target="_blank">Installation</a> section.</p>
</div>
<h2>Test Internet Connection</h2>
<ol>
<li>
<p>SSH into the device using its IP address (using 192.168.2.2 as an example):</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>ssh root@192.168.2.2</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p><em>Note: The X4x0 device has no default SSH password</em>; simply press Enter when prompted to continue the login process.</p>
</li>
<li>
<p>Once connected via SSH, verify connectivity to your host computer (192.168.2.1 as an example):</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>ping 192.168.2.1</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>Test internet connectivity by pinging an external domain:</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>ping github.com</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
</ol>
<h2>Configure Proxy Settings</h2>
<p>If your network environment has restricted internet access, the <code>ping github.com</code> command may fail. To enable full internet access on the X4x0 device, follow these steps:</p>
<ol>
<li>
<p>On your host computer, enable the <strong>LAN Sharing</strong> feature in your VPN/proxy software.</p>
</li>
<li>
<p>SSH into the X4x0 device using its IP address.</p>
</li>
<li>
<p>Configure the proxy settings by running:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> https_proxy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">://&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">PROXY_SHARING_IP_AND_PORT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">http_proxy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">://&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">PROXY_SHARING_IP_AND_PORT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">all_proxy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">socks5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">://&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">PROXY_SHARING_IP_AND_PORT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>Replace <code>&lt;PROXY_SHARING_IP_AND_PORT&gt;</code> with your VPN/proxy sharing port (e.g., 198.168.2.1:1234).</p>
</li>
<li>
<p>Since the <code>ping</code> command uses ICMP protocol (which isn't proxied), it will still fail. Instead, use <code>wget</code> to verify connectivity:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">wget</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --method=HEAD</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> github.com</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>This command checks if you can reach <a href="http://github.com" target="_blank" rel="noopener noreferrer">github.com</a> by attempting to download just the page header.</p>
</li>
</ol>
<h2>Upgrade X4x0 Filesystem</h2>
<ol>
<li>
<p>SSH into the X4x0 device using its IP address.</p>
</li>
<li>
<p>Run the following command to upgrade to the latest file system:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">usrp_update_fs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> master</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>Reboot the system:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">reboot</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>After the reboot, SSH into the X4x0 device again.</p>
</li>
<li>
<p>Save the filesystem changes:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mender</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> commit</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
<li>
<p>Reboot the system one final time:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">reboot</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
</ol>
<h2>Flash FPGA Image</h2>
<p>Before flashing the FPGA image, you need to determine which image to use based on your device connection method and signal measurement requirements. For detailed information, please refer to <a href="connect-usrp#ni-usrp-x4xx-series">NI USRP X4xx Series</a>.</p>
<p>The following steps demonstrate how to flash the FPGA image, using the <code>X4_200</code> image as an example:</p>
<ol>
<li>
<p>SSH into the X4x0 device as previously described.</p>
</li>
<li>
<p>Run the following command to flash the FPGA image:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">uhd_image_loader</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --args=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'type=x4xx,mgmt_addr=127.0.0.1,fpga=X4_200'</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>This command flashes the device to use the 'x4_200' FPGA image.</p>
</li>
<li>
<p>Reboot the system:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">reboot</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
</ol>
<h2>Next Steps</h2>
<p>Congratulations! You have now completed the initial setup of your X4x0 device. For the next steps, you may want to:</p>
<ol>
<li>Learn about dual QSFP28 port connections by referring to the <a href="connect-usrp">Connecting NI USRP Devices</a> documentation.</li>
<li>Explore using PicoScenes to drive the X4x0 device for Wi-Fi ISAC research by checking out the <a href="scenarios">CSI Measurement using PicoScenes</a> documentation.</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title type="text">Wi-Fi Channelization</title>
    <id>https://ps.zpj.io/userManual/channels.html</id>
    <link href="https://ps.zpj.io/userManual/channels.html"/>
    <updated>2025-04-14T03:56:18.870Z</updated>
    <summary type="html"><![CDATA[<p>Many PicoScenes users are confused about how to correctly set channels for <code>array_prepare_for_picoscenes</code> and <code>PicoScenes</code> commands. On this page, we provide some examples, then we present a full Wi-Fi channel table for reference.</p>
<h2>Examples of Specifiying Channel for COTS NICs</h2>]]></summary>
    <content type="html"><![CDATA[<p>Many PicoScenes users are confused about how to correctly set channels for <code>array_prepare_for_picoscenes</code> and <code>PicoScenes</code> commands. On this page, we provide some examples, then we present a full Wi-Fi channel table for reference.</p>
<h2>Examples of Specifiying Channel for COTS NICs</h2>
<p>Some example commands for <em>array_prepare_for_picoscenes</em> are:</p>
<ol>
<li>If you want to set NIC &lt;NIC_ID&gt; to a 20 MHz bandwidth channel, for example 2412 MHz, run the following command in terminal:</li>
</ol>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">array_prepare_for_picoscenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> NIC_ID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "2412 HT20"</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> #&lt;- Don't miss the quotation mark (")</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ol start="2">
<li>If you want to set NIC &lt;NIC_ID&gt; to a 40 MHz bandwidth channel, for example the 5180 MHz channel centered at 5190 MHz, run the following command in terminal:</li>
</ol>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">array_prepare_for_picoscenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> NIC_ID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "5180 HT40+"</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> #&lt;- Don't miss the quotation mark (")</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ol start="3">
<li>If you want to set NIC &lt;NIC_ID&gt; to a 80 MHz bandwidth channel, for example the 5180 MHz channel centered at 5210 MHz, run the following command in terminal:</li>
</ol>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">array_prepare_for_picoscenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> NIC_ID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "5180 80 5210"</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> #&lt;- Don't miss the quotation mark (")</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ol start="4">
<li>If you want to set NIC &lt;NIC_ID&gt; to a 160 MHz bandwidth channel, for example the 5180 MHz channel centered at 5250 MHz, run the following command in terminal:</li>
</ol>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">array_prepare_for_picoscenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> NIC_ID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "5180 160 5250"</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> #&lt;- Don't miss the quotation mark (")</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><blockquote>
<p><strong>Note</strong>: See [naming_for_nics] for &lt;NIC_ID&gt;.</p>
</blockquote>
<h2>Examples of Specifiying Channel for SDR</h2>
<ol>
<li>If you want to user SDR &lt;SDR_ID&gt; to receive frames at a 20 MHz bandwidth channel, for example 2412 MHz:</li>
</ol>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PicoScenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "-d debug -i SDR_ID --freq 2412 -preset RX_CBW_20 --mode logger"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ol start="2">
<li>If you want to user SDR &lt;SDR_ID&gt; to receive frames at a 40 MHz bandwidth channel, for example the 5180 MHz channel centered at 5190 MHz:</li>
</ol>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PicoScenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "-d debug -i SDR_ID --freq 5190 -preset RX_CBW_40 --mode logger"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ol start="3">
<li>If you want to user SDR &lt;SDR_ID&gt; to receive frames at a 80 MHz bandwidth channel, for example the 5180 MHz channel centered at 5210 MHz:</li>
</ol>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PicoScenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "-d debug -i SDR_ID --freq 5210 -preset RX_CBW_80 --mode logger"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ol start="4">
<li>If you want to user SDR &lt;SDR_ID&gt; to receive frames at a 160 MHz bandwidth channel, for example the 5180 MHz channel centered at 5250 MHz:</li>
</ol>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PicoScenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "-d debug -i SDR_ID --freq 5250 -preset RX_CBW_160 --mode logger"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><blockquote>
<p><strong>Note</strong>: See [naming_for_usrp] for &lt;SDR_ID&gt;.</p>
</blockquote>
<h2>The Big Wi-Fi Channelization Table</h2>
<p>The following <em>Wi-Fi Channelization</em> table has 9 columns. Their meanings are:</p>
<ul>
<li>#: The channel number</li>
<li>Primary 20 MHz Channel: The center frequency of a 20 MHz bandwidth Wi-Fi channel.</li>
<li>Center Freq. of 40 MHz Channel: The center frequency of a 40 MHz bandwidth Wi-Fi channel. Wi-Fi 40 MHz bandwidth channel are realized by combining two adjacent 20 MHz channels, thus, the center frequencies of 40 MHz channels are the middles of two 20 MHz channels. One thing worth noting is that the 40 MHz channels are allocated to be non-overlapping, therefore, each 20 MHz channel only belongs to one 40 MHz channel.</li>
<li>Center Freq. of 80 MHz Channel: The center frequency of a 80 MHz bandwidth Wi-Fi channel. Like 40 MHz bandwidth channel, 80 MHz are realized by combining two adjacent 40 MHz channels, thus, the center frequencies of 80 MHz channels are the middles of two 40 MHz channels. One thing worth noting is that the 80 MHz channels are allocated to be non-overlapping, therefore, each 20 MHz channel only belongs to one 80 MHz channel.</li>
<li>Center Freq. of 160 MHz Channel: The center frequency of a 160 MHz bandwidth Wi-Fi channel. Like 40 MHz bandwidth channel, 160 MHz are realized by combining two adjacent 80 MHz channels, thus, the center frequencies of 160 MHz channels are the middles of two 80 MHz channels. One thing worth noting is that the 80 MHz channels are allocated to be non-overlapping, therefore, each 20 MHz channel only belongs to one 160 MHz channel.</li>
<li>Channel String of 20 MHz Channel: The channel string used to denote this 20 MHz channel, used for Linux <em>iw</em> and PicoScenes <em>array_prepare_for_picoscenes</em> commands.</li>
<li>Channel String of 40 MHz Channel: The channel string used to denote this 40 MHz channel, used for Linux <em>iw</em> and PicoScenes <em>array_prepare_for_picoscenes</em> commands. The "HT40+" means that the extension channel is towards the higher frequency, while "HT40-" means that the extension channel is towards the lower frequency.</li>
<li>Channel String of 80 MHz Channel: The channel string used to denote this 80 MHz channel, used for Linux <em>iw</em> and PicoScenes <em>array_prepare_for_picoscenes</em> commands. The three numbers are primary channel freq., channel bandwidth, and center channel freq.</li>
<li>Channel String of 160 MHz Channel: The channel string used to denote this 160 MHz channel, used for Linux <em>iw</em> and PicoScenes <em>array_prepare_for_picoscenes</em> commands. The three numbers are primary channel freq., channel bandwidth, and center channel freq.</li>
</ul>
<p>| # | Primary 20 MHz Channel (MHz) | Center Freq. of 40 MHz Channel (MHz) | Center Freq. of 80 MHz Channel (MHz) | Center Freq. of 160 MHz Channel (MHz) | Channel String of 20 MHz Channel | Channel String of 40 MHz Channel | Channel String of 80 MHz Channel | Channel String of 160 MHz Channel |<br>
|</p>
]]></content>
  </entry>
  <entry>
    <title type="text">Credits</title>
    <id>https://ps.zpj.io/userManual/credits.html</id>
    <link href="https://ps.zpj.io/userManual/credits.html"/>
    <updated>2025-04-14T03:56:18.887Z</updated>
    <summary type="html"><![CDATA[<h2>Development Team</h2>
<p>The creation of PicoScenes is the result of collaborative efforts of the following members.</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
</tr>
</thead>
</table>
<h3>Xidian University</h3>]]></summary>
    <content type="html"><![CDATA[<h2>Development Team</h2>
<p>The creation of PicoScenes is the result of collaborative efforts of the following members.</p>
<p>|  |  |  |<br>
|:</p>
]]></content>
  </entry>
  <entry>
    <title type="text">PicoScenes Software End User License Agreement</title>
    <id>https://ps.zpj.io/userManual/eula.html</id>
    <link href="https://ps.zpj.io/userManual/eula.html"/>
    <updated>2025-04-14T03:56:18.889Z</updated>
    <summary type="html"><![CDATA[<p><strong>IMPORTANT-READ CAREFULLY</strong>: This End User License Agreement ("EULA") is a legal agreement between (a) you (either an individual or a single entity) and (b) we (Dr. Zhiping Jiang) for the PicoScenes software accompanying this EULA, which includes PicoScenes software, Linux bash Script provided by PicoScenes software, PicoScenes MATLAB Toolbox, PicoScenes Python Toolbox, documentation and related academic research papers ("PICOSCENES SOFTWARE").</p>]]></summary>
    <content type="html"><![CDATA[<p><strong>IMPORTANT-READ CAREFULLY</strong>: This End User License Agreement ("EULA") is a legal agreement between (a) you (either an individual or a single entity) and (b) we (Dr. Zhiping Jiang) for the PicoScenes software accompanying this EULA, which includes PicoScenes software, Linux bash Script provided by PicoScenes software, PicoScenes MATLAB Toolbox, PicoScenes Python Toolbox, documentation and related academic research papers ("PICOSCENES SOFTWARE").</p>
<p><strong>By downloading, copying, installing, or using the PICOSCENES SOFTWARE, you agree to be bound by the terms of this EULA</strong>. If you do not agree to the following terms of this EULA, you must NOT download, copy, install or use the PICOSCENES SOFTWARE.</p>
<ol>
<li>
<p>LICENSE GRANT. This EULA grants you the following non-exclusive rights:</p>
<p>a. Access and Use. You may download, copy, install and use the PICOSCENES SOFTWARE.</p>
<p>b. Redistribution of The Generated Data or Files. You may copy, transfer, or publish the data or files that are generated by PICOSCENES SOFTWARE.</p>
<p>c. Develope Plugins. You may develop and use PicoScenes plugins. You agree to opensource your plugins under GPLv3 license.</p>
</li>
<li>
<p>ACADEMIC CITATION. You agree to cite the following research paper if the PICOSCENES SOFTWARE is in any form used in your research activity.</p>
<p>Zhiping Jiang, Tom H. Luan, Xincheng Ren, Dongtao Lv, Han Hao, Jing Wang, Kun Zhao, Wei Xi, Yueshen Xu, Rui Li, Eliminating the Barriers: Demystifying Wi-Fi Baseband Design and Introducing the PicoScenes Wi-Fi Sensing Platform, in IEEE Internet of Things Journal (IEEE IOT-J), doi: <a href="https://doi.org/10.1109/JIOT.2021.3104666" target="_blank" rel="noopener noreferrer">10.1109/JIOT.2021.3104666</a>.</p>
</li>
<li>
<p>DATA COLLECTION. You agree to fill and share real information about your affiliation and research team in the <code>PSLP_UIC</code> script. You agree that we collect and use statistics on selected information on your computer, including but not limited to computer hardware information, non-personal files on your computer, commands to PICOSCENES SOFTWARE, and data or files generated by the PICOSCENES SOFTWARE.</p>
</li>
<li>
<p>LIMITATIONS ON REVERSE ENGINEERING, FUNCTIONAL ANALYSIS OR ALTERATION. You agree that you will not perform reverse engineering, de-compilation, or all kinds of functional analysis of the PICOSCENES SOFTWARE. You also agree that you will not rename, edit or create any derivative works from the PICOSCENES SOFTWARE.</p>
</li>
<li>
<p>SPECTRUM REGULATION. The PICOSCENES SOFTWARE is a research-purpose software. If you use PICOSCENES SOFTWARE to transmit wireless signal, it is your responsibility to make sure that you are in compliance with all laws for the country, frequency, and power levels in which the device is used. Additionally, some countries regulate reception in certain frequency bands. Again, it is your responsibility to maintain compliance with all local laws and regulations.</p>
</li>
<li>
<p>TERMINATION UPON YOUR FAILURE. <strong>You agree that we can terminate this EULA immediately and without notice if you fail to comply with any term of this EULA.</strong> Upon such termination, you agree that we can block your access to PICOSCENES SOFTWARE, and you also agree that we can share the details of your failure to the public for indefinite time. The shown information may include your name, your affiliation, our analysis, and the proof of your failure.</p>
</li>
<li>
<p>UPDATE OF THIS EULA. From time to time, we may change the terms of this EULA. We will notify you of such change in software changelog and documentation. Your continued use of the PICOSCENES SOFTWARE will indicate your agreement to the change.</p>
</li>
<li>
<p>DISCLAIMERS.</p>
<p>a. We expressly disclaims any warranty for the PICOSCENES SOFTWARE. The PICOSCENES SOFTWARE and any related documentation is provided "as is" without warranty of any kind, either express or implied, including, without limitation, the implied warranties or merchantability, fitness for a particular purpose, or noninfringement. The entire risk arising out of use or performance of the PICOSCENES SOFTWARE remains with you.<br>
b. In no event shall we be liable for any damages whatsoever (including, without limitation, damages for computer system, communication hardware, loss of business information, or any other pecuniary loss) arising out of the use of or inability to use this product, even if we has been advised of the possibility of such damages.</p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title type="text">Features &amp; License</title>
    <id>https://ps.zpj.io/userManual/features_pricing.html</id>
    <link href="https://ps.zpj.io/userManual/features_pricing.html"/>
    <updated>2025-04-14T03:56:18.892Z</updated>
    <summary type="html"><![CDATA[<p>PicoScenes is a feature-rich, powerful, and user-friendly middleware for Wi-Fi ISAC research. This page outlines the notable features of PicoScenes and provides links to their usage and explanations.</p>
<p>To ensure the sustainable development of the PicoScenes platform, we have implemented a licensing mechanism for these features. <strong>The majority of features are available free of charge</strong>, while a license fee is required for certain advanced features, <em>only for SDR frontends</em>.</p>]]></summary>
    <content type="html"><![CDATA[<p>PicoScenes is a feature-rich, powerful, and user-friendly middleware for Wi-Fi ISAC research. This page outlines the notable features of PicoScenes and provides links to their usage and explanations.</p>
<p>To ensure the sustainable development of the PicoScenes platform, we have implemented a licensing mechanism for these features. <strong>The majority of features are available free of charge</strong>, while a license fee is required for certain advanced features, <em>only for SDR frontends</em>.</p>
<p>In the sections below, we cover three main topics:</p>
<ul>
<li><a href="#features-of-the-picoscenes-platform">Features of The PicoScenes Platform</a></li>
<li><a href="#introducing-picoscenes-licensing-plan">Introducing PicoScenes Licensing Plan</a></li>
<li><a href="#pricing--payment">Pricing &amp; Payment</a></li>
</ul>
<blockquote>
<p>如果您不想费劲地看英文，请开启浏览器的翻译功能，省脑子。</p>
</blockquote>
<h2>Features of The PicoScenes Platform</h2>
<p>We categorize the distinctive features of the PicoScenes platform into three tables: <a href="#platform-features">Platform Features</a>, <a href="#hardware-features">Hardware Features</a>, and <a href="#data--api-access">Data &amp; API Access</a>. In these tables, we also list the availability of each feature for free users (in the <em>Free</em> columns) and Pro users (in the <em>Pro</em> columns). A detailed comparison between the Free and Pro licenses can be found in <a href="#introducing-picoscenes-licensing-plan">Introducing PicoScenes Licensing Plan</a> and <a href="#pricing--payment">Pricing &amp; Payment</a>.</p>
<h3>Platform Features</h3>
<p>| Feature | Description | Free | Pro |<br>
|</p>
]]></content>
  </entry>
  <entry>
    <title type="text">Gallery</title>
    <id>https://ps.zpj.io/userManual/gallery.html</id>
    <link href="https://ps.zpj.io/userManual/gallery.html"/>
    <updated>2025-04-14T03:56:18.896Z</updated>
    <summary type="html"><![CDATA[<h2>PicoScenes Driving USRP B210 and HackRF One to Inject 11AX Packets and Measuring CSI (1 &amp; 2)</h2>
<p>This is the fourth and fifth short demo video presented at the <a href="https://zpj.io/give-tutorial-talk-on-picoscenes-at-cps-iot-week-2022/" target="_blank" rel="noopener noreferrer">CPS-IOT Week'2022 tutorial</a>.</p>]]></summary>
    <content type="html"><![CDATA[<h2>PicoScenes Driving USRP B210 and HackRF One to Inject 11AX Packets and Measuring CSI (1 &amp; 2)</h2>
<p>This is the fourth and fifth short demo video presented at the <a href="https://zpj.io/give-tutorial-talk-on-picoscenes-at-cps-iot-week-2022/" target="_blank" rel="noopener noreferrer">CPS-IOT Week'2022 tutorial</a>.</p>
<p>YouTube:</p>
<iframe width="800" height="450" src="https://www.youtube.com/embed/0x-ri8323es" title="PicoScenes Driving USRP B210 and HackRF One to Inject 11AX Packets and Measuring CSI" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
<iframe width="800" height="450" src="https://www.youtube.com/embed/OKwOsIKSCGo" title="PicoScenes Driving USRP B210 and HackRF One to Inject 11AX Packets and Measuring CSI 2" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
<p>Bilibili:</p>
<iframe src="//player.bilibili.com/player.html?aid=383047528&amp;bvid=BV1734y1Y7Yp&amp;cid=570756427&amp;page=1" scrolling="no" border="0" framespacing="0" allowfullscreen="true" style="width: 800px; height: 450px; max-width: 100%; align:center; padding:20px 0;" frameborder="no"> </iframe>
<iframe src="//player.bilibili.com/player.html?aid=383047528&amp;bvid=BV1k44y1u7TC&amp;cid=570756427&amp;page=1" scrolling="no" border="0" framespacing="0" allowfullscreen="true" style="width: 800px; height: 450px; max-width: 100%; align:center; padding:20px 0;" frameborder="no"> </iframe>
<h2>Live CSI measurement and plot using HackRF One</h2>
<p>PicoScenes supports the most cost-efficient SDR devices, HackRF One. With this only 200$ SDR, Wi-Fi sensing researchers can perform 802.11a/g/n/ac/ax packet injection, receive standard 20-MHz bandwidth packet in realtime, and access the complete PHY-layer information. For more information, please visit <a href="https://zpj.io/picoscenes-supports-hackrf/" target="_blank" rel="noopener noreferrer">PicoScenes now officially supports HackRF One</a>.</p>
<p>YouTube:</p>
<iframe width="800" height="450" src="https://www.youtube.com/embed/L4OCDkU7Fnk" title="PicoScenes Now Supports HackRF One" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
<p>Bilibili:</p>
<iframe src="//player.bilibili.com/player.html?aid=383047528&amp;bvid=BV17Z4y127Jx&amp;cid=570756427&amp;page=1" scrolling="no" border="0" framespacing="0" allowfullscreen="true" style="width: 800px; height: 450px; max-width: 100%; align:center; padding:20px 0;" frameborder="no"> </iframe>
<h2>AX210 NIC in STA mode measuring the 160-MHz bandwidth CSI and live-plotting</h2>
<p>This is the first short demo video presented at the <a href="https://zpj.io/give-tutorial-talk-on-picoscenes-at-cps-iot-week-2022/" target="_blank" rel="noopener noreferrer">CPS-IOT Week'2022 tutorial</a>.</p>
<p>YouTube:</p>
<iframe width="800" height="450" src="https://www.youtube.com/embed/UaCHtzW3Pm8" title="AX210 NIC in STA mode measuring 160-MHz BW CSI and live-plotting" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
<p>Bilibili:</p>
<iframe src="//player.bilibili.com/player.html?aid=383047528&amp;bvid=BV1Qa411a7GV&amp;cid=570756427&amp;page=1" scrolling="no" border="0" framespacing="0" allowfullscreen="true" style="width: 800px; height: 450px; max-width: 100%; align:center; padding:20px 0;" frameborder="no"> </iframe>
<h2>AX210 NIC in Monitor Mode measuring CSI for all overheard frames and live-plotting</h2>
<p>This is the second short demo video presented at the <a href="https://zpj.io/give-tutorial-talk-on-picoscenes-at-cps-iot-week-2022/" target="_blank" rel="noopener noreferrer">CPS-IOT Week'2022 tutorial</a>.</p>
<p>YouTube:</p>
<iframe width="800" height="450" src="https://www.youtube.com/embed/btUCq68cews" title="AX210 NIC in Monitor Mode measuring CSI for all overheard frames and live-plotting" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
<p>Bilibili:</p>
<iframe src="//player.bilibili.com/player.html?aid=383047528&amp;bvid=BV1F3411N7kt&amp;cid=570756427&amp;page=1" scrolling="no" border="0" framespacing="0" allowfullscreen="true" style="width: 800px; height: 450px; max-width: 100%; align:center; padding:20px 0;" frameborder="no"> </iframe>
<h2>AX210 NIC Measuring CSI in Monitor mode w/ 20/160-MHz BW Packet Injection from Another AX210</h2>
<p>This is the third short demo video presented at the <a href="https://zpj.io/give-tutorial-talk-on-picoscenes-at-cps-iot-week-2022/" target="_blank" rel="noopener noreferrer">CPS-IOT Week'2022 tutorial</a>.</p>
<p>YouTube:</p>
<iframe width="800" height="450" src="https://www.youtube.com/embed/_X6JVb69-MA" title="AX210 NIC  Measuring CSI in Monitor mode w/ 20/160-MHz BW Packet Injection from Another AX210" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
<p>Bilibili:</p>
<iframe src="//player.bilibili.com/player.html?aid=383047528&amp;bvid=BV1sr4y187bL&amp;cid=570756427&amp;page=1" scrolling="no" border="0" framespacing="0" allowfullscreen="true" style="width: 800px; height: 450px; max-width: 100%; align:center; padding:20px 0;" frameborder="no"> </iframe>
<h2>AX210 NIC Measuring CSI in Monitor mode w/ Round-trip CSI and Frequency Hopping</h2>
<p>This is the last short demo video presented at the <a href="https://zpj.io/give-tutorial-talk-on-picoscenes-at-cps-iot-week-2022/" target="_blank" rel="noopener noreferrer">CPS-IOT Week'2022 tutorial</a>.</p>
<p>YouTube:</p>
<iframe width="800" height="450" src="https://www.youtube.com/embed/xlHs4KfVSJQ" title="PicoScenes driving two AX210 NICs to perform round-trip CSI measuring with freq. hopping in 6G band" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
<p>Bilibili:</p>
<iframe src="//player.bilibili.com/player.html?aid=383047528&amp;bvid=BV1xS4y1h7Bk&amp;cid=570756427&amp;page=1" scrolling="no" border="0" framespacing="0" allowfullscreen="true" style="width: 800px; height: 450px; max-width: 100%; align:center; padding:20px 0;" frameborder="no"> </iframe>
<h2>CSI measurements over a large and continuous spectrum by QCA9300</h2>
<p>PicoScenes unlocks the arbitrary tuning for carrier frequency for the QCA9300 NIC. More specifically, QCA9300 can operate at any carrier frequency between 2.2 to 2.9 GHz in the 2.4 GHz band and 4.4 to 6.1 GHz in the 5 GHz band. PicoScenes uses the <code>--freq</code> command option to specify the carrier frequency, e.g., <code>--freq 4900e6</code>.<br>
For more details, you may refer to <a href="/userManual/resources.html#the-academic-paper-of-picoscenes" target="_blank">The academic paper of PicoScenes</a>.</p>
<p></p>
<p>{% include note.html content="Why do the CSI measurements misalign with each other? Do you wanna stitch them together? You may refer to <a href="/userManual/resources.html#the-academic-paper-of-picoscenes" target="_blank">The academic paper of PicoScenes</a>." %}</p>
<h2>CSI measurements under tunable and wide baseband bandwidths</h2>
<p>For the QCA9300 NIC, PicoScenes unlocks the fine-grained tuning for baseband bandwidth from <code>5 to 80 MHz</code> with a minimum step of 2.5 MHz.<br>
PicoScenes also provides <code>up to 200</code> MHz baseband bandwidth on the SDR devices.<br>
PicoScenes uses <code>--rate</code> command option to specify the baseband bandwidth for both the commercial Wi-Fi NIC and SDR frontends, e.g., <code>--rate 55e6</code>.<br>
For more details, you may refer to <a href="/userManual/resources.html#the-academic-paper-of-picoscenes" target="_blank">The academic paper of PicoScenes</a>.</p>
<p></p>
<h2>Large spectrum stitching using two QCA9300 NICs</h2>
<p>This short video demonstrates the spectrum scanning and stitching using the PicoScenes platform and two QCA9300 NICs. I upload the same video to YouTube (for China mainland users).</p>
<p>YouTube:</p>
<iframe width="800" height="450" src="https://www.youtube.com/embed/6KKxpc7fh2w" title="Large Spectrum Stitching using Two QCA9300 NICs" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
<h2>Large spectrum stitching using A USRP X310 and a QCA9300 NIC</h2>
<p>This short video demonstrates the spectrum scanning and stitching using the PicoScenes platform with one USRP X310 and a QCA9300 NIC. I upload the same video to YouTube (for China mainland users).</p>
<p>YouTube:</p>
<iframe width="800" height="450" src="https://www.youtube.com/embed/RZUQ5Fm4LLc" title="Large spectrum stitching using A USRP X310 and a QCA9300 NIC" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
<h2>Installation of PicoScenes MATLAB Toolbox and drag'n'drop style .csi file parsing</h2>
<p>YouTube:</p>
<iframe width="800" height="450" src="https://www.youtube.com/embed/zgDIn1cdvCo" title="Installation of PicoScenes MATLAB Toolbox and drag'n'drop style .csi file parsing" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
<p>Bilibili:</p>
<iframe src="//player.bilibili.com/player.html?aid=383047528&amp;bvid=BV1NY4y1C79T&amp;cid=570756427&amp;page=1" scrolling="no" border="0" framespacing="0" allowfullscreen="true" style="width: 800px; height: 450px; max-width: 100%; align:center; padding:20px 0;" frameborder="no"> </iframe>
<h2>27-NIC Wi-Fi sensing array</h2>
<p>To fully demonstrate the capacity of multi-NIC CSI measurement, we setup a 27-NIC Wi-Fi sensing array. The array contains 27 QCA9300 NICs and 10 1-to-3 PCI-E bridge adapters. For more details, you may refer to the evaluation part of <a href="/userManual/resources.html#the-academic-paper-of-picoscenes" target="_blank">The academic paper of PicoScenes</a>.</p>
<p></p>
]]></content>
  </entry>
  <entry>
    <title type="text">Supported Hardware</title>
    <id>https://ps.zpj.io/userManual/hardware.html</id>
    <link href="https://ps.zpj.io/userManual/hardware.html"/>
    <updated>2025-04-14T03:56:18.899Z</updated>
    <summary type="html"><![CDATA[<p>Exclusive for China mainland users: PicoScenes团队很荣幸得到NI的认可与支持，获得NI USRP授权销售资格(<a href="/userManual/features_pricing.html#%E4%B8%8Eni%E4%B8%AD%E5%9B%BD%E5%90%88%E4%BD%9C%E8%B5%A0%E9%80%81-pslp-pro-dbl%E8%AE%B8%E5%8F%AF%E8%AF%81-gifting-pslp-pro-dbl-licenses-in-collaboration-with-ni-china" target="_blank">与NI中国合作赠送 PSLP-PRO-DBL许可证 (Gifting PSLP-PRO-DBL Licenses in Collaboration with NI China)</a>)。您可以在这个页面查看我们的NI USRP销售方案，<a href="/userManual/ni.html" target="_blank">Selling NI USRP Devices (与NI合作销售USRP系列产品)</a>。</p>]]></summary>
    <content type="html"><![CDATA[<p>Exclusive for China mainland users: PicoScenes团队很荣幸得到NI的认可与支持，获得NI USRP授权销售资格(<a href="/userManual/features_pricing.html#%E4%B8%8Eni%E4%B8%AD%E5%9B%BD%E5%90%88%E4%BD%9C%E8%B5%A0%E9%80%81-pslp-pro-dbl%E8%AE%B8%E5%8F%AF%E8%AF%81-gifting-pslp-pro-dbl-licenses-in-collaboration-with-ni-china" target="_blank">与NI中国合作赠送 PSLP-PRO-DBL许可证 (Gifting PSLP-PRO-DBL Licenses in Collaboration with NI China)</a>)。您可以在这个页面查看我们的NI USRP销售方案，<a href="/userManual/ni.html" target="_blank">Selling NI USRP Devices (与NI合作销售USRP系列产品)</a>。</p>
<p><strong>CSI-Extractable Hardware Supported by The PicoScenes Platform</strong></p>
<p>| Hardware Model | USRP-based SDR (X410 as example) | HackRF One | AX210/AX200 | QCA9300 | IWL5300 |<br>
|</p>
]]></content>
  </entry>
  <entry>
    <title type="text">PicoScenes Installation &amp; Upgrade</title>
    <id>https://ps.zpj.io/userManual/installation.html</id>
    <link href="https://ps.zpj.io/userManual/installation.html"/>
    <updated>2025-04-14T03:56:18.900Z</updated>
    <summary type="html"><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果您不想费劲地看英文，请开启浏览器的翻译功能，省脑子。</p>
</div>
<h2>Hardware Installation</h2>
<p>PicoScenes currently supports 4 commercial Wi-Fi NIC models and SDR devices, including the AX200 (or AX201), AX210(or AX211), QCA9300 and IWL5300, all models of USRP devices, and the HackRF One.</p>]]></summary>
    <content type="html"><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果您不想费劲地看英文，请开启浏览器的翻译功能，省脑子。</p>
</div>
<h2>Hardware Installation</h2>
<p>PicoScenes currently supports 4 commercial Wi-Fi NIC models and SDR devices, including the AX200 (or AX201), AX210(or AX211), QCA9300 and IWL5300, all models of USRP devices, and the HackRF One.</p>
<p>The most welcomed feature of PicoScenes is the concurrent operation of multiple RF frontends, i.e., simultaneous CSI measurement or packet injection using a commercial Wi-Fi NIC/SDR array. To help you get the hardware ready, we share some hardware preparation experience, mainly focusing on the multi-devices setup.</p>
<h3>Installation of (Multiple) Commercial Wi-Fi NICs</h3>
<p>We recommend three methods for installing multiple NICs.</p>
<ol>
<li>
<p><strong>PCI-E 1x Adapter-based Multi-NIC Installation</strong></p>
<p>With the help of the <code>Mini PCI-E to PCI-E 1x adapter</code> or <code>M.2 to PCI-E 1x adapter</code>, you can install multiple NICs directly on the motherboard of a desktop PC.</p>
<p>However, there are usually only 2 or 3 spare PCI-E slots left for the Wi-Fi NICs. To overcome this issue, you may choose <strong>cryptocurrency mining motherboards</strong>, such as the MSI B360-F Pro. These types of motherboards have dozens of PCI-E 1x slots, and you can use <strong>PCI-E slot risers</strong> to install <em>dozens</em> of Wi-Fi NICs on a single motherboard.</p>
</li>
<li>
<p><strong>Multi-Mini PCI-E/M.2 Slots-Based Multi-NIC Installation</strong></p>
<p>This is the most convenient approach for installing multiple NICs. The onboard Mini PCI-E or M.2 slots eliminate the need for PCI-E 1x adapters.<br>
With some hardware and software tricks, we modified an old laptop model, the ThinkPad X201, and installed two Mini PCI-E/M.2-based Wi-Fi NICs. Moreover, <strong>the X201 enables you to install three SMA-based external antennas!</strong> The following photo shows our modified ThinkPad X201 equipped with both the QCA9300 and IWL5300 NICs and three external antennas. The laptop can also install an AX210/AX200 using an M.2-to-Mini PCI-E converter.</p>
<p></p>
</li>
<li>
<p><strong>PCI-E Bridge Adapter-Based Multi-NIC Installation</strong></p>
<p>The PCI-E bridge adapter can split one PCI-E connection into multiple connections, similar to a PCI-E hub. Therefore, you can connect multiple NICs to only one of the motherboard's PCI-E slots via the bridge adapter.</p>
<p>Moreover, you can build a multi-layer hierarchy of bridge adapters and install NICs to all the leaf nodes. In this way, you can theoretically install over 100 Wi-Fi NICs in your system. To validate the feasibility of this approach, we built a 27-NIC Wi-Fi ISAC array using a 3-layer hierarchy of 1-to-3 PCI-E bridge adapters. The figure below shows the picture and layout of the 27-NIC array. The entire array is encapsulated in an IKEA box.</p>
<p></p>
</li>
</ol>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ol>
<li>
<p>Do you want to access research-ready hardware out of the box? Do you want to skip the unfamiliar hardware selection, installation, and tricky setup?</p>
</li>
<li>
<p>Get them from our Taobao shop <a href="https://shop235693252.taobao.com/" target="_blank" rel="noopener noreferrer">PicoScenes软硬件与服务</a>! Our shop sells the modified ThinkPad X201 and all supported Wi-Fi NICs.</p>
</li>
</ol>
</div>
<h3>Installation of (Multiple) USRP Devices</h3>
<p>The installation, usage, and optimization of USRP are much more complex than that of a COTS NIC. Therefore, please follow the steps below to configure and verify the USRP hardware.</p>
<h4>Installing PicoScenes Software</h4>
<p>Before setting up the USRP hardware, you should install the PicoScenes software first. Please follow the instructions in the <a href="#picoscenes-software-installation">PicoScenes Software Installation</a> section to install PicoScenes. Please note that PicoScenes depends on specific version of UHD. If you have previously installed your own compiled version of UHD, please uninstall it before proceeding.</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>The driver installation or build process listed on the USRP Official site can be complicated and prone to errors. To simplify this process, we have built and packaged the PicoScenes software using the USRP driver shipped with the Ubuntu system. Therefore, by installing PicoScenes software, you will also be installing the USRP driver.</p>
</div>
<h4>Configuring USRP Hardware</h4>
<p>You should set up your hardware according to the USRP official <a href="https://files.ettus.com/manual/page_devices.html" target="_blank" rel="noopener noreferrer">Devices &amp; Usage Manual</a>. Read and follow the Get Started sections according to your USRP models.</p>
<ul>
<li><a href="https://kb.ettus.com/B200/B210/B200mini/B205mini" target="_blank" rel="noopener noreferrer">USRP Hardware Driver and USRP Manual: B200/B210/B200mini/B205mini</a></li>
<li><a href="https://files.ettus.com/manual/page_usrp2.html" target="_blank" rel="noopener noreferrer">USRP Hardware Driver and USRP Manual: USRP2 and N2x0 Series</a></li>
<li><a href="https://files.ettus.com/manual/page_usrp_x3x0.html" target="_blank" rel="noopener noreferrer">USRP Hardware Driver and USRP Manual: USRP X3x0 Series</a></li>
<li><a href="https://files.ettus.com/manual/page_usrp_n3xx.html" target="_blank" rel="noopener noreferrer">USRP Hardware Driver and USRP Manual: USRP N3x0 Series</a></li>
<li><a href="https://files.ettus.com/manual/page_usrp_x4xx.html" target="_blank" rel="noopener noreferrer">USRP Hardware Driver and USRP Manual: USRP X4x0 Series</a></li>
<li><a href="https://files.ettus.com/manual/page_multiple.html" target="_blank" rel="noopener noreferrer">Multiple USRP configuration</a></li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>The PicoScenes software installer installs the UHD software. So, you skip the UHD installation or source code building steps.</p>
</div>
<h5>Suggestions for NI USRP Hardware Setup</h5>
<p>Based on our experience, we have the following suggestions for setting up USRP hardware:</p>
<ul>
<li>
<p>X3x0 Series: It is <strong>not recommended to use a PCI-E cable-based connection</strong> due to inefficiency in both hardware and cost. This method has two major drawbacks. Firstly, the PCI-E-based connection is hardware-inefficient as it requires one cable or extension card for each X3x0 device. This can be very expensive and may not be feasible for a desktop PC with limited spare PCI-E slots. Secondly, the UHD software does not support a hybrid combination of the PCI-E-based link and the GbE/10GbE-based link, further limiting its application.</p>
</li>
<li>
<p>X3x0 and N3x0 Series: We highly <strong>recommend using 10GbE connection and the Intel X710 Quad Port 10 Gb Ethernet Adapter</strong>. This is a reasonable and cost-effective solution for connecting multiple X3x0 and N3x0 devices. It occupies only one full-size PCI-E slot but provides four 10GbE ports, allowing you to connect up to four X3x0 or N3x0 devices.</p>
</li>
<li>
<p>N2x0 Series: Consider using MIMO cables to achieve MIMO and phased array capabilities. However, note that MIMO cables have a narrow bandwidth.</p>
</li>
<li>
<p>Multiple USRP Devices: As clearly stated in <a href="https://files.ettus.com/manual/page_multiple.html" target="_blank" rel="noopener noreferrer">Multiple USRP configuration</a>, UHD only supports combining multiple USRP devices of the same model. Currently, the N2x0 and X3x0 series are the only combination-ready models.</p>
</li>
<li>
<p>Daughterboard Selection: For both the N2x0 and X3x0 series, it is advisable to consider using the UBX-40/UBX-160 daughterboard. Although these daughterboards are expensive, they are the only ones that support daughterboard-level phase synchronization, which is necessary for PicoScenes to achieve phased-array functionality.</p>
</li>
<li>
<p>IP Address Allocation: Pay special attention to the allocation of IP addresses. For network-based connections, the Ethernet NIC port and the connected USRP must be in the same subnet. If they are not in the same subnet, the UHD device discovery program 'uhd_find_devices' may still find the devices, but PicoScenes will not be able to initialize them correctly.</p>
</li>
<li>
<p>Clock Synchronization: For clock synchronization, the OctoClock-G from EttusResearch is a cost-effective choice. It can distribute GPS-disciplined clocks to up to eight USRP devices.</p>
</li>
</ul>
<h4>Verifying Hardware Installation</h4>
<p>To ensure that your USRP is ready for PicoScenes, follow the four-stage verification process outlined below.</p>
<h5>Verifying Hardware Connection</h5>
<p>Open a terminal and execute the following command:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">uhd_find_devices</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>The uhd_find_devices command is provided by UHD as a device discovery program. It will list all the connected USRP devices. If your device is not displayed, please refer to the USRP manual for troubleshooting steps to check the hardware connection.</p>
<h5>Verifying Firmware Version</h5>
<p>Open a terminal and execute the following command:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">uhd_usrp_probe</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>The uhd_usrp_probe command prints the hardware details of all connected devices and checks whether the devices’ firmware versions are consistent with the UHD software installed on the host computer. If any inconsistencies are detected, you can use the uhd_image_loader command to flash the latest firmware to the USRP.</p>
<p>To update the firmware for USRP N2x0 devices, run the following command:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">uhd_image_loader</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --args=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"type=usrp2"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>For USRP X3x0 devices, use the following command to update the firmware:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">uhd_image_loader</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --args=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"type=x300"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h5>Verifying Signal Reception (RX)</h5>
<p>To check if your USRP can receive the signal, you can use UHD's <code>uhd_fft</code> command. Execute the following command:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">uhd_fft</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --args=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"ADDRESS_STRING"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 2412e6</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 20e6</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>Replace <code>ADDRESS_STRING</code> with the USRP identification string. For more details, refer to the <a href="https://files.ettus.com/manual/page_identification.html#id_identifying_common" target="_blank" rel="noopener noreferrer">USRP Common Device Identifiers</a>.</p>
<h5>Tx/Rx Self-Calibration (for USRP N2x0, X3x0, and N3x0 users)</h5>
<p>Uncalibrated daughterboards can introduce <code>serious</code> signal distortion. It is recommended to perform calibrations for EACH daughterboard following the instructions in the <a href="https://files.ettus.com/manual/page_calibration.html" target="_blank" rel="noopener noreferrer">Device Calibration</a> section. Calibrating the frequency range that covers your intended measurements will help achieve the best signal quality.</p>
<h3>Installation of (Multiple) HackRF One</h3>
<p>The installation and verification process for HackRF One is relatively simpler compared to USRP. Please follow the steps below to complete the installation and verification.</p>
<h4>Installing The PicoScenes Software</h4>
<p>Before setting up the HackRF One hardware, you should install the PicoScenes software first. you should follow <a href="#picoscenes-software-installation">PicoScenes Software Installation</a> section to install the PicoScenes software.</p>
<h4>Verifying Hardware Connection</h4>
<p>The HackRF One is a USB 2.0 interfaced SDR device, so you can simply plug in the device. To check the connection, run the following command:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">SoapySDRUtil</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --find=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"driver=hackrf"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>If the connection is successful, you will see the device information displayed.</p>
<h2>PicoScenes Software Installation</h2>
<p>Before installing the PicoScenes software, please make sure you meet the following prerequisites:</p>
<h3>Prerequisites</h3>
<ul>
<li>You <strong>agree to be bound by</strong> <a href="/userManual/eula.html" target="_blank">PicoScenes Software End User License Agreement</a>.</li>
<li>Your computer is X86-64 architecture. <em>We don't support ARM CPU, despite planned.</em></li>
<li>Your CPU must support at least the SSE4.2 instruction set, and AVX2 is recommended.</li>
<li>You should have at least 4 GB of memory to prevent out-of-memory crashes.</li>
<li>Secure Boot must be disabled. You can find the switch in the BIOS settings.</li>
<li>The operating system must be <strong>Ubuntu 22.04 LTS or its variants</strong> (Linux Mint, Kubuntu, Xubuntu, etc.).</li>
<li>The operating system must be installed on real hardware. Virtualization is not supported.</li>
<li>An internet connection is required during the installation process and for regular build expiration checking.</li>
<li>You need permission to install the latest kernel version. PicoScenes depends on the latest kernel versions. During the installation and subsequent upgrades, your system will be forced to update to the latest kernel version.</li>
<li>(Optional) The latest version of MATLAB on Linux/macOS/Windows: PicoScenes MATLAB Toolbox (PMT) supports the R2020b or above versions of MATLAB on Linux/macOS/Windows platforms.</li>
</ul>
<h3>Install PicoScenes via <em>apt</em> command</h3>
<p>Please ensure that your system meets all the requirements mentioned earlier before proceeding with the installation.</p>
<ol>
<li>
<p><strong>Download and install the PicoScenes Source Updater:</strong></p>
<ul>
<li>For Ubuntu 22.04 platform (or its variants), please click <a href="https://ps2204.zpj.io/PicoScenes/22.04/x86_64/pool/main/picoscenes-source-updater.deb" target="_blank" rel="noopener noreferrer">PicoScenes Source Updater (Ubuntu 22.04 version)</a> and choose <em>Open with "GDebi Package Installer"</em></li>
<li>Click <em>Install Package</em></li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>The PicoScenes Source Updater registers the PicoScenes software repository to your system, enabling you to install and automatically upgrade PicoScenes using the apt command.</p>
</div>
</li>
<li>
<p><strong>Update the cache of apt repositories:</strong></p>
<p>Run the following command:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> update</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>After this command completes, you can verify the result by running <code>apt list picoscenes-&lt;Press TAB Key&gt;</code> in the terminal. You should see at least the following packages listed:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">picoscenes-all</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   picoscenes-platform</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   picoscenes-source-updater</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  picoscenes-driver-modules-XXXX</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>The presence of these <code>picoscenes-xxx</code> packages indicates that the PicoScenes repository has been successfully registered on your system.</p>
</li>
<li>
<p><strong>Install the PicoScenes software</strong></p>
<p>Run the following command:</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> picoscenes-all</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>After a few minutes of package downloading, the PicoScenes End User License Agreement (EULA) message will appear in the terminal. Read the EULA and decide if you agree to the listed terms. You can use the up/down arrow keys to view the full content and press TAB to move the cursor to the <code>&lt;Ok&gt;</code> option. Press <code>&lt;Ok&gt;</code> to confirm that you have read and agree to the EULA.</p>
<p></p>
<p>After confirming the EULA, you will be prompted with a Yes or No question regarding accepting the EULA terms. Choose <code>&lt;No&gt;</code> to terminate the installation immediately or <code>&lt;Yes&gt;</code> to continue with the installation.</p>
<p></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>If you accidentally choose <code>&lt;No&gt;</code>, the installer will provide instructions on how to restart the installation process.</p>
</div>
</li>
<li>
<p><strong>Reboot your system</strong></p>
<p>Reboot your system to ensure that the installation is validated.</p>
</li>
<li>
<p><strong>The first run</strong></p>
<p>Open a terminal and run the command  <code>PicoScenes</code> (<strong>case sensitive!</strong>). After launching PicoScenes, it will crash with an error message saying, "This is a scheduled exception...". Yes, <strong>it IS a planned crash</strong>. Run <code>PicoScenes</code> again, and the error should no longer appear.</p>
<p>Since PicoScenes is designed to be a <code>service</code> program, it will not quit automatically. You can press <code>Ctrl+C</code> in the terminal to exit the program.</p>
</li>
</ol>
<h2>Install PicoScenes MATLAB Toolbox Core</h2>
<p>PicoScenes MATLAB Toolbox Core (PMT-Core) is used for parsing the <code>.csi files</code> generated by the PicoScenes program.</p>
<h3>Prerequisites and Preparations</h3>
<p>Since the PicoScenes MATLAB Toolbox Core (PMT-Core) and the PicoScenes main program utilize the same <a href="https://github.com/wifisensing/RXS-Parsing-Core" target="_blank" rel="noopener noreferrer">RxS-Parsing-Core library</a> to parse the CSI data, PMT-Core has dependencies on specific combinations of operating systems (OS), MATLAB versions, and C/C++ compilers. The table below lists the proven working environments.</p>
<p>| | Linux | macOS | Windows |<br>
|</p>
]]></content>
  </entry>
  <entry>
    <title type="text">PicoScenes MATLAB Toolbox Core</title>
    <id>https://ps.zpj.io/userManual/matlab.html</id>
    <link href="https://ps.zpj.io/userManual/matlab.html"/>
    <updated>2025-04-14T03:56:18.920Z</updated>
    <summary type="html"><![CDATA[<h2>Prerequisites</h2>
<p>Since the PMT-Core and the PicoScenes main program rely on the <a href="https://github.com/wifisensing/RXS-Parsing-Core" target="_blank" rel="noopener noreferrer">RxS-Parsing-Core library</a> to parse the CSI data, C/C++ compilers are required by PMT in different OSes. The following table shows the recommended (and also tested) working environments.</p>]]></summary>
    <content type="html"><![CDATA[<h2>Prerequisites</h2>
<p>Since the PMT-Core and the PicoScenes main program rely on the <a href="https://github.com/wifisensing/RXS-Parsing-Core" target="_blank" rel="noopener noreferrer">RxS-Parsing-Core library</a> to parse the CSI data, C/C++ compilers are required by PMT in different OSes. The following table shows the recommended (and also tested) working environments.</p>
<ul>
<li>Recommended Working Environments for PicoScenes MATLAB Toolbox</li>
</ul>
<p>|                  | Linux                               | macOS                          | Windows                |<br>
|</p>
]]></content>
  </entry>
  <entry>
    <title type="text"></title>
    <id>https://ps.zpj.io/userManual/newIndex.html</id>
    <link href="https://ps.zpj.io/userManual/newIndex.html"/>
    <updated>2025-04-14T03:56:18.925Z</updated>
    <summary type="html"><![CDATA[<p>PicoScenes is a Wi-Fi PHY-layer software that enhances modern Wi-Fi integrated sensing and communication (Wi-Fi ISAC) research across several crucial areas:</p>
<ul>
<li><strong>Channel State Information (CSI) Measurement</strong>: Facilitates CSI measurement using SDR devices (NI USRP and HackRF One) and commercial Wi-Fi NICs (Intel AX210, Intel 5300, and Qualcomm 9300).</li>
<li><strong>Advanced and Standard-Compliant Transceiving</strong>: Guarantees high-performance, standard-compliant transmission and reception of 802.11a/g/n/ac/ax/be frames using SDR and Wi-Fi NICs. PicoScenes ensures full interoperability with commercial Wi-Fi NICs, enabling highly reciprocal transceiving capabilities.
<ul>
<li>With SDR devices, it supports up to 8x8 MIMO/MU-MIMO, punctured-OFDMA, 320-MHz channel bandwidth (CBW), and 4096-QAM modulation.</li>
<li>With Wi-Fi NICs, specifically the Intel AX210 NIC, it fully supports the Wi-Fi 6E standard, including 802.11ax, 160-MHz CBW, and the complete 6-GHz band access.</li>
</ul>
</li>
<li><strong>Full PHY-Layer Control</strong>: Provides arbitrary control over carrier frequency, bandwidth, and per-antenna Tx/Rx gain, nanosecond-level precise timing for Tx/Rx, hardware impairment simulation (CFO, SFO, I/Q imbalance), Tx precoding or beamforming (per-subcarrier/antenna/spatial-stream), and various baseband modem controls.</li>
<li><strong>Rich PHY-Layer Information</strong>: Delivers detailed information such as raw I/Q data, OFDM symbols, and SFO/CFO/STO on a per-packet basis.</li>
<li><strong>Powerful Control</strong>: Offers Python bindings and C++ plugin mechanism, enabling complex hardware control, data-analysis, and Tx/Rx operations in real-time.</li>
<li><strong>Easy-To-Use and Time Saving</strong>: Supports Ubuntu, macOS, and Windows platforms, SDR devices Plug'n'Play, accompanied by the PicoScenes-MATLAB/Python-Toolbox, live data display, UDP forwarding, and an easy-to-use GUI control.</li>
<li><strong>Elevated Research Starting Point</strong>: Offers out-of-the-box Python bindings for deep learning and data science, fully open-sourced RTT-style Wi-Fi ranging, AoA/ToF estimation, multi-purposed DSP library, and SISO/MIMO Wi-Fi radar capabilities.</li>
</ul>]]></summary>
    <content type="html"><![CDATA[<p>PicoScenes is a Wi-Fi PHY-layer software that enhances modern Wi-Fi integrated sensing and communication (Wi-Fi ISAC) research across several crucial areas:</p>
<ul>
<li><strong>Channel State Information (CSI) Measurement</strong>: Facilitates CSI measurement using SDR devices (NI USRP and HackRF One) and commercial Wi-Fi NICs (Intel AX210, Intel 5300, and Qualcomm 9300).</li>
<li><strong>Advanced and Standard-Compliant Transceiving</strong>: Guarantees high-performance, standard-compliant transmission and reception of 802.11a/g/n/ac/ax/be frames using SDR and Wi-Fi NICs. PicoScenes ensures full interoperability with commercial Wi-Fi NICs, enabling highly reciprocal transceiving capabilities.
<ul>
<li>With SDR devices, it supports up to 8x8 MIMO/MU-MIMO, punctured-OFDMA, 320-MHz channel bandwidth (CBW), and 4096-QAM modulation.</li>
<li>With Wi-Fi NICs, specifically the Intel AX210 NIC, it fully supports the Wi-Fi 6E standard, including 802.11ax, 160-MHz CBW, and the complete 6-GHz band access.</li>
</ul>
</li>
<li><strong>Full PHY-Layer Control</strong>: Provides arbitrary control over carrier frequency, bandwidth, and per-antenna Tx/Rx gain, nanosecond-level precise timing for Tx/Rx, hardware impairment simulation (CFO, SFO, I/Q imbalance), Tx precoding or beamforming (per-subcarrier/antenna/spatial-stream), and various baseband modem controls.</li>
<li><strong>Rich PHY-Layer Information</strong>: Delivers detailed information such as raw I/Q data, OFDM symbols, and SFO/CFO/STO on a per-packet basis.</li>
<li><strong>Powerful Control</strong>: Offers Python bindings and C++ plugin mechanism, enabling complex hardware control, data-analysis, and Tx/Rx operations in real-time.</li>
<li><strong>Easy-To-Use and Time Saving</strong>: Supports Ubuntu, macOS, and Windows platforms, SDR devices Plug'n'Play, accompanied by the PicoScenes-MATLAB/Python-Toolbox, live data display, UDP forwarding, and an easy-to-use GUI control.</li>
<li><strong>Elevated Research Starting Point</strong>: Offers out-of-the-box Python bindings for deep learning and data science, fully open-sourced RTT-style Wi-Fi ranging, AoA/ToF estimation, multi-purposed DSP library, and SISO/MIMO Wi-Fi radar capabilities.</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title type="text">Selling NI USRP Devices</title>
    <id>https://ps.zpj.io/userManual/ni.html</id>
    <link href="https://ps.zpj.io/userManual/ni.html"/>
    <updated>2025-04-14T03:56:18.926Z</updated>
    <summary type="html"><![CDATA[<h2>从我们这里采购USRP设备的优势：放心、省钱、省事</h2>
<p>NI USRP系列产品属于卖方市场，性能高端但价格昂贵。由于NI对销售网络有很强的控制，各授权经销商的报价几乎完全一致。各授权经销商主要通过客户网络、集成以及技术服务等方面进行差异化竞争，而非价格竞争。选择从PicoScenes团队采购USRP系列产品可以享受以下三个好处：<strong>放心、省钱、省事</strong>。具体来说：</p>
<ol>
<li><strong>保证NI官方渠道、100%正品</strong>：我们珍视NI对PicoScenes的认可与支持，因此我们保证向NI的客户提供全新、完好的正品USRP产品;</li>
<li><strong>免费赠送PSLP-PRO-DBL许可证</strong>：该许可证包含了PicoScenes的完整功能，开箱即用，无需在线验证;</li>
<li><strong>提供NI原厂1年质保+延保服务(可选、推荐)</strong>：NI原厂提供为期一年的免费维修保修服务，不限次数，不区分人为因素。此外，NI原厂还提供最长4年的超值延保服务;</li>
<li><strong>无额外渠道溢价</strong>: 我们不会在信息不对称的情况下追求过高的利润。我们所有的NI USRP产品都以官方指导价销售，没有额外的渠道溢价。</li>
</ol>]]></summary>
    <content type="html"><![CDATA[<h2>从我们这里采购USRP设备的优势：放心、省钱、省事</h2>
<p>NI USRP系列产品属于卖方市场，性能高端但价格昂贵。由于NI对销售网络有很强的控制，各授权经销商的报价几乎完全一致。各授权经销商主要通过客户网络、集成以及技术服务等方面进行差异化竞争，而非价格竞争。选择从PicoScenes团队采购USRP系列产品可以享受以下三个好处：<strong>放心、省钱、省事</strong>。具体来说：</p>
<ol>
<li><strong>保证NI官方渠道、100%正品</strong>：我们珍视NI对PicoScenes的认可与支持，因此我们保证向NI的客户提供全新、完好的正品USRP产品;</li>
<li><strong>免费赠送PSLP-PRO-DBL许可证</strong>：该许可证包含了PicoScenes的完整功能，开箱即用，无需在线验证;</li>
<li><strong>提供NI原厂1年质保+延保服务(可选、推荐)</strong>：NI原厂提供为期一年的免费维修保修服务，不限次数，不区分人为因素。此外，NI原厂还提供最长4年的超值延保服务;</li>
<li><strong>无额外渠道溢价</strong>: 我们不会在信息不对称的情况下追求过高的利润。我们所有的NI USRP产品都以官方指导价销售，没有额外的渠道溢价。</li>
</ol>
<h2>我们推荐的USRP型号</h2>
<p>NI USRP有许多型号，我们基于自己团队的长期使用经验和Wi-Fi ISAC研究的需求，优先推荐并销售以下NI USRP产品。当然，作为NI授权经销商，<em>我们也销售其它其他型号</em>。</p>
<h3>NI USRP B210</h3>
<p><a href="https://www.ettus.com/all-products/ub210-kit/" target="_blank" rel="noopener noreferrer">USRP B210</a> 是NI USRP系列的入门神器，它功能丰富，非常适合新用户。它提供两对Tx/Rx通道，支持70-6000 MHz频谱以及最大61.44/30.72MHz采样（单/双通道）。它采用AD9361前端，支持2x2 MIMO，支持Radar mode，提供细粒度的采样频率指定、自动I/Q校正(<em>无需手动校正!</em>)、自带AGC，支持外接时钟同步，采用USB 3.0连接和供电，可支持笔记本电脑作为上位机在外场直接工作。它能够满足在最大40 MHz CBW下进行各种精细的Wi-Fi/5G/6G ISAC研究的需求。</p>
<p>USRP B210原厂仅以祼板销售，<a href="https://www.ettus.com/all-products/usrp-b200-enclosure/" target="_blank" rel="noopener noreferrer">B210 NI原厂外壳</a> 单独售卖，并且很贵(1500元)，但还是推荐用户购买，原因如下：</p>
<ol>
<li>长期的USRP使用经验告诉我们，<strong>USRP非常脆弱，如果不使用外壳，极容易损坏</strong>。</li>
<li>NI原厂外壳在拍摄论文照片时更加直观和美观。</li>
</ol>
<h3>NI USRP X310母板搭配双UBX-160子板</h3>
<p><a href="https://www.ettus.com/all-products/X310-KIT/" target="_blank" rel="noopener noreferrer">NI USRP X310母板</a> 搭配两块 <a href="https://www.ettus.com/all-products/ubx160/" target="_blank" rel="noopener noreferrer">UBX-160子板</a>，可以实现10-6000 MHz范围内最大双通道200 MHz采样能力，支持Radar mode，时钟同步方面，它支持输出时钟信号也支持输入外部时钟信号，支持USRP多设备组合功能，可实现多机、多通道条件下的时钟同步。它提供双口10 GbE连接能力，可通过10 GbE以太网网卡连接台式电脑或通过10GbE-to-Thunderbolt3转换器连接带有Thunderbolt3接口的笔记本电脑，可满足Wi-Fi 160 MHz CBW下多种收发和测量任务。</p>
<h3>NI USRP-2974</h3>
<p><a href="https://www.ni.com/zh-cn/shop/model/usrp-2974.html" target="_blank" rel="noopener noreferrer">NI USRP-2974</a> 这个型号是NI品牌预组装的产品，它的实质是：NI USRP X310母板 + 两块UBX-160子板 + GPSDO（GPS驯服时钟）+ 一台4核心2GHz主频i7(6822EQ)小主机。相比上述X310+Dual UBX-160方案，在保留双10 GbE连接的基础上，由于机器内置了一台中等性能的小主机，该型号具备开箱即用的能力。</p>
<h3>NI USRP X310母板搭配双TwinRx子板</h3>
<p><a href="https://www.ettus.com/all-products/X310-KIT/" target="_blank" rel="noopener noreferrer">NI USRP X310母板</a> 搭配两块 <a href="https://www.ettus.com/all-products/twinrx/" target="_blank" rel="noopener noreferrer">TwinRx子板</a>，可以实现10-6000 MHz范围内最大4通道100 MHz Rx采样能力。请注意，TwinRx子板仅具备Rx，不提供Tx（所以称为TwinRx）。时钟同步方面，它支持输出时钟信号也支持输入外部时钟信号，支持USRP多设备组合功能，可实现多机、多通道条件下的时钟同步。它提供双口10 GbE连接能力，可通过10 GbE以太网网卡连接台式电脑或通过10GbE-to-Thunderbolt3转换器连接带有Thunderbolt3接口的笔记本电脑，可满足Wi-Fi 80 MHz CBW下多种收发和测量任务。</p>
<p>NI有一个更有性价比的开箱即4x4 MIMO Tx/Rx的硬件，是 <a href="https://www.ettus.com/all-products/usrp-n310/" target="_blank" rel="noopener noreferrer">NI USRP N310</a>，它相比NI USRP X310母板搭配双TwinRx子板的方案更便宜，还支持4通道Tx，但是 <strong>我们不推荐Wi-Fi ISAC用户采购NI USRP N310</strong>。原因在于，NI USRP N310的master clock仅有122.88, 125, 153.6 MSPS/s这三种，这几个频率与Wi-Fi的 20/40/80/160 MHz带宽均不匹配。为了在Wi-Fi的带宽工作，NI USRP N310始终需要基带重采样，性能损失严重，故不推荐。</p>
<h3>NI USRP N320/N321</h3>
<p><a href="https://www.ettus.com/all-products/usrp-n320/" target="_blank" rel="noopener noreferrer">NI USRP N320</a> 的总体性能略高于X310或USRP-2974平台，它可实现3-6000 MHz范围，最大双通道250 MHz采样，支持Radar mode，时钟同步方面，它支持输出时钟信号也支持输入外部时钟信号，支持USRP多设备组合功能，可实现多机、多通道条件下的时钟同步。它提供双口10GbE连接能力，可通过10 GbE以太网网卡连接台式电脑或通过10 GbE-to-Thunderbolt 3转换器连接带有Thunderbolt3接口的笔记本电脑，可满足Wi-Fi 160 MHz CBW下多种收发和测量任务。</p>
<p>N320的主要特色是，多台N320可以与 <a href="https://www.ettus.com/all-products/usrp-n321/" target="_blank" rel="noopener noreferrer">NI USRP N321</a> 搭配使用，实现载波相位级同步。PicoScenes提供了Tx Precoding API，支持基于N321/N320组合的Wi-Fi beamforming/phased array相关研究。</p>
<h3>NI USRP X410</h3>
<p><a href="https://www.ettus.com/all-products/usrp-x410/" target="_blank" rel="noopener noreferrer">NI USRP X410</a> 是USRP系统目前性能最强的设备，它可在1-7200 MHz范围，最大4通道400 MHz采样(<a href="/userManual/scenarios.html#listening-to-4080160320-mhz-bandwidth-channels" target="_blank">Listening to 40/80/160/320 MHz Bandwidth Channels</a>, <a href="/userManual/scenarios.html#transmitting-4080160320-mhz-bandwidth-80211agnacaxbe-format-frames" target="_blank">Transmitting 40/80/160/320 MHz bandwidth 802.11a/g/n/ac/ax/be Format Frames</a>)。为支持最大1.6 GSPS的基带信号传输，X410配备了100 GbE连接。时钟同步方面，它内置GPSDO，也支持输出时钟信号也支持输入外部时钟信号(<a href="/userManual/scenarios.html#clock-synchronization-across-multiple-usrp-devices" target="_blank">Clock Synchronization across Multiple USRP Devices</a>)，支持USRP多设备组合功能(<a href="/userManual/scenarios.html#combining-multiple-usrp-devices" target="_blank">Combining Multiple USRP devices</a>)，支持Radar mode(<a href="/userManual/scenarios.html#wi-fi-radar-80211bf-mono-static-sensing-mode-with-80211agnacaxbe-frame-format" target="_blank">Wi-Fi Radar (802.11bf Mono-Static Sensing Mode) with 802.11a/g/n/ac/ax/be Frame Format</a>)，可实现多机、多通道条件下的时钟同步。</p>
<h3>NI OctoClock-G</h3>
<p><a href="https://www.ettus.com/all-products/OctoClock-G/" target="_blank" rel="noopener noreferrer">NI OctoClock-G</a> 是一台非常好用的时钟分配单元。它内置一块GPSDO（GPS驯服时钟），在GPS接入时，可提供 &lt;1 ppb水平的频率精度；并支持将此时钟分配给最多8个设备。它也提供了开关，可以在内置的GPSDO和外置时钟源切换。</p>
<h2>其它要考虑的因素</h2>
<h3>我需要买几台设备？</h3>
<p>您在确定设备采购台数时，可考虑以下因素：</p>
<ol>
<li>Radar Mode(<a href="/userManual/scenarios.html#wi-fi-radar-80211bf-mono-static-sensing-mode-with-80211agnacaxbe-frame-format" target="_blank">Wi-Fi Radar (802.11bf Mono-Static Sensing Mode) with 802.11a/g/n/ac/ax/be Frame Format</a>)是对USRP新用户非常友好的模式，仅需要一台NI USRP B210就可以进行感知研究；</li>
<li>为了构成基于USRP的Tx-Rx链路，请考虑采购2台；当然，如果您预备有限，也可以使用一台USRP和商用Wi-Fi网卡进行Wi-Fi ISAC研究；</li>
<li>初次采购时，请考虑是否需要OctoClock-G时钟，用于时钟同步、相位对齐等操作（Radar Mode收发链路自同步，无需采购时钟！）；</li>
<li>NI USRP系列每年两次调（涨）价，并且幅度不低，每次在5-10%左右。所以如果经费允许，可考虑增加采购量；</li>
</ol>
<h3>您需要对货期有预估</h3>
<p>NI USRP系列完全由NI在马来西亚或匈牙利的工厂按订单生产，从生产、寄出、清关最终交付您手上，大约需要4-6周时间（一般来说4周概率高）。如果您有一些关键的项目时间节点，请提前规划。</p>
<h3>强烈推荐您采购NI原厂延保服务</h3>
<p>根据我们的使用经验以及来自NI的反馈，USRP系列设备确实非常容易损坏，尤其是对于新手用户。NI原厂为正品设备自出库之日起提供1年原厂质保，该质保为不区分人为因素、不限次数的免费维修服务。<strong>但是，一旦过保，单次维护费用则是设备售价的30%</strong>！例如一台X310套装12万元左右，不论如何轻微的损坏，单次维修费用都高达3.6万元左右，属实极为昂贵。这对广大科研用户会有两个突出的问题：</p>
<ol>
<li>维修价格昂贵，经费不易申请；</li>
<li>有经费也想维修，但因申报书中没有预算维修费，因无法报销而无法维修；</li>
</ol>
<p>NI原厂提供 <strong>随硬件一次性购买</strong> 的USRP延保服务：该延保服务随设备一并采购，<strong>每延长一年质保仅额外支付售价的5%，最多延长4年。</strong> 例如，X310套装售价12万元左右，如果您想延长4年质保（总共5年），则额外支付2.4万元，总计14.4万元。延保期间，保修政策不变，这意味着两点优势：</p>
<ol>
<li>以20%的费用，获得5年内不限次数、不区别人为因素的维修服务；这相比单次维修30%的维修费，<strong>堪称良心</strong></li>
<li>质保+延保期间，无需担心高昂的维修费以及报销等问题。</li>
</ol>
<h2>报价与支付方式</h2>
<h3>USRP产品的厂商指导价 v.s 我们的报价规则</h3>
<ul>
<li>
<p>厂商指导价：USRP产品相对小众，NI推荐各授权经销商以"询价"方式接触用户。该模式对大部分用户并不友好，因为用户并不知道NI的产品指导价，所以用户处于信息明显不对称的劣势位置，或者说——韭菜。但实际上，<strong>USRP的厂商指导价一直是公开透明的</strong>，公式很简单： NI或Ettus官网的美元或人民币价格 * 1.13（税）+ [NI对Ettus产品根据型号额外加的费用大约1000~10000元] = 厂商指导价。例如 USRP B210型号，<a href="https://www.ettus.com/all-products/ub210-kit/" target="_blank" rel="noopener noreferrer">Ettus官网售价2101美元</a>（23年11月），按以上公式算得17979元，接近厂商指导价格（23年11月）；再例如NI USRP-2974型号，<a href="https://www.ni.com/zh-cn/shop/model/usrp-2974.html" target="_blank" rel="noopener noreferrer">NI官网售价169495元人民币</a>（23年11月），按以上公式算得191529元人民币，即接近厂商指导价格（23年11月）。</p>
</li>
<li>
<p>我们的报价：我们遵守NI的规则，不公开准确的厂商指导价格。但为了兑现"不追求过分利润"的承诺，同时消除询价过程的沟通成本，我们统一 <em>对厂商指导价格百位四舍五入</em>，作为我们这里的一口价报价。</p>
</li>
</ul>
<h3>我们的报价（2024年5月）</h3>
<p>| 型号 | 报价（元）| 延保1年 | 延保2年 | 延保3年 | 延保4年 |<br>
|</p>
]]></content>
  </entry>
  <entry>
    <title type="text">Open Source Software Licenses</title>
    <id>https://ps.zpj.io/userManual/opensource_license.html</id>
    <link href="https://ps.zpj.io/userManual/opensource_license.html"/>
    <updated>2025-04-14T03:56:18.930Z</updated>
    <summary type="html"><![CDATA[<h2>The 3-Clause BSD License</h2>
<p>Copyright (C) 2012-2014, 2018-2020 Intel Corporation<br>
Copyright (C) 2013-2015 Intel Mobile Communications GmbH<br>
Copyright (C) 2016-2017 Intel Deutschland GmbH</p>
<p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>]]></summary>
    <content type="html"><![CDATA[<h2>The 3-Clause BSD License</h2>
<p>Copyright (C) 2012-2014, 2018-2020 Intel Corporation<br>
Copyright (C) 2013-2015 Intel Mobile Communications GmbH<br>
Copyright (C) 2016-2017 Intel Deutschland GmbH</p>
<p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>
<ol>
<li>
<p>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</p>
</li>
<li>
<p>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</p>
</li>
<li>
<p>Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</p>
</li>
</ol>
<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>
<h2>Apache License V2.0</h2>
<p>Apache License<br>
Version 2.0, January 2004<br>
<a href="http://www.apache.org/licenses/" target="_blank" rel="noopener noreferrer">http://www.apache.org/licenses/</a></p>
<p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p>
<ol>
<li>
<p>Definitions.</p>
<p>"License" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. "Licensor" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.</p>
<p>"Legal Entity" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, "control" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.</p>
<p>"You" (or "Your") shall mean an individual or Legal Entity exercising permissions granted by this License.</p>
<p>"Source" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.</p>
<p>"Object" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.</p>
<p>"Work" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).</p>
<p>"Derivative Works" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain<br>
separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.</p>
<p>"Contribution" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, "submitted" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as "Not a Contribution."</p>
<p>"Contributor" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.</p>
</li>
<li>
<p>Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.</p>
</li>
<li>
<p>Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.</p>
</li>
<li>
<p>Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:</p>
<p>(a) You must give any other recipients of the Work or Derivative Works a copy of this License; and</p>
<p>(b) You must cause any modified files to carry prominent notices stating that You changed the files; and</p>
<p>(c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work,<br>
excluding those notices that do not pertain to any part of the Derivative Works; and</p>
<p>(d) If the Work includes a "NOTICE" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.</p>
<p>You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.</p>
</li>
<li>
<p>Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.</p>
</li>
<li>
<p>Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.</p>
</li>
<li>
<p>Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an "AS IS" BASIS, ITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p>
</li>
<li>
<p>Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.</p>
</li>
<li>
<p>Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.</p>
</li>
</ol>
<p>END OF TERMS AND CONDITIONS</p>
<p>APPENDIX: How to apply the Apache License to your work.</p>
<p>To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets "{}" replaced with your own identifying information. (Don't include the brackets!)  The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same "printed page" as the copyright notice for easier identification within third-party archives.</p>
<p>Copyright 2018 Zhiping Jiang (蒋志平)</p>
<p>Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p>
<p><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank" rel="noopener noreferrer">http://www.apache.org/licenses/LICENSE-2.0</a></p>
<p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>
<h2>ISC License</h2>
<p>ISC License</p>
<p>Copyright (c) 2013-2021<br>
Frank Denis <code>&lt;j at pureftpd dot org&gt;</code></p>
<p>Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.</p>
<p>THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</p>
<h2>BOOST Software License</h2>
<p>Boost Software License - Version 1.0 - August 17th, 2003</p>
<p>Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute, and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the Software is furnished to do so, all subject to the following:</p>
<p>The copyright notices in the Software and this entire statement, including the above license grant, this restriction and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all derivative works of the Software, unless such copies or derivative works are solely in the form of machine-executable object code generated by a source language processor.</p>
<p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>
<h2>GNU Lesser General Public License V3.0</h2>
<p>GNU LESSER GENERAL PUBLIC LICENSE</p>
<p>Version 3, 29 June 2007</p>
<p>Copyright © 2007 Free Software Foundation, Inc. <a href="https://fsf.org/" target="_blank" rel="noopener noreferrer">https://fsf.org/</a></p>
<p>Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.</p>
<p>This version of the GNU Lesser General Public License incorporates the terms and conditions of version 3 of the GNU General Public License, supplemented by the additional permissions listed below.</p>
<ol start="0">
<li>
<p>Additional Definitions.</p>
<p>As used herein, "this License" refers to version 3 of the GNU Lesser General Public License, and the "GNU GPL" refers to version 3 of the GNU General Public License.</p>
<p>"The Library" refers to a covered work governed by this License, other than an Application or a Combined Work as defined below.</p>
<p>An "Application" is any work that makes use of an interface provided by the Library, but which is not otherwise based on the Library. Defining a subclass of a class defined by the Library is deemed a mode of using an interface provided by the Library.</p>
<p>A "Combined Work" is a work produced by combining or linking an Application with the Library. The particular version of the Library with which the Combined Work was made is also called the "Linked Version".</p>
<p>The "Minimal Corresponding Source" for a Combined Work means the Corresponding Source for the Combined Work, excluding any source code for portions of the Combined Work that, considered in isolation, are based on the Application, and not on the Linked Version.</p>
<p>The "Corresponding Application Code" for a Combined Work means the object code and/or source code for the Application, including any data and utility programs needed for reproducing the Combined Work from the Application, but excluding the System Libraries of the Combined Work.</p>
</li>
<li>
<p>Exception to Section 3 of the GNU GPL.</p>
<p>You may convey a covered work under sections 3 and 4 of this License without being bound by section 3 of the GNU GPL.</p>
</li>
<li>
<p>Conveying Modified Versions.</p>
<p>If you modify a copy of the Library, and, in your modifications, a facility refers to a function or data to be supplied by an Application that uses the facility (other than as an argument passed when the facility is invoked), then you may convey a copy of the modified version:</p>
<p>a) under this License, provided that you make a good faith effort to ensure that, in the event an Application does not supply the function or data, the facility still operates, and performs whatever part of its purpose remains meaningful, or</p>
<p>b) under the GNU GPL, with none of the additional permissions of this License applicable to that copy.</p>
</li>
<li>
<p>Object Code Incorporating Material from Library Header Files.</p>
<p>The object code form of an Application may incorporate material from a header file that is part of the Library. You may convey such object code under terms of your choice, provided that, if the incorporated material is not limited to numerical parameters, data structure layouts and accessors, or small macros, inline functions and templates (ten or fewer lines in length), you do both of the following:</p>
<p>a) Give prominent notice with each copy of the object code that the Library is used in it and that the Library and its use are covered by this License.</p>
<p>b) Accompany the object code with a copy of the GNU GPL and this license document.</p>
</li>
<li>
<p>Combined Works.</p>
<p>You may convey a Combined Work under terms of your choice that, taken together, effectively do not restrict modification of the portions of the Library contained in the Combined Work and reverse engineering for debugging such modifications, if you also do each of the following:</p>
<p>a) Give prominent notice with each copy of the Combined Work that the Library is used in it and that the Library and its use are covered by this License.</p>
<p>b) Accompany the Combined Work with a copy of the GNU GPL and this license document.</p>
<p>c) For a Combined Work that displays copyright notices during execution, include the copyright notice for the Library among these notices, as well as a reference directing the user to the copies of the GNU GPL and this license document.</p>
<p>d) Do one of the following:</p>
<ol start="0">
<li>
<p>Convey the Minimal Corresponding Source under the terms of this License, and the Corresponding Application Code in a form suitable for, and under terms that permit, the user to recombine or relink the Application with a modified version of the Linked Version to produce a modified Combined Work, in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source.</p>
</li>
<li>
<p>Use a suitable shared library mechanism for linking with the Library. A suitable mechanism is one that (a) uses at run time a copy of the Library already present on the user's computer system, and (b) will operate properly with a modified version of the Library that is interface-compatible with the Linked Version.</p>
</li>
</ol>
<p>e) Provide Installation Information, but only if you would otherwise be required to provide such information under section 6 of the GNU GPL, and only to the extent that such information is necessary to install and execute a modified version of the Combined Work produced by recombining or relinking the Application with a modified version of the Linked Version. (If you use option 4d0, the Installation Information must accompany the Minimal Corresponding Source and Corresponding Application Code. If you use option 4d1, you must provide the Installation Information in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source.)</p>
</li>
<li>
<p>Combined Libraries.</p>
<p>You may place library facilities that are a work based on the Library side by side in a single library together with other library facilities that are not Applications and are not covered by this License, and convey such a combined library under terms of your choice, if you do both of the following:</p>
<p>a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities, conveyed under the terms of this License.</p>
<p>b) Give prominent notice with the combined library that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work.</p>
</li>
<li>
<p>Revised Versions of the GNU Lesser General Public License.</p>
<p>The Free Software Foundation may publish revised and/or new versions of the GNU Lesser General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.</p>
<p>Each version is given a distinguishing version number. If the Library as you received it specifies that a certain numbered version of the GNU Lesser General Public License "or any later version" applies to it, you have the option of following the terms and conditions either of that published version or of any later version published by the Free Software Foundation. If the Library as you received it does not specify a version number of the GNU Lesser General Public License, you may choose any version of the GNU Lesser General Public License ever published by the Free Software Foundation.</p>
<p>If the Library as you received it specifies that a proxy can decide whether future versions of the GNU Lesser General Public License shall apply, that proxy's public statement of acceptance of any version is permanent authorization for you to choose that version for the Library.</p>
</li>
</ol>
<h2>MIT License</h2>
<p>Copyright (c) 2012 - present, Victor Zverovich</p>
<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>
<p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>
<p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>
<h3>Optional exception to the license</h3>
<p>As an exception, if, as a result of your compiling your source code, portions of this Software are embedded into a machine-executable object form of such source code, you may redistribute such embedded portions in such object form without including the above copyright and permission notices.</p>
]]></content>
  </entry>
  <entry>
    <title type="text">Command Line Interface and Program Option Reference</title>
    <id>https://ps.zpj.io/userManual/parameters.html</id>
    <link href="https://ps.zpj.io/userManual/parameters.html"/>
    <updated>2025-04-14T03:56:18.937Z</updated>
    <summary type="html"><![CDATA[<h2>PicoScenes Command Line Interface</h2>
<p>As shown in the <a href="/userManual/scenarios.html" target="_blank">scenarios</a>, multiple command options can be written in one single command string, which is surrounded by quotation marks. This section uses the following example commands to describe how PicoScenes parses the program options.</p>]]></summary>
    <content type="html"><![CDATA[<h2>PicoScenes Command Line Interface</h2>
<p>As shown in the <a href="/userManual/scenarios.html" target="_blank">scenarios</a>, multiple command options can be written in one single command string, which is surrounded by quotation marks. This section uses the following example commands to describe how PicoScenes parses the program options.</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PicoScenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "-d debug;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                // the following commands are for each NIC.</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                -i 4 --freq 2412e6 --rate 20e6 --mode responder --rxcm 3 --cbw 40 --sts 2 --txcm 5 -ess 1 --txpower 15 --coding ldpc;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                -i 3 --freq 2412e6 --rate 20e6 --mode initiator --repeat 100 --delay 5000 --cf 2412e6:5e6:2484e6 --sf 20e6:5e6:40e6 --cbw 20 --sts 2 --mcs 0 --gi 400 --txcm 3 --ack-mcs 3  --ack-type header;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                -q"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The first step of command parsing is to segment the long string into several <code>;</code> ended <code>command sentences</code>. The second command sentence starts with <code>//</code> or <code>#</code>, it is recognized as a line of comment and is skipped. The remaining command sentences are:</p>
<ol>
<li><code>-d debug</code></li>
<li><code>-i 4 --freq 2412e6 --rate 20e6 --mode responder --rxcm 3 --cbw 40 --sts 2 --txcm 5 -ess 1 --txpower 15 --coding ldpc</code>;</li>
<li><code>-i 3 --freq 2412e6 --rate 20e6 --mode initiator --repeat 100 --delay 5000 --cf 2412e6:5e6:2484e6 --sf 20e6:5e6:40e6 --cbw 20 --sts 2 --mcs 0 --gi 400 --txcm 3 --ack-mcs 3  --ack-type header</code>;</li>
<li><code>-q</code></li>
</ol>
<p>Each command sentence composes of one or multiple <code>program options</code>. Each program option usually starts with <code>--</code>. For some frequently used options, we provide shortcuts, like <code>-i</code> is for <code>--interface</code>, <code>-q</code> is for <code>--quit</code> and <code>-d</code> is for <code>--log-display-level</code>. Each program option consists of the option name and zero or more parameters, for example <code>--no-hp</code> doesn't require a parameter, and user may provide multiple parameters for <code>--tx-channel</code>, like <code>--tx-channel 0,1,2,3</code>.</p>
<p><strong>PicoScenes parses and executes the command sentence in input order</strong>. For the program options within one command sentence, PicoScenes invokes <strong>four levels of program option parsers to parse them</strong>; therefore, the order of the program options does not matter. The four levels of parsers, in their hierarchical order, are Platform Startup Options, Platform Options, Frontend Level Options, and Per-Plugin Level Options. They are detailed in the following Program Options Hierarchy. Platform Startup Options and Platform Options are frontend-irrelevant, and the other two levels of parsers are frontend-related.</p>
<p>The following process simulates the real parsing process of the above command sentences.</p>
<ol>
<li>
<p>For the first command sentence <code>-d debug</code>:</p>
<ol>
<li>Platform Startup Option parser recognizes the <code>-d debug</code> option, and set the debug message display level to <code>debug</code>.</li>
<li>Platform Option parser recognizes nothing.</li>
<li>As no frontend is specified, Frontend Option parser and Per-Plugin Option parsers are skipped.</li>
</ol>
</li>
<li>
<p>For the second command sentence <code>-i 4 --freq 2412e6 --rate 20e6 --mode responder --rxcm 3 --cbw 40 --sts 2 --txcm 5 -ess 1 --txpower 15 --coding ldpc</code>:</p>
<ol>
<li>Platform Startup Option parser recognizes nothing.</li>
<li>Platform Option parser recognizes <code>-i 3</code>, indicating that the rest of the program options within this command sentence are all for NIC <code>3</code>.</li>
<li>Frontend Option parser recognizes 5 hardware-tuning options: <code>--freq 2412e6</code>, <code>--rate 20e6</code>, <code>--rxcm 3</code> <code>--txcm 5</code>, and <code>--txpower 16</code>. All these controls are for NIC <code>3</code>, and Frontend Option parser doesn't perform the hardware tuning but delegates these parameters to the FrontEnd class.</li>
<li>Each PicoScenes plugin has the ability to parse command sentence, and PicoScenes enumerates all the active plugin instances of NIC <code>3</code> and let them parse the current command sentence. In the above example, the program option parser of EchoProbe plugin recognizes 5 options, namely, <code>--mode responder</code>, <code>--cbw 40</code>, <code>--sts 2</code>, <code>--ess 1</code> and <code>--coding ldpc</code>. The <code>responder mode</code> of EchoProbe plugin is not a thread-blocking mode, therefore, the parser of EchoProbe plugin will save the parameters and exit.</li>
<li>PicoScenes continues to enumerate the rest of the plugins (if there are) and let them parse the same command sentence.</li>
<li>All four level of parsers finish their jobs, PicoScenes continues to next command sentence.</li>
</ol>
</li>
<li>
<p>For the third command sentence <code>-i 3 --freq 2412e6 --rate 20e6 --mode initiator --repeat 100 --delay 5000 --cf 2412e6:5e6:2484e6 --sf 20e6:5e6:40e6 --cbw 20 --sts 2 --mcs 0 --gi 400 --txcm 3 --ack-mcs 3  --ack-type header</code>:</p>
<ol>
<li>Platform Startup Option parser recognizes nothing.</li>
<li>Platform Option parser recognizes <code>-i 4</code>, indicating this the rest of the program options are all for NIC <code>4</code>.</li>
<li>Frontend Option parser recognizes 3 program options <code>--freq 2412e6</code>, <code>--rate 20e6</code>, <code>--txcm 3</code>. All these controls are for NIC <code>4</code>, and Frontend Option parser doesn't perform the hardware tuning but delegates these parameters to the FrontEnd class.</li>
<li>PicoScenes enumerates all the active plugin instances of NIC <code>4</code> and let them parse the current command sentence. The program option parser of EchoProbe plugin recognizes 11 options, namely, <code>–mode initiator</code>, <code>–-repeat 100</code>, <code>-–delay 5000</code>, <code>-–cf 2412e6:5e6:2484e6</code>, <code>-–sf 20e6:5e6:40e6</code> <code>-–cbw 20</code>, <code>-–sts 2</code>, <code>-–mcs 0</code>, <code>-–gi 400</code>,  <code>-–ack-mcs 3</code> and <code>-–ack-type header</code>. The <code>initiator mode</code> of EchoProbe plugin is a blocking mode.  NIC <code>4</code>'s EchoProbe plugin instance will perform the round-trip and spectrum-scanning CSI measurement. When the measurement finishes or fails, EchoProbe will exit the blocking state.</li>
<li>PicoScenes continue to enumerate the rest of the plugins (if there are) and let them parse the same command sentence.</li>
<li>All four level of parsers finish their jobs, PicoScenes continues to next command sentence.</li>
</ol>
</li>
<li>
<p>For the fourth command sentence <code>-q</code>:</p>
<ol>
<li>Platform Startup Option parser recognizes nothing.</li>
<li>Platform Option parser recognizes <code>-q</code> and trigger PicoScenes shutdown sequence.</li>
</ol>
</li>
</ol>
<h2>Program Options Hierarchy</h2>
<p>Various PicoScenes program options are organized in a hierarchical structure as listed below:</p>
<ul>
<li>
<p><strong>Per-Plugin level Options (Top)</strong></p>
<ul>
<li>Each PicoScenes plugin can have its own program options. For example, the EchoProbe plugin has a large set of options controlling the packet injection and round-trip measurement.</li>
</ul>
</li>
<li>
<p><strong>Frontend Level Options</strong></p>
<ul>
<li>PicoScenes provides two independent sets of options for QCA9300/IWL5300 and SDR frontends, respectively. Users specify different options for different Wi-Fi NICs or USRPs.</li>
</ul>
</li>
<li>
<p><strong>Platform Options</strong></p>
<ul>
<li>These are a few global options valid <em>after</em> the launch of the PicoScenes platform.</li>
</ul>
</li>
<li>
<p><strong>Platform Startup Options (Bottom)</strong></p>
<ul>
<li>These are a few global options valid <em>before</em> the launch of the PicoScenes platform.</li>
</ul>
</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>You can also look up the <strong>complete</strong> program options by running the command <code>PicoScenes --help</code>, if you have successfully installed the PicoScenes.</p>
</div>
<h2>Platform Startup Options (Bottom)</h2>
<ul>
<li>
<p><code>--plugin-dir &lt;new_plugin_dir&gt;</code></p>
<ul>
<li>Description: Change the plugin search directory to your specified directory, e.g. <code>--plugin-dir /home/YOUR_HOME/PicoScenes-PDK</code>. If not specified, PicoScenes will by default search for plugins in /usr/local/PicoScenes/plugins.</li>
<li>Default: /usr/local/PicoScenes/plugins</li>
<li>Value Range: N/A</li>
<li>Notes: No</li>
<li>Example: <code>--plugin-dir /home/YOUR_NAME/PicoScenes-PDK</code></li>
</ul>
</li>
<li>
<p><code>-d [ --display-level ] &lt;log_diplay_level&gt;</code></p>
<ul>
<li>Description: Specify the log message display level.</li>
<li>Default: <code>info</code></li>
<li>Value Range: [<code>vv</code>, <code>verbose</code>, <code>debug</code>, <code>detail</code>, <code>trace</code>, <code>info</code>, <code>warning</code>, <code>error</code>, <code>mute</code>]</li>
<li>Notes: <code>vv</code> is the 'most verbose' mode and <code>mute</code> silences all log display.</li>
<li>Example: <code>-d trace</code></li>
</ul>
</li>
<li>
<p><code>--no-hp</code></p>
<ul>
<li>Description: Disable process priority escalation. <code>PicoScenes</code> will by default try to escalate its process priority to improve the performance, however, it <em>may</em> fail due to insufficient privilege. You may specify <code>--no-hp</code> to disable the priority escalation.</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: N/A</li>
</ul>
</li>
</ul>
<h2>Platform Options</h2>
<ul>
<li>
<p><code>-i [ --interface ] arg</code></p>
<ul>
<li>Description: The ID of the target device/interface. This value MUST be provided to validate the Frontend Options.
<ul>
<li>For QCA9300/IWL5300 NIC, PhyId, DvId, MonId and PhyPath are all acceptable. (What are these IDs? You may refer to <a href="/userManual/scenarios.html#device-naming" target="_blank">Device Naming</a> for help.)</li>
<li>For a single network-connected N210/X310 USRP, the name should be <code>usrp&lt;ip address of the USRP&gt;</code>, e.g., <code>usrp192.168.10.2</code>.</li>
<li>For a single PCI-E cable-connected X310 USRP, the name should be <code>usrp&lt;Resource Id of the X310&gt;</code>, e.g., <code>usrpRIO0</code>.</li>
<li>To combine multiple network-connected (or MIMO cable connected) N210s/X310s, the name should be <code>usrp&lt;ip address of the USRP1,ip address of the USRP2,ip address of the USRP3...&gt;</code>, e.g., <code>usrp192.168.40.2,192.168.41.2</code>.</li>
</ul>
</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes:
<ul>
<li>Note 1: For USRP, You can lookup the IP address or Resource ID via the UHD facility <code>uhd_find_devices</code>.</li>
<li>Note 2: For network connected USRPs, you MUST pay special attention to check the matching of IP addresses between the IP address of USRP and the IP address of your NIC. <code>uhd_find_devices</code> may find USRP devices even under mismatched address spaces, however, PicoScenes cannot initialize the USRP device in the mismatched situation.</li>
</ul>
</li>
<li>Example: <code>-i usrp192.168.10.2</code>, <code>-i 3</code>, <code>-i wlp3s0</code>, <code>-i phy0</code>, <code>-i phy0mon</code></li>
</ul>
</li>
<li>
<p><code>-h [ --help ]</code></p>
<ul>
<li>Description: Show help information.</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>-h</code></li>
</ul>
</li>
</ul>
<h2>Frontend Level Options</h2>
<p>PicoScenes provides different options for QCA9300/IWL5300 NICs and USRPs.</p>
<h3>QCA9300/IWL5300 NIC options</h3>
<ul>
<li>
<p><code>--freq arg</code></p>
<ul>
<li>Description: Specify the carrier frequency for both the QCA9300 and IWL5300. This option supports the scientific notation like 2412e6 or 2.412e9.</li>
<li>Default: The default value is the current working carrier frequency.</li>
<li>Value Range:
<ul>
<li>For QCA9300, its frequency synthesizer supports ranges of [2.2-2.9] GHz and [4.4 - 6.1] GHz in the 2.4 and 5 GHz bands, respectively. You can specify any carrier frequency within the ranges.</li>
<li>For IWL5300, you can only specify the standard channel frequencies, e.g., 2412e6, 2432e6, 5815e6, etc.</li>
</ul>
</li>
<li>Notes:
<ul>
<li>We have observed the decline of Tx/Rx performance caused by the cross-band tuning, e.g., 2412e6-&gt;5200e6. We recommend to use <code>array_prepare_for_picoscenes</code> to performance the cross-band tuning.</li>
<li>When operating in <code>HT40+/-</code> channel modes, this option, which always refers to the real carrier frequency, is not equal to the center frequency of <code>HT40+/-</code>'s primary channel, e.g., if you want to communicate with a <code>5200 HT40-</code> channel, you should tune your carrier frequency to 5190e6 or 5200e6 with 40 or 20 MHz channel bandwidth (CBW), respectively.</li>
</ul>
</li>
<li>Example: <code>--freq 5200e6</code></li>
</ul>
</li>
<li>
<p><code>--rate arg</code></p>
<ul>
<li>Description: Specify the baseband sampling rate (or bandwidth) for both the QCA9300 and IWL5300. This option supports the scientific notation like <code>20e6</code> or <code>25e6</code>.</li>
<li>Default: The default value is the current working baseband bandwidth.</li>
<li>Value Range:
<ul>
<li>For QCA9300, the available rates under <code>HT20</code> channel mode are [2.5, 5, 7.5, 10, 12.5, 15, 17.5, 20, 25, 30, 35, 40] MHz; for <code>HT40+/-</code> channel modes the supported rates are [5, 10, 15, 20, 25, 30, 35 40, 45, 50, 55, 60, 65, 70, 75, 80] MHz.</li>
<li>For IWL5300, the driver does NOT support bandwidth arbitrary tuning, so this option only supports 20 or 40 MHz.</li>
</ul>
</li>
<li>Notes: When HT20 mode communicate with <code>HT40+/-</code> modes with a non-standard bandwidth, you should tune the carrier frequency of the <code>HT20</code> side to the correct value. For example, with 20 MHz real bandwidth, <code>HT40-</code> channel mode at the 5190 MHz can ONLY communicate with a <code>HT20</code> mode with 5195 MHz carrier frequency.</li>
<li>Example: <code>--rate 20e6</code></li>
</ul>
</li>
<li>
<p><code>--txcm arg</code></p>
<ul>
<li>Description: Specify the transmit chain(s) for the QCA9300 and IWL5300 NICs. The mask are in 3-bit format,i.e., 1/2/4 for the 1st/2nd/3rd chain, 3 for both the 1st and 2nd chains and 7 for all three chains.</li>
<li>Default: This value is 7 by default and is persistent until the next NIC reset.</li>
<li>Value Range: [1, 2, 3, 4, 7]</li>
<li>Notes:
<ul>
<li>When the number of the transmit chains(s), N_{tx}, is smaller than the number of transmit spatial-time streams, N_{sts}, the transmission is invalid.</li>
<li>Value 5 and 6 are not valid for both QCA9300 and IWL5300.</li>
</ul>
</li>
<li>Example: <code>--txcm 1</code></li>
</ul>
</li>
<li>
<p><code>--rxcm arg</code></p>
<ul>
<li>Description: Specify the receive chain(s) for the QCA9300 and IWL5300 NICs. This option has the identical format as --txcm option.</li>
<li>Default: This value is 7 by default and is persistent until the next NIC reset.</li>
<li>Value Range: 1, 2, 3, 4, 7</li>
<li>Notes:
<ul>
<li>When the number of the receive chains(s), N_{rx}, is smaller than N_{sts} of the transmitted packets, the receiver cannot decode the frame.</li>
<li>Value 5 and 6 are not valid for both QCA9300 and IWL5300.</li>
</ul>
</li>
<li>Example: <code>--rxcm 1</code></li>
</ul>
</li>
<li>
<p><code>--txpower arg</code></p>
<ul>
<li>Description: Specify the transmit power (Tx power) in dBm for both the QCA9300 and IWL5300.</li>
<li>Default: 20</li>
<li>Value Range: 0 dBm ~ 30 dBm</li>
<li>Notes: This value is 20 by default and is persistent until the next NIC reset.</li>
<li>Example: <code>--txpower 15</code></li>
</ul>
</li>
<li>
<p><code>-p [ --cf-tuning-policy ] arg</code></p>
<ul>
<li>Description: Specify the tuning policy for QCA9300's carrier frequency. You can specify one of the three policies: <code>chansel</code>, <code>fastcc</code> and <code>reset</code>.</li>
<li>Default: <code>fastcc</code></li>
<li>Value Range: <code>chansel</code>, <code>fastcc</code> and <code>reset</code></li>
<li>Notes:
<ul>
<li><code>chansel</code> refers to the direct tuning of the RF frequency synthesizer via hardware registers. Since this policy tunes ONLY the synthesizer and bypasses many other settings, this is the fastest but also the least reliable policy.</li>
<li><code>fastcc</code> refers to the FAST Channel Change protocol in ath9k driver. This is the default policy in both the ath9k driver and PicoScenes. In ath9k driver, <code>fastcc</code> handles the non-crossband channel change scenarios.</li>
<li><code>reset</code> refers to the longer and more complete channel channel protocol in ath9k driver, which includes hardware reset. In ath9k driver <code>reset</code> handels the cross band channel change.</li>
</ul>
</li>
<li>Example: <code>-p chansel</code></li>
</ul>
</li>
</ul>
<h3>USRP frontend options</h3>
<ul>
<li><code>--freq arg</code>
<ul>
<li>Description: Specify the carrier frequency for SDR frontend. This option supports the scientific notation like 2412e6 or 2.412e9.</li>
<li>Default: This option has NO default value and is not persistent. You should specify it every time.</li>
<li>Value Range: Hardware decide the range.</li>
<li>Notes:
<ul>
<li>The value range is based on your hardware. For example, UBX-40/160 daughterboard supports a range of 10-6000MHz.</li>
<li>This option sets the same carrier frequency for both the Tx and Rx chains, though the hardware supports setting different frequencies for them.</li>
<li>For multi-channel configurations (the both channels of X310, or multiple USRPs synchronized by the MIMO cable or external clock source), this option will set the same frequency for all channels.</li>
</ul>
</li>
<li>Example: <code>--freq 5200e6</code></li>
</ul>
</li>
<li><code>--rate arg</code>
<ul>
<li>Description: Specify the baseband sampling rate (or bandwidth) for SDR frontend. This option supports the scientific notation like 25e6 or 40e6.</li>
<li>Default: This option has NO default value and is not persistent. You should specify it every time.</li>
<li>Value Range: N/A</li>
<li>Notes:
<ul>
<li>The value range is based on your hardware. For example, X310 motherboard supports a maximum sampling rate of 200 MHz.</li>
<li>This option sets the same sampling rate for both the Tx and Rx chains, though the hardware supports setting different sampling rates for them.</li>
<li>Different hardware has different tuning granularity. For example, you can only specify 200/INT_N MHz sampling rate where INT_N is a positive integer.</li>
</ul>
</li>
<li>Example: <code>--rate 20e6</code></li>
</ul>
</li>
<li><code>--tx-resample-ratio arg</code>
<ul>
<li>Description: Specify the Tx resampling ratio. This is a software-based Tx resampling mechanism to enable arbitrary channel bandwidth. For example, X310 cannot tune the baseband sampling rate to 80 MHz. To overcome this issues, we can tune the hardware to 100 MHz (by <code>--rate 100e6</code>) and then resample the Tx signal by 0.8 (by <code>--tx-resample-ratio 0.8</code>).</li>
<li>Default: 1.0</li>
<li>Value Range: 0 ~ 1.0</li>
<li>Notes:
<ul>
<li>This option is implemented by zero-order interpolation in software side, i.e., generate the signal by 80 MHz then interpolate the signal to 100 MHz.</li>
<li>This interpolation is implemented by software, therefore the performance decline should be expected.</li>
</ul>
</li>
<li>Example: <code>--tx-resample-ratio 0.8</code></li>
</ul>
</li>
<li><code>--rx-resample-ratio arg</code>
<ul>
<li>Description: Specify the Rx resampling ratio. This is a software-based Rx resampling mechanism to enable arbitrary channel bandwidth. For example, X310 cannot tune the baseband sampling rate to 80 MHz. To overcome this issues, we can tune the hardware to 100 MHz (by <code>--rate 100e6</code>) and then resample the Rx signal by 0.8 (by <code>--rx-resample-ratio 0.8</code>).</li>
<li>Default: 1.0</li>
<li>Value Range: 0 ~ 1.0</li>
<li>Notes:
<ul>
<li>This option is implemented by uniform signal dropping in software side, i.e., receive the signal by 100 MHz rate then decimate the signal to 80 MHz.</li>
<li>This resample is implemented by software, therefore the performance decline should be expected.</li>
</ul>
</li>
<li>Example: <code>--rx-resample-ratio 1.0</code></li>
</ul>
</li>
<li><code>--clock-source arg</code>
<ul>
<li>Description: Specify the clock and time source for SDR frontend.</li>
<li>Default: <code>internal</code></li>
<li>Value Range: <code>internal</code>, <code>external</code>, <code>mimo</code></li>
<li>Notes: You can specify <code>external</code> for G-Octoclock based clock source or <code>mimo</code> for N210 MIMO-cable based clock source sharing.</li>
<li>Example: <code>--clock-source external</code></li>
</ul>
</li>
<li><code>--cfo arg</code>
<ul>
<li>Description: Specify the carrier frequency offset for Tx baseband. This option supports the scientific notation like 1e3 (1000 Hz cfo). This option is implemented by Wi-Fi baseband software, therefore the performance decline should be expected.</li>
<li>Default: 0.0</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--cfo 1e3</code></li>
</ul>
</li>
<li><code>--sfo arg</code>
<ul>
<li>Description: Specify the sampling rate offset for Tx baseband. This option supports the scientific notation like 1e3 (1000 Hz sfo). This option is implemented by Wi-Fi baseband software, therefore the performance decline should be expected.</li>
<li>Default: 0.0</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--sfo 1e3</code></li>
</ul>
</li>
<li><code>--master-clock-rate arg</code>
<ul>
<li>Description: Specify the master clock rate of USRP. For Wi-Fi communication</li>
<li>Default: For N210 and X310, the default value is 100e6 and 200e6 respectively.</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--master-clock-rate 100e6</code></li>
</ul>
</li>
<li><code>--tx-channel arg</code>
<ul>
<li>Description: Specify the Tx channel(s) for SDR frontend. The default value is 0, which mean 0-th channel. Multiple channel numbers are separated by a comma <code>,</code>. In multi-channel configurations, taking two combined X310s for example, you can specify <code>0,1,2,3</code> to use all 4 channels for Tx. You can also skip some of them, such as <code>0,2,3</code> which specify the 0-th, 1st and 3rd antenna for Tx.</li>
<li>Default: <code>0</code></li>
<li>Value Range: N/A</li>
<li>Notes:
<ul>
<li>The order does not matter. <code>0,2,3</code> is equal to <code>3,2,0</code>.</li>
<li>The physical mapping between the channel number and antenna is ordered. For example, assuming that we combine two X310s together with <code>-i usrp192.168.40.2,192.168.41.2</code>, 0-th and 1st antennas correspond to the left and right daughterboards of the X310 with IP address 192.168.40.2; and 2nd and 3rd antennas correspond to the left and right daughterboards of the X310 with IP address 192.168.41.2.</li>
</ul>
</li>
<li>Example: <code>--tx-channel 0,1</code></li>
</ul>
</li>
<li><code>--rx-channel arg</code>
<ul>
<li>Description: Specify the Tx channel(s) for SDR frontend. The default value is 0, which mean 0-th channel. Multiple channel numbers are separated by a comma <code>,</code>. This option has the identical format as <code>--tx-channel</code>.</li>
<li>Default: <code>0</code></li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--rx-channel 0,1</code></li>
</ul>
</li>
<li><code>--rx-cbw arg</code>
<ul>
<li>Description: Specify the Channel Bandwidth (CBW) for Rx baseband. You can specify <code>20</code>, <code>40</code>, <code>80</code> or <code>160</code>, which corresponds to 20/40/80/160MHz CBW for Rx baseband.</li>
<li>Default: <code>20</code></li>
<li>Value Range: <code>20</code>, <code>40</code>, <code>80</code>, <code>160</code></li>
<li>Notes: In order to receive and correctly decode the packet transmitted in HT20/HT40/VHT80/VHT160 formats, you must specify Rx CBW to 20/40/80/160, respectively.</li>
<li>Example: <code>--rx-cbw 40</code></li>
</ul>
</li>
<li><code>--rx-ant arg</code>
<ul>
<li>Description: Specify to use which RX antenna</li>
<li>Default: <code>RX2</code></li>
<li>Value Range: <code>TX/RX</code>, <code>RX2</code></li>
<li>Notes: For USRP UBX/CBX/SBX daughterboard, TX/RX or RX2</li>
<li>Example: <code>--rx-ant TX/RX</code></li>
</ul>
</li>
<li><code>--txpower arg</code>
<ul>
<li>Description: Tx gain.</li>
<li>Default: N/A</li>
<li>Value Range: 0 ~ 38 dB</li>
<li>Notes: N/A</li>
<li>Example: <code>--txpower 20</code></li>
</ul>
</li>
<li><code>--rx-gain arg</code>
<ul>
<li>Description: Rx gain.</li>
<li>Default: N/A</li>
<li>Value Range: 0 ~ 38 dB</li>
<li>Notes: N/A</li>
<li>Example: <code>--rx-gain 20</code></li>
</ul>
</li>
<li><code>--filter-bw arg</code>
<ul>
<li>Description: Baseband filter bandwidth (unit in Hz, scientific notation supported)</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: N/A</li>
</ul>
</li>
<li><code>--tx-to-file arg</code>
<ul>
<li>Description: Supply a file name (without extension, just the name), <code>PicoScenes</code> will save all the Tx signals to file. The signals will be save to a <code>.bbsignals</code> file with the specified file name.</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>tx-to-file demo</code></li>
</ul>
</li>
<li><code>--tx-from-file arg</code>
<ul>
<li>Description: Supply a file name (without extension, just the name), PicoScenes will replay the signal save in the <code>.bbsignals</code> file as if the signal is generated from the baseband.</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--tx-from-file demo</code></li>
</ul>
</li>
<li><code>--tx-from-file-delay arg</code>
<ul>
<li>Description: The delay (in ms) before Tx signal replay.</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--tx-from-file-delay 1000</code></li>
</ul>
</li>
<li><code>--rx-to-file arg</code>
<ul>
<li>Description: Dump baseband signals received from SDR device to a <code>.bbsignals</code> file with the specified file name. This is actually the Rx signal recorder.</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: When rx-to-file is ON, the received signal will NOT be sent to baseband for decoding.</li>
<li>Example: <code>--rx-to-file demo</code></li>
</ul>
</li>
<li><code>--rx-from-file arg</code>
<ul>
<li>Description: Replay baseband signals saved in the <code>.bbsignals</code> file as if the signal is received from the RF frontend. This is actually the Rx signal replay.</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: The Rx signal replay keeps the same pace with the Rx baseband, therefore there will be no signal dropping.</li>
<li>Example: <code>--rx-from-file demo</code></li>
</ul>
</li>
<li><code>--rx-sensitivity arg</code>
<ul>
<li>Description: Specify the lowest power level (specified in dB) above the rx noise floor to trigger packet detection.</li>
<li>Default: 5</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--rx-sensitivity 10</code></li>
</ul>
</li>
<li><code>--rx-cp-offset arg</code>
<ul>
<li>Description: Specify at which position of Cyclic Prefix is regard as the start of OFDM signal (pre-advancement)</li>
<li>Default: 0.75</li>
<li>Value Range: 0 ~ 1</li>
<li>Notes: N/A</li>
<li>Example: <code>--rx-cp-offset 0.5</code></li>
</ul>
</li>
<li><code>--tx-iq-mismatch arg</code>
<ul>
<li>Description: Specify Tx I/Q mismatch, for example <code>1.5 15</code> means 1.5dB Tx I/Q ratio and 15 degree of Tx I/Q crosstalk</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>tx-iq-mismatch "1.5 15"</code></li>
</ul>
</li>
<li><code>--rx-iq-mismatch arg</code>
<ul>
<li>Description: Specify Rx I/Q mismatch, for example <code>1.5 15</code> means 1.5dB Rx I/Q ratio and 15 degree of Rx I/Q crosstalk</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>rx-iq-mismatch "1.5 15"</code></li>
</ul>
</li>
<li><code>--disable-1ant-tx-4-extra-sounding</code>
<ul>
<li>Description: Enable a special HT-LTF demodulation mode when signal is received from a transmitter with only 1 TX antenna.</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--disable-1ant-tx-4-extra-sounding</code></li>
</ul>
</li>
<li><code>--enable-loopback</code>
<ul>
<li>Description: Enable USRP Rx loopback signal from Tx.</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--enable-loopback</code></li>
</ul>
</li>
<li><code>--enable-hw-acc</code>
<ul>
<li>Description: enable/or disable hardware acceleration for Wi-Fi packet detection (enabling requires our special firmware, false as default).</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--enable-hw-acc</code></li>
</ul>
</li>
</ul>
<h2>Per-Plugin Level Options (Top)</h2>
<h3>EchoProbe Options</h3>
<ul>
<li><code>--mode arg</code>
<ul>
<li>Description: EchoProbe working mode.</li>
<li>Default: N/A</li>
<li>Value Range: <code>injector</code>, <code>logger</code>, <code>initiator</code>, <code>responder</code></li>
<li>Notes: N/A</li>
<li>Example: <code>--mode injector</code></li>
</ul>
</li>
</ul>
<h3>EchoProbe initiator options</h3>
<ul>
<li>
<p><code>--target-mac-address</code></p>
<ul>
<li>Description: MAC address of the injection target [ magic Intel <code>00:16:ea:12:34:56</code> is default].</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: N/A</li>
</ul>
</li>
<li>
<p><code>--5300</code></p>
<ul>
<li>Description: Both Destination and Source MAC addresses are set to [ magic Intel <code>00:16:ea:12:34:56</code> ].</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: N/A</li>
</ul>
</li>
<li>
<p><code>--cf</code></p>
<ul>
<li>Description: MATLAB-style specification for carrier frequency scan range, format <code>begin:step:end</code>.</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--cf 5200e6:20e6:5800e6</code></li>
</ul>
</li>
<li>
<p><code>--sf</code></p>
<ul>
<li>Description: MATLAB-style specification for baseband sampling frequency multiplier scan range, format <code>begin:step:end</code>.</li>
<li>Default: N/A</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--sf 10e6:5e6:20e6</code></li>
</ul>
</li>
<li>
<p><code>--repeat</code></p>
<ul>
<li>Description: The injection number per cf/bw combination.</li>
<li>Default: 100</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--repeat 1e4</code></li>
</ul>
</li>
<li>
<p><code>--delay</code></p>
<ul>
<li>Description: The delay between successive injections(unit in us).</li>
<li>Default: 5e5</li>
<li>Value</li>
<li>Example: <code>--repeat 1e4</code></li>
</ul>
</li>
<li>
<p><code>--delay</code></p>
<ul>
<li>Description: The delay between successive injections(unit in us).</li>
<li>Default: 5e5</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--delay 5e3</code></li>
</ul>
</li>
<li>
<p><code>--delayed-start</code></p>
<ul>
<li>Description: A one-time delay before injection(unit in us)</li>
<li>Default: 0</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--delayed-start 5e5</code></li>
</ul>
</li>
<li>
<p><code>--format</code></p>
<ul>
<li>Description: 802.11 frame format.</li>
<li>Default: HT</li>
<li>Value Range: <code>nonHT</code>, <code>HT</code>, <code>VHT</code>, <code>HESU</code></li>
<li>Notes: N/A</li>
<li>Example: <code>--format VHT</code></li>
</ul>
</li>
<li>
<p><code>--cbw</code></p>
<ul>
<li>Description: Channel Bandwidth (CBW) for injection(unit in MHz).</li>
<li>Default: 20</li>
<li>Value Range: <code>20</code>, <code>40</code>, <code>80</code>, <code>160</code></li>
<li>Notes: N/A</li>
<li>Example: <code>--cbw 40</code></li>
</ul>
</li>
<li>
<p><code>--mcs</code></p>
<ul>
<li>Description: The MCS index for one single spatial stream.</li>
<li>Default: 0</li>
<li>Value Range: 0 ~ 11</li>
<li>Notes: N/A</li>
<li>Example: <code>--mcs 4</code></li>
</ul>
</li>
<li>
<p><code>--sts</code></p>
<ul>
<li>Description: Number of spatial time stream (STS).</li>
<li>Default: 1</li>
<li>Value Range: 1 ~ 4</li>
<li>Notes: N/A</li>
<li>Example: <code>--sts 2</code></li>
</ul>
</li>
<li>
<p><code>--ess</code></p>
<ul>
<li>Description: Number of Extension Spatial Stream for TX.</li>
<li>Default: 0</li>
<li>Value Range: 0 ~ 3</li>
<li>Notes: N/A</li>
<li>Example: <code>--ess 2</code></li>
</ul>
</li>
<li>
<p><code>--gi</code></p>
<ul>
<li>Description: Guarding Interval.</li>
<li>Default: 800</li>
<li>Value Range: <code>400</code>, <code>800</code>, <code>1600</code>, <code>3200</code></li>
<li>Notes: N/A</li>
<li>Example: <code>--gi 1600</code></li>
</ul>
</li>
<li>
<p><code>--coding</code></p>
<ul>
<li>Description: Code scheme.</li>
<li>Default: BCC</li>
<li>Value Range: <code>LDPC</code>, <code>BCC</code></li>
<li>Notes: N/A</li>
<li>Example: <code>--coding LDPC</code></li>
</ul>
</li>
<li>
<p><code>--injector-content</code></p>
<ul>
<li>Description: Content type for injector mode.</li>
<li>Default: full</li>
<li>Value Range: <code>full</code>, <code>header</code>, <code>ndp</code></li>
<li>Notes: N/A</li>
<li>Example: <code>--injector-content header</code></li>
</ul>
</li>
<li>
<p><code>--ifs</code></p>
<ul>
<li>Description: Inter-Frame Spacing in seconds.</li>
<li>Default: 20e-6</li>
<li>Value Range: N/A</li>
<li>Notes: N/A</li>
<li>Example: <code>--ifs 10e-6</code></li>
</ul>
</li>
</ul>
<h3>Echo responder options</h3>
<ul>
<li>
<p><code>--ack-type</code></p>
<ul>
<li>Description: EchoProbe reply strategy.</li>
<li>Default: full</li>
<li>Value Range: <code>full</code>, <code>csi</code>, <code>extra</code>, <code>header</code></li>
<li>Notes: N/A</li>
<li>Example: <code>--ack-type csi</code></li>
</ul>
</li>
<li>
<p><code>--ack-mcs</code></p>
<ul>
<li>Description: MCS value (for one single spatial stream) for ack packets, unspecified as default.</li>
<li>Default: N/A</li>
<li>Value Range: 0 ~ 11</li>
<li>Notes: N/A</li>
<li>Example: <code>--ack-mcs 4</code></li>
</ul>
</li>
<li>
<p><code>--ack-sts</code></p>
<ul>
<li>Description: The number of spatial time stream (STS) for ack packets, unspecified as default.</li>
<li>Default: N/A</li>
<li>Value Range: 0 ~ 23</li>
<li>Notes: N/A</li>
<li>Example: <code>--ack-sts 3</code></li>
</ul>
</li>
<li>
<p><code>--ack-cbw</code></p>
<ul>
<li>Description: Bandwidth for ack packets (unit in MHz), unspecified as default.</li>
<li>Default: N/A</li>
<li>Value Range: <code>20</code>, <code>40</code>, <code>80</code>, <code>160</code></li>
<li>Notes: N/A</li>
<li>Example: <code>--ack-cbw 40</code></li>
</ul>
</li>
<li>
<p><code>--ack-gi</code></p>
<ul>
<li>Description: Guarding-interval for ack packets, unspecified as default.</li>
<li>Default: N/A</li>
<li>Value Range: <code>400</code>, <code>800</code>, <code>1600</code>, <code>3200</code></li>
<li>Notes: N/A</li>
<li>Example: <code>--ack-gi 800</code></li>
</ul>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title type="text">Developing Your PicoScenes Plugins</title>
    <id>https://ps.zpj.io/userManual/plugin.html</id>
    <link href="https://ps.zpj.io/userManual/plugin.html"/>
    <updated>2025-04-14T03:56:18.952Z</updated>
    <summary type="html"><![CDATA[<p><strong>Author:</strong> Tian Teng, Xidian University, <a href="mailto:tengtianmoemoe@gmail.com" target="_blank" rel="noopener noreferrer">tengtianmoemoe@gmail.com</a></p>
<p>Before creating your own PicoScenes plugins from scratch, you have seven steps to gradually develop your understanding of the PicoScenes architecture and the coding skillset. During this process, you will learn how to git clone PS-PDK code, compile it, modify it, debug it, and imitate it. You will also have a general understanding of <code>modern C++</code> development on the Linux platform.</p>]]></summary>
    <content type="html"><![CDATA[<p><strong>Author:</strong> Tian Teng, Xidian University, <a href="mailto:tengtianmoemoe@gmail.com" target="_blank" rel="noopener noreferrer">tengtianmoemoe@gmail.com</a></p>
<p>Before creating your own PicoScenes plugins from scratch, you have seven steps to gradually develop your understanding of the PicoScenes architecture and the coding skillset. During this process, you will learn how to git clone PS-PDK code, compile it, modify it, debug it, and imitate it. You will also have a general understanding of <code>modern C++</code> development on the Linux platform.</p>
<h2>Prerequisites</h2>
<p>PicoScenes Plugin Development Kit (PS-PDK), as a standard C++ library, includes the PicoScenes <code>C/C++ headers</code> and <code>libraries</code>. If you have installed PicoScenes software, PS-PDK is already in your system. The headers and the binary library files are installed at <code>/usr/local/PicoScenes/include/PicoScenes</code> and <code>/usr/local/PicoScenes/lib</code>, respectively. You may refer to the document <a href="/userManual/installation.html" target="_blank">installation</a> to ensure your installation.</p>
<h3>Install necessary development dependencies</h3>
<p>Run the following command to install the dependencies for PS-PDK development.</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> build-essential</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> libboost-all-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> libssl-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> libcpprest-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> libsodium-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> libfmt-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> libuhd-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> libopenblas-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> libfftw3-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pkg-config</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h3>Clone, build and install PicoScenes PDK project</h3>
<p>Run the following command to <code>git clone</code> the PicoScenes-PDK project</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://github.com/wifisensing/PicoScenes-PDK</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --recursive</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>If PicoScenes and all the development dependencies are successfully installed, you can run the following command to build and install the three plugins of PicoScenes-PDK project.</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> PicoScenes-PDK</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # or cd to the cloned directory</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">./Fast_Build_Install_Plugin.sh</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Fast_Build_Install_Plugin.sh</code> is a bash script with the following content, which rebuilds the plugins and the .deb package and install the .deb package.</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scriptDir</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"$(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">dirname</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379">${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">BASH_SOURCE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">[0]</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">" )" &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">pwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> )"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> purge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> picoscenes-plugins-demo-echoprobe-forwarder</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $scriptDir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -rf</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $scriptDir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mkdir</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $scriptDir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $scriptDir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/build</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ..</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> package</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -j</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">nproc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $scriptDir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dpkg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ./picoscenes</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">.deb</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If everything goes fine, the above command rebuilds and reinstalls the latest PS-PDK repository.</p>
<h3>Optional Feature Prerequisites</h3>
<p>We recommand JetBrains <strong>CLion</strong> as the IDE for PicoScenes plugin development.</p>
<h2>Developing PicoScenes Plugins</h2>
<h3>PicoScenes Plugin Overview</h3>
<p>The following image illustrates the relationship between PicoScenes-plugin and PicoScenes.</p>
<p></p>
<p>The top box is labeled "PicoScenes Application Plugins," which contains multiple sub-boxes marked as "Plugin-1," "Plugin-2," through "Plugin-n," indicating that there are multiple plugins available for use by the PicoScenes platform. These plugins are managed through an intermediary box, "Plugins Manager," signifying that all plugins are uniformly managed by this plugin manager.</p>
<p>The process begins with the initiation of the platform, followed by the automatic detection of all available plugins. After detection, each plugin is systematically installed. Once the installation is complete, the system <a href="#picoscenes-plugin-folder-structure">parses user commands</a> and proceeds to poll each plugin to verify if they meet the requirements of the commands. Upon confirmation, the system executes the corresponding plugins.</p>
<p></p>
<p>The plugin has the capability to control all hardware on the platform, with all functions and APIs within its realm of control. It is capable of <a href="#how-to-receive-packages">receiving</a> and <a href="#how-to-transmit-packages">transmitting</a> data flows, including WiFi packets. Once the hardware platform captures a packet, it forwards this data to all plugins, ensuring that each one receives the packet.</p>
<p>"Imitation is not just the sincerest form of flattery - it's the sincerest form of learning." -- George Bernard Shaw</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>You can learn how to write plugins step by step following the tutorial, or you can view the complete code in the <a href="https://github.com/wifisensing/PicoScenes-PDK/" target="_blank" rel="noopener noreferrer">repository</a>.</p>
</div>
<h3>PicoScenes Plugin folder structure</h3>
<p>The entire PS-PDK project is managed by <code>CMake</code> and contains three working plugins, a Demo plugin, the EchoProbe, and UDP-forwarder.</p>
<p><code>PicoScenes-PDK/CMakeLists.txt</code></p>
<div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># ...</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(plugin-demo)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(plugin-echoprobe)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(plugin-forwarder)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># ...</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><code>add_subdirectory(plugin-demo)</code>: searches CMakeLists.txt in <code>plugin-demo</code></li>
</ul>
<p><code>PicoScenes-PDK/plugin-demo/CMakeLists.txt</code></p>
<div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># PicoScenes-PDK/plugin-demo/CMakeLists.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># The PicoScenes Plugins MUST be named in "PDK-xxx" pattern.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">ADD_LIBRARY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(PDK-demo SHARED DemoPlugin.cxx)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">TARGET_LINK_LIBRARIES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(PDK-demo  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">${Boost_LIBRARIES}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fmt::fmt SystemTools)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(TARGETS PDK-demo  DESTINATION .)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>DemoPlugin Inherits from AbstractPicoScenesPlugin. Below are the properties and methods in DemoPlugin.</p>
<p><code>DemoPlugin.hxx</code></p>
<div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// DemoPlugin.hxx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> &lt;iostream&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> &lt;mutex&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> &lt;PicoScenes/AbstractPicoScenesPlugin.hxx&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> &lt;PicoScenes/MAC80211CSIExtractableNIC.hxx&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> : </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AbstractPicoScenesPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Get the name of the plugin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getPluginName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">override</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Get the description of the plugin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getPluginDescription</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">override</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Get the status of the plugin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pluginStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">override</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Get the supported device types by the plugin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">vector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">PicoScenesDeviceType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getSupportedDeviceTypes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">override</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Perform initialization tasks for the plugin</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> initialization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">override</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Get the options description for the plugin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">shared_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;boost::program_options::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">options_description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pluginOptionsDescription</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">override</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Parse and execute commands for the plugin</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> parseAndExecuteCommands</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> &amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">commandString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">override</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Create an instance of the DemoPlugin</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    static</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">shared_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> std::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">make_shared</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Options description for the plugin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    std::shared_ptr</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">po::options_description</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> options;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Alias the create function to 'initPicoScenesPlugin' using BOOST_DLL_ALIAS</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BOOST_DLL_ALIAS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(DemoPlugin::create, initPicoScenesPlugin)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>These methods are implemented in <code>Demoplugin.cxx</code></p>
<p><code>DemoPlugin.cxx</code></p>
<div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// DemoPlugin.cxx</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "DemoPlugin.hxx"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getPluginName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "PicoScenes Demo Plugin"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getPluginDescription</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "Demonstrate the PicoScenes Plugin functionality"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pluginStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "this method returns the status of the plugin."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">vector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">PicoScenesDeviceType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getSupportedDeviceTypes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> supportedDevices </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> std::vector</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">PicoScenesDeviceType</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{PicoScenesDeviceType::IWL5300, PicoScenesDeviceType::QCA9300, PicoScenesDeviceType::IWLMVM_AX200, PicoScenesDeviceType::IWLMVM_AX210, PicoScenesDeviceType::VirtualSDR, PicoScenesDeviceType::USRP, PicoScenesDeviceType::SoapySDR};</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> supportedDevices;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">initialization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Create an options description for the DemoPlugin with a specific name and line length</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    options </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> std::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">make_shared</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;po::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">options_description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Demo Options"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">120</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">shared_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;boost::program_options::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">options_description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pluginOptionsDescription</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> options;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">parseAndExecuteCommands</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> &amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">commandString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3>How to parse commands</h3>
<p>Add the following content in <code>DemoPlugin.cxx</code></p>
<p><code>DemoPlugin.cxx</code></p>
<div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// DemoPlugin.cxx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">...</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">initialization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Create an options description for the DemoPlugin with a specific name and line length</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    options </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> std::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">make_shared</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;po::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">options_description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Demo Options"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">120</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Add a command-line option for the DemoPlugin</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"demo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, po::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"--demo &lt;param&gt;"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">...</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">parseAndExecuteCommands</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> &amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">commandString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Create a variables map to store parsed options</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    po::variables_map vm;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Parse the command string using Boost.ProgramOptions</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> parsedOptions </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> po::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">command_line_parser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">po</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">split_unix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(commandString))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pluginOptionsDescription</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">allow_unregistered</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(po::command_line_style::unix_style </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2">&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2"> ~</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">po::command_line_style::allow_guessing)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Store the parsed options in the variables map</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    po::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">store</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(parsedOptions, vm);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Notify the variables map about the parsed options</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    po::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">notify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(vm);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"demo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> optionValue </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"demo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">as</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">std::string</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        LoggingService_Plugin_info_print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Plugin has been installed, its param is {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, std::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(optionValue));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Compile and run plugin</strong></p>
<p>Compile the plugin using <code>./Fast_Build_Install_Plugin.sh</code></p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">./Fast_Build_Install_Plugin.sh</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>Open <strong>terminal</strong>, run Picoscenes platform</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PicoScenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "-d debug</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            --plugin-dir &lt;your-plugin-dir&gt;/PicoScenes-PDK;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            -i virtualsdr</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            --demo HelloPicoScenes"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If successfully executed, you will see the following content in the console.</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[17:31:51.183948] [Plugin  ] [Info ] Plugin has been installed, its param is HelloPicoScenes</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>The command options, <code>"-d debug  --plugin-dir &lt;your-plugin-dir&gt;/PicoScenes-PDK; -i virtualsdr  --demo HelloPicoScenes"</code>, have the following interpretations:</p>
<ul>
<li><code>-d debug</code>: Modifies the display level of the logging service to debug</li>
<li><code>--plugin</code>: Search plugin's directory  <code>&lt;your-plugin-dir&gt;/PicoScenes-PDK</code> is your plugin's location</li>
<li><code>-i virtualsdr</code>: Switches the device to virtualsdr</li>
<li><code>--demo HelloPicoScenes</code>: enable demo command, "HelloPicoScenes" is the parameter</li>
</ul>
<p>PicoScenes uses polymorphism to manage plugins. Developers should inherit from <code>AbstractPicoScenesPlugin</code> to develop their plugins. The following diagram shows the inheritance.</p>
<p></p>
<p>The <strong>initialization()</strong> method defines plugin's commands. <strong>parseAndExecuteCommands()</strong> method parses commands and arguments.</p>
<div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">initialization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Create an options description for the DemoPlugin with a specific name and line length</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    options </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> std::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">make_shared</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;po::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">options_description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Demo Options"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">120</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Add a command-line option for the DemoPlugin</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"demo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, po::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"--demo &lt;param&gt;"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><code>options-&gt;add_options()</code>: Define command "demo" and set parameter's type</li>
</ul>
<div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">parseAndExecuteCommands</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> &amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">commandString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    ...</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"demo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> optionValue </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"demo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">as</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">std::string</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        LoggingService_Plugin_info_print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Plugin has been installed, its param is {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(optionValue));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><code>vm["demo"].as&lt;std::string&gt;()</code>: Get parameters "HelloPicoScenes"</li>
</ul>
<h3>How to receive packages</h3>
<p>You have now learned how to define a command and parse it. In the upcoming example, you will learn how to make a receive/send plugin.</p>
<p>Before writing a plugin for <code>receiving</code> signals, understand the process of writing a receive plugin.</p>
<p></p>
<ul>
<li><code>parseAndExecuteCommands()</code>: Parse plugin command and parameters</li>
<li><code>nic-&gt;startRxService()</code>:  Start receiving signals from different devices</li>
<li><code>rxHandle()</code>: Handle receiving signals</li>
</ul>
<p>Add plugin commands and activate the receive mode</p>
<p><code>DemoPlugin.cxx</code></p>
<div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">parseAndExecuteCommands</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">string</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> &amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">commandString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Create a variables map to store parsed options</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    po::variables_map vm;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Define the command line options style</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> style </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pos::allow_long </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pos::allow_dash_for_short </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2">|</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                 pos::long_allow_adjacent </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pos::long_allow_next </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2">|</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                 pos::short_allow_adjacent </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pos::short_allow_next;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Parse the command string using Boost.ProgramOptions and store options in the variables map</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    po::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">store</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">po</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">command_line_parser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">po</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">split_unix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(commandString)).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">options).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(style).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">allow_unregistered</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), vm);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Notify the variables map about the parsed options</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    po::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">notify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(vm);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Check if the "demo" option is present</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"demo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Get the value of the "demo" option</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> modeString </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"demo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">as</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">std::string</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check if the modeString contains "logger" and start the Rx service accordingly</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">modeString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">find</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"logger"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">!=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> std::string::npos) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            nic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">startRxService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>DemoPlugin.hxx</code></p>
<div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> : </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AbstractPicoScenesPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    ...</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Handle received frames in the plugin</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> rxHandle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ModularPicoScenesRxFrame</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> &amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">rxframe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">override</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    std::shared_ptr</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">po::options_description</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> options;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Implement <code>rxHandle()</code> in <code>DemoPlugin.cxx</code></p>
<div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rxHandle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ModularPicoScenesRxFrame</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> &amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">rxframe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    LoggingService_debug_print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"This is my rxframe: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rxframe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Build the plugin and run in terminal</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">./Fast_Build_Install_Plugin.sh</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PicoScenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "-d debug</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            --bp</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            --plugin-dir &lt;your-plugin-dir&gt;/PicoScenes-PDK;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            -i virtualsdr</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            --rx-from-file sample5</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            --demo logger"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><code>--rx-from-file</code>: Read signals from file sample.bbsignal</li>
</ul>
<p>If successfully running, the terminal will show</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[17:34:09.811501] [Platform] [Debug] This is my rxframe: RxFrame:{</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">RxSBasic:[device</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=USRP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">SDR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">center</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">2412,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> control</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">2412,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> CBW</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">20,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> format</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">HT,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> Pkt_CBW</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">20,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> MCS</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">0,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> numSTS</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">1,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> GI</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">0.8us,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> UsrIdx/NUsr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">0/1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">timestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">1288,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> system_ns</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">1704015249809485863,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> NF</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">-78,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> RSS</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">-7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">], RxExtraInfo:[len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">24, ver</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">0x2, sf</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20.000000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> MHz, cfo</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.000000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> kHz, sfo</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> Hz], SDRExtra:[scrambler</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">39, packetStartInternal</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">25761, rxIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">25760, rxTime</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">0.001288, decodingDelay</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">0.0620708466, lastTxTime</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">0, sigEVM</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">2.4], (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">HT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)CSI:[device</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">USRP(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">SDR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), format</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">HT, CBW</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">20, cf</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2412.000000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> MHz, sf</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20.000000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> MHz, subcarrierBW</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">312.500000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> kHz, dim(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nTones</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nSTS</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nESS</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nRx</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nCSI</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">56</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), raw</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">0B], LegacyCSI:[device</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">USRP(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">SDR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), format</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">NonHT, CBW</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">20, cf</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2412.000000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> MHz, sf</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20.000000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> MHz, subcarrierBW</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">312.500000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> kHz, dim(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nTones</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nSTS</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nESS</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nRx</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nCSI</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">52</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), raw</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">0B], BasebandSignal:[(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) 3045x1], MACHeader:[type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[MF]Reserved_14, dest</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">00:16:ea:12:34:56, src</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">00:16:ea:12:34:56, seq</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">8, frag</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">0, mfrags</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">0], PSFHeader:[ver</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">0x20201110, device</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">QCA9300, numSegs</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">1, type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">10, taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">55742, txId</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">0], TxExtraInfo:[len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">8, ver</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">0x2], MPDU:[num</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">1, total</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">75B]}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h3>How to transmit packages</h3>
<p>The process of frame transmitting is similar to frame receiving.</p>
<p></p>
<ul>
<li><code>nic-&gt;startTxService()</code>:  Start transmitting signals process</li>
<li><code>buildBasicFrame</code>: Initialize and build Packet frame</li>
<li><code>nic-&gt;transmitPicoScenesFrameSync(*txframe);</code>: deliver frame to phy layer</li>
</ul>
<p>Add method <code>buildBasicFrame()</code> in <code>DemoPlugin.hxx</code></p>
<div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> : </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> AbstractPicoScenesPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Handle received frames in the plugin</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> rxHandle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ModularPicoScenesRxFrame</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> &amp;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">rxframe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">override</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Build a basic transmission frame for the plugin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    [[nodiscard]] std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">shared_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ModularPicoScenesTxFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">buildBasicFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">uint16_t</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">private:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    std::shared_ptr</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">po::options_description</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> options;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Implement <code>buildBasicFrame()</code> in <code>DemoPlugin.cxx</code></p>
<div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">shared_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ModularPicoScenesTxFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">DemoPlugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">buildBasicFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">uint16_t</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic"> taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> frame </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> nic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">initializeTxFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     * The platform parser will parse the Tx parameters options and store the results in AbstractNIC.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTxParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">nic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getUserSpecifiedTxParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTaskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(taskId);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> sourceAddr </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> MagicIntel123456;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setSourceAddress</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">sourceAddr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set3rdAddress</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">nic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getFrontEnd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMacAddressPhy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> frame;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            nic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">startTxService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Generate a random task ID within a specified range</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> taskId </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> SystemTools::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">uniformRandomNumberWithinRange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">uint16_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9999</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, UINT16_MAX);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Build a basic transmission frame with the generated task ID</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> txframe </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> buildBasicFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(taskId);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Transmit the PicoScenes frame synchronously</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            nic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">transmitPicoScenesFrameSync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">txframe);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Build the plugin and run in terminal</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">./Fast_Build_Install_Plugin.sh</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PicoScenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "-d debug</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            --bp --plugin-dir &lt;your-plugin-dir&gt;/PicoScenes-PDK;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            -i virtualsdr</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            --demo injector"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[18:15:35.993309] [SDR     ] [Debug] virtualsdr(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Virtual(SDR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))--&gt;TxFrame:{</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MACHeader:[type</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=[MF]Reserved_14,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dest=00:16:ea:12:34:56,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> src=00:16:ea:12:34:56,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> seq=0,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> frag=0,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mfrags=0],</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> PSFHeader:[ver=0x20201110,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> device=QCA9300,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> numSegs=0,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> type=0,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> taskId=33196,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> txId=0],</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tx_param[preset=DEFAULT,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> type=HT,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> CBW=20,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> MCS=0,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> numSTS=1,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Coding=BCC,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> GI=0.8us,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> numESS=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sounding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">11n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=1]}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PPDU:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2480</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h2>Debug PicoScenes plugins</h2>
<p>Since the plugin .so file cannot run by itself, a tricky problem of plugin development emerges, <code>how to debug a plugin?</code></p>
<p>Xincheng Ren, one of our contributors, records a .gif video describing the plugin debug process. In this video, we use JetBrains CLion as our IDE. To debug the EchoProbe plugin, rather than specifying the .so plugin file as the <code>debug main program</code>, you must specify the PicoScenes main program at <code>/usr/local/PicoScenes/bin/</code> to be the <code>debug main program</code>. Second, you should also add <code>--plugin-dir /path-to-plugin</code> program option to tell PicoScenes main program to load your plugins.</p>
<p></p>
<p>You can download this .gif video from <a href="../images/Plugin-Debug.gif">Debug Plugin</a>.</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    auto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> style</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pos::allow_long</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pos::allow_dash_for_short</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                 pos::long_allow_adjacent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pos::long_allow_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                 pos::short_allow_adjacent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pos::short_allow_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Parse</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> command</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Boost.ProgramOptions</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> store</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> options</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> variables</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> map</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    po::store(po::command_line_parser(po::split_unix(commandString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)).options(*options).style(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">.allow_unregistered</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">.run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), vm);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Notify</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> variables</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> map</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> about</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> parsed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> options</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    po::notify(vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Check</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> if</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "demo"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> option</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> present</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">vm.count(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">"demo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> value</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "demo"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> option</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        auto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> modeString</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> vm["demo"].as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">std::strin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">&gt;()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Check</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> if</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> modeString</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> contains</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "logger"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Rx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> accordingly</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">modeString.find(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">"logger"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) !</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> std::string::npos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            nic-&gt;startRxService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Check</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> if</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> modeString</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> contains</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "injector"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Tx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> with</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> basic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> frame</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> transmission</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">modeString.find(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">"injector"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) !</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> std::string::npos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            nic-&gt;startTxService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Generate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> random</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> task</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> within</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> specified</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> range</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            auto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> taskId</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> SystemTools::Math::uniformRandomNumberWithinRange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">uint16_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">&gt;(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">9999,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> UINT16_MAX)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> basic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> transmission</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> frame</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> with</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> generated</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> task</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ID</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            auto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> txframe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> buildBasicFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">taskId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Transmit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> PicoScenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> frame</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> synchronously</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            nic-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">transmitPicoScenesFrameSync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">*txframe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Build the plugin and run in terminal</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">./Fast_Build_Install_Plugin.sh</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PicoScenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "-d debug</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            --bp --plugin-dir &lt;your-plugin-dir&gt;/PicoScenes-PDK;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            -i virtualsdr</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            --demo injector"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[18:15:35.993309] [SDR     ] [Debug] virtualsdr(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Virtual(SDR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))--&gt;TxFrame:{</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MACHeader:[type</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=[MF]Reserved_14,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> dest=00:16:ea:12:34:56,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> src=00:16:ea:12:34:56,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> seq=0,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> frag=0,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mfrags=0],</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> PSFHeader:[ver=0x20201110,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> device=QCA9300,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> numSegs=0,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> type=0,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> taskId=33196,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> txId=0],</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tx_param[preset=DEFAULT,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> type=HT,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> CBW=20,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> MCS=0,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> numSTS=1,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Coding=BCC,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> GI=0.8us,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> numESS=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sounding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">11n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=1]}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PPDU:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2480</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h2>Debug PicoScenes plugins</h2>
<p>Since the plugin .so file cannot run by itself, a tricky problem of plugin development emerges, <code>how to debug a plugin?</code></p>
<p>Xincheng Ren, one of our contributors, records a .gif video describing the plugin debug process. In this video, we use JetBrains CLion as our IDE. To debug the EchoProbe plugin, rather than specifying the .so plugin file as the <code>debug main program</code>, you must specify the PicoScenes main program at <code>/usr/local/PicoScenes/bin/</code> to be the <code>debug main program</code>. Second, you should also add <code>--plugin-dir /path-to-plugin</code> program option to tell PicoScenes main program to load your plugins.</p>
<p></p>
<p>You can download this .gif video from <a href="../images/Plugin-Debug.gif">Debug Plugin</a>.</p>
]]></content>
  </entry>
  <entry>
    <title type="text">Open Source Software Licenses</title>
    <id>https://ps.zpj.io/userManual/presets.html</id>
    <link href="https://ps.zpj.io/userManual/presets.html"/>
    <updated>2025-04-14T03:56:18.982Z</updated>
    <summary type="html"><![CDATA[
<p>We recommend users in most cases to use <em>preset-based Tx/Rx setting</em>. It significantly shorten the command line options and avoid many mistakes. In this page, we show and explain all presets provided by PicoScenes.</p>
<h2>FrontEnd Mode Presets</h2>
<p>The naming of presets are intuitive:</p>]]></summary>
    <content type="html"><![CDATA[
<p>We recommend users in most cases to use <em>preset-based Tx/Rx setting</em>. It significantly shorten the command line options and avoid many mistakes. In this page, we show and explain all presets provided by PicoScenes.</p>
<h2>FrontEnd Mode Presets</h2>
<p>The naming of presets are intuitive:</p>
<ul>
<li><code>TX_CBW_&lt;BANDWIDTH&gt;_FORMAT_[LDPC]</code>: Transmit in <code>&lt;BANDWIDTH&gt;</code> channel bandwidth and <code>&lt;FORMAT&gt;</code> format (explicitly with LDPC coding)</li>
<li><code>RX_CBW_&lt;BANDWIDTH&gt;</code>: Receive in <code>&lt;BANDWIDTH&gt;</code> channel bandwidth</li>
<li><code>TR_CBW_&lt;BANDWIDTH&gt;_FORMAT_[LDPC]</code>: Transmit and receive in <code>&lt;BANDWIDTH&gt;</code> channel bandwidth, transmit in <code>&lt;FORMAT&gt;</code> format (explicitly with LDPC coding)</li>
</ul>
<p>Five supports formats are:</p>
<ul>
<li>NONHT: 802.11 a/g format</li>
<li>HT: 802.11n format</li>
<li>VHT: 802.11ac format</li>
<li>HESU: 802.11ax (HE) Single User format</li>
<li>EHTSU: 802.11be (EHT) Single User format</li>
</ul>
<p>| Preset Name | Direction | Equivalent Long Options |<br>
|</p>
]]></content>
  </entry>
  <entry>
    <title type="text">Online Supplementaries for &amp;quot;Reshaping Wi-Fi ISAC with High-Coherence Hardware Capabilities&amp;quot;</title>
    <id>https://ps.zpj.io/userManual/reshaping-wifi-isac.html</id>
    <link href="https://ps.zpj.io/userManual/reshaping-wifi-isac.html"/>
    <updated>2025-04-14T03:56:18.985Z</updated>
    <summary type="html"><![CDATA[<h2>Context of This Page</h2>
<p>Our research work "<strong>Reshaping Wi-Fi ISAC with High-Coherence Hardware Capabilities</strong>", has been accepted by <strong>IEEE Communication Magazine (IF=11.2)</strong>! This work proposes to reshape the current research paradigm of Wi-Fi ISAC (Wi-Fi Integrated Sensing and Communication) with the proposed high-coherence hardware capabilities, and has been validated through two high-precision sensing demos. As research in this direction is still exploratory, this list of capabilities may change over time, so we hope to continuously update our research in this direction through this online page to promote the practical application of these capabilities.</p>]]></summary>
    <content type="html"><![CDATA[<h2>Context of This Page</h2>
<p>Our research work "<strong>Reshaping Wi-Fi ISAC with High-Coherence Hardware Capabilities</strong>", has been accepted by <strong>IEEE Communication Magazine (IF=11.2)</strong>! This work proposes to reshape the current research paradigm of Wi-Fi ISAC (Wi-Fi Integrated Sensing and Communication) with the proposed high-coherence hardware capabilities, and has been validated through two high-precision sensing demos. As research in this direction is still exploratory, this list of capabilities may change over time, so we hope to continuously update our research in this direction through this online page to promote the practical application of these capabilities.</p>
<h2>Download</h2>
<p>The main article and supplementaries can be downloaded at <a href="_static/Reshaping-Main.pdf">Reshaping Wi-Fi ISAC with High-Coherence Hardware Capabilities</a> and <a href="_static/Reshaping-Supplementary.pdf">Supplementaries</a>.</p>
<h2>What Can High-Coherence Hardware Capabilities Bring?</h2>
<p>With high-coherence hardware capabilities, the CSI data will recover high-coherence characteristics in five dimensions: time, frequency, phase, amplitude, and space, enabling the support for various coherent algorithms from the radar field to be ported to the Wi-Fi platform, significantly enhancing the capacity and capabilities of Wi-Fi sensing.</p>
<h2>About the Two Demos</h2>
<p>Both demos are developed based on the PicoScenes platform, and we will open source the core implementation of the two demos at an appropriate time in the future.</p>
<h2>About Us</h2>
<p>We are a Wi-Fi "industry-academia-research" alliance that includes academia, industry, standards, certification, and major customers. Our goal is to build an open "industry-academia-research" interactive platform for friends in the academic and industrial fields related to Wi-Fi, to jointly promote valuable and influential Wi-Fi research into industrial applications, and to drive the next decade of development in the Wi-Fi industry.</p>
<h2>Technical Cooperation</h2>
<p>We are very eager to engage in extensive contacts with various Wi-Fi vendors and discuss how to promote the application and large-scale implementation of Wi-Fi ISAC through the enhancement of underlying hardware capabilities.</p>
<p>For technical cooperation, please contact: <a href="mailto:zpj@xidian.edu.cn" target="_blank" rel="noopener noreferrer">zpj@xidian.edu.cn</a></p>
]]></content>
  </entry>
  <entry>
    <title type="text">Useful Resources</title>
    <id>https://ps.zpj.io/userManual/resources.html</id>
    <link href="https://ps.zpj.io/userManual/resources.html"/>
    <updated>2025-04-14T03:56:18.985Z</updated>
    <summary type="html"><![CDATA[<h2>The academic paper of PicoScenes</h2>
<p>Zhiping Jiang, Tom H. Luan, Xincheng Ren, Dongtao Lv, Han Hao, Jing Wang, Kun Zhao, Wei Xi, Yueshen Xu, Rui Li, <a href="https://doi.org/10.1109/JIOT.2021.3104666" target="_blank" rel="noopener noreferrer">Eliminating the Barriers: Demystifying Wi-Fi Baseband Design and Introducing the PicoScenes Wi-Fi Sensing Platform, in IEEE Internet of Things Journal (IEEE IOT-J)</a>.</p>]]></summary>
    <content type="html"><![CDATA[<h2>The academic paper of PicoScenes</h2>
<p>Zhiping Jiang, Tom H. Luan, Xincheng Ren, Dongtao Lv, Han Hao, Jing Wang, Kun Zhao, Wei Xi, Yueshen Xu, Rui Li, <a href="https://doi.org/10.1109/JIOT.2021.3104666" target="_blank" rel="noopener noreferrer">Eliminating the Barriers: Demystifying Wi-Fi Baseband Design and Introducing the PicoScenes Wi-Fi Sensing Platform, in IEEE Internet of Things Journal (IEEE IOT-J)</a>.</p>
<p>This paper introduces PicoScenes and also reports very extensive performance evaluations of PicoScenes. Many of the results are state of the art.</p>
<blockquote>
<p><strong>Important</strong>: If PicoScenes software (including the main program, bash scripts, PicoScenes MATLAB Toolbox and any PicoScenes plugins regardless of the ownership) is used by any form in your academic research, <strong>you should cite the above work</strong>. This citation requirement is also included in the PicoScenes Software EULA.</p>
</blockquote>
<h2>Quick Reference</h2>
<ul>
<li>Wi-Fi Channelization Table: <a href="/userManual/channels.html" target="_blank">channels</a></li>
<li>Frontend Presets List: <a href="/userManual/presets.html" target="_blank">presets</a></li>
<li>Device Naming Protocol: <a href="/userManual/scenarios.html#device-naming" target="_blank">device_naming</a></li>
</ul>
<h2>Opensource repositories</h2>
<ul>
<li>PicoScenes projects group: <a href="https://github.com/wifisensing" target="_blank" rel="noopener noreferrer">https://github.com/wifisensing</a>. The following are some of the open source sub-projects.
<ul>
<li><a href="https://github.com/wifisensing/PicoScenes-MATLAB-Toolbox-Core" target="_blank" rel="noopener noreferrer">PicoScenes MATLAB Toolbox Core</a>: the official PicoScenes MATLAB Toolbox (PMT) that parse the PicoScenes .csi file.</li>
<li><a href="https://github.com/wifisensing/PicoScenes-Python-Toolbox" target="_blank" rel="noopener noreferrer">PicoScenes Python Toolbox</a>: the official PicoScenes Python Toolbox (PPT) that parse the PicoScenes .csi file in Python. This project is contributed by Tian Teng.</li>
<li><a href="https://github.com/wifisensing/RXS-Parsing-Core" target="_blank" rel="noopener noreferrer">RXS-Parsing-Core</a>: the core CSI data parsing routine and the related utility code. This project is shared among the PicoScenes main program, PicoScenes MATLAB Toolbox and PicoScenes Python Toolbox via git submodule.</li>
<li><a href="https://github.com/wifisensing/PicoScenes-PDK" target="_blank" rel="noopener noreferrer">PicoScenes Plugin Development Kit (PS-PDK)</a>: the source repositories of three PicoScenes plugins, namely the Demo Plugin, UDP Forwarder and EchoProbe. We name it PS-PDK, because most PicoScenes plugins are developed based on this repo.</li>
<li><a href="https://github.com/wifisensing/PicoScenes-Manual" target="_blank" rel="noopener noreferrer">PicoScenes Manual</a>: the reStructuredText source code of this documentation.</li>
</ul>
</li>
</ul>
<h2>Other useful resources on Wi-Fi/RF/Smart Sensing</h2>
<ul>
<li><a href="https://iot-book.github.io" target="_blank" rel="noopener noreferrer">IoT Book</a> by Jiliang Wang, Tsinghua University (A full Chinese book). 王老师的这本IoT Book覆盖了智能感知相关的众多研究方向的最新进展及上手宝典，是入门智能感知相关研究不可多得的教材。</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title type="text">CSI Measurement using PicoScenes</title>
    <id>https://ps.zpj.io/userManual/scenarios.html</id>
    <link href="https://ps.zpj.io/userManual/scenarios.html"/>
    <updated>2025-04-14T03:56:18.987Z</updated>
    <summary type="html"><![CDATA[<p><strong>Revisions</strong></p>
<ul>
<li>Dec. 3, 2023 Add radar mode and MIMO radar mode, see <a href="#wi-fi-radar-80211bf-mono-static-sensing-mode-with-80211agnacaxbe-frame-format">Wi-Fi Radar (802.11bf Mono-Static Sensing Mode) with 802.11a/g/n/ac/ax/be Frame Format</a>.</li>
</ul>
<p>On this page, we will demonstrate the methods of CSI measurement and various low-level controls on different hardware frontends. You can jump to the interested topics via following links:</p>]]></summary>
    <content type="html"><![CDATA[<p><strong>Revisions</strong></p>
<ul>
<li>Dec. 3, 2023 Add radar mode and MIMO radar mode, see <a href="#wi-fi-radar-80211bf-mono-static-sensing-mode-with-80211agnacaxbe-frame-format">Wi-Fi Radar (802.11bf Mono-Static Sensing Mode) with 802.11a/g/n/ac/ax/be Frame Format</a>.</li>
</ul>
<p>On this page, we will demonstrate the methods of CSI measurement and various low-level controls on different hardware frontends. You can jump to the interested topics via following links:</p>
<ol>
<li><a href="#before-getting-started-some-fundamentals">Before Getting Started: Some Fundamentals</a></li>
<li><a href="#isac-research-using-ni-usrp-or-hackrf-one-sdr">ISAC Research using NI USRP or HackRF One SDR</a></li>
<li><a href="#csi-measurement-using-ax210ax200-nics">CSI Measurement using AX210/AX200 NICs</a></li>
<li><a href="#csi-measurement-using-qca9300-and-iwl5300-nics">CSI Measurement using QCA9300 and IWL5300 NICs</a></li>
<li><a href="#interoperability-among-sdr-and-cots-nics">Interoperability among SDR and COTS NICs</a></li>
</ol>
<p>Before we proceed, it is assumed that you have already installed the PicoScenes software and the supported hardware. See <a href="/userManual/installation.html" target="_blank">PicoScenes Installation &amp; Upgrade</a> for hardware and software installation guides.</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果您不想费劲地看英文，请开启浏览器的翻译功能，省脑子。</p>
</div>
<h2>Before Getting Started: Some Fundamentals</h2>
<p>Here we introduce two fundamentals <a href="#device-naming">Device Naming</a> and <a href="#basic-facts-of-wi-fi-channelization">Basic Facts of Wi-Fi Channelization</a>.</p>
<h3>Device Naming</h3>
<p>In order to mult-frontend operation, we devise an simply device naming protocol, which is elaborated in the follow section.</p>
<h4>Device Naming for Commercial Wi-Fi NICs</h4>
<p>PicoScenes provides a script named <code>array_status</code>, which lists all the <strong>PCI-E based Wi-Fi NICs</strong>. A sample output is as below:</p>
<p></p>
<p>In the array_status output, there are four IDs for each NIC: <em>PhyPath</em>, <em>PhyId</em>, <em>DevId</em>, and <em>MonId</em>. Their explanations are shown below. Among them, we strongly <strong>recommend using PhyPath ID</strong> in all scenarios.</p>
<p>| ID Type | Description |<br>
|</p>
]]></content>
  </entry>
  <entry>
    <title type="text">Development Status</title>
    <id>https://ps.zpj.io/userManual/status.html</id>
    <link href="https://ps.zpj.io/userManual/status.html"/>
    <updated>2025-04-14T03:56:19.003Z</updated>
    <summary type="html"><![CDATA[<p>PicoScenes is <em>still</em> under <em>very active</em> development. We are adding new features, new controls, and fix bugs. Checkout the changelogs for the latest progress.</p>
<p><a href="https://zpj.io/PicoScenes/platform-changelog" target="_blank" rel="noopener noreferrer">PicoScenes Platform Changelog</a></p>]]></summary>
    <content type="html"><![CDATA[<p>PicoScenes is <em>still</em> under <em>very active</em> development. We are adding new features, new controls, and fix bugs. Checkout the changelogs for the latest progress.</p>
<p><a href="https://zpj.io/PicoScenes/platform-changelog" target="_blank" rel="noopener noreferrer">PicoScenes Platform Changelog</a></p>
<p><a href="https://github.com/wifisensing/PicoScenes-PDK/-/blob/master/changelog.html" target="_blank" rel="noopener noreferrer">PicoScenes Plugin Development Kit (PDK) Changelog</a></p>
<p><a href="https://github.com/wifisensing/PicoScenes-MATLAB-Toolbox-Core/-/blob/main/changelog.html" target="_blank" rel="noopener noreferrer">PicoScenes MATLAB Toolbox (PMT) Changelog</a></p>
]]></content>
  </entry>
  <entry>
    <title type="text">Troubleshooting &amp; Support</title>
    <id>https://ps.zpj.io/userManual/troubleshooting.html</id>
    <link href="https://ps.zpj.io/userManual/troubleshooting.html"/>
    <updated>2025-04-14T03:56:19.003Z</updated>
    <summary type="html"><![CDATA[<h2>Troubleshooting</h2>
<p>The following shows some of the most frequently seen errors and their solutions for quick reference. For other issues that happened during the installation, upgrading or later usage, you may seek <a href="#technical-support">technical support</a> by submitting a bug report to PicoScenes Issues Tracker.</p>]]></summary>
    <content type="html"><![CDATA[<h2>Troubleshooting</h2>
<p>The following shows some of the most frequently seen errors and their solutions for quick reference. For other issues that happened during the installation, upgrading or later usage, you may seek <a href="#technical-support">technical support</a> by submitting a bug report to PicoScenes Issues Tracker.</p>
<h3>Errors during installation &amp; daily update</h3>
<ul>
<li>
<p><em>Problem</em>: <strong>Error during apt update, "Certificate verification failed: The certificate is NOT trusted. The certificate chain uses expired certificate. XXX.... The repository 'xxxx' does not have a Release file."</strong></p>
<p><strong>Solution</strong>: Re-install <em>ca-certificate</em> package by <code>sudo apt-get install --reinstall ca-certificates</code>.</p>
</li>
<li>
<p><em>Problem</em>: <strong>Error during apt installation saying, "E: fail to fetch XXX, File has unexpected size (xxx != xxx). ..."</strong></p>
<p><strong>Solution</strong>: The possible reason is that the PicoScenes repository is updated, but your local apt cache is not synced. To fix this error, you should run <code>sudo apt update</code> to sync your local apt cache.</p>
</li>
<li>
<p><em>Problem</em>: <strong>Current PicoScenes build is expired. You should upgrade PicoScenes to the latest version.</strong></p>
<p><strong>Solution</strong>: As PicoScenes is still under active development, we set a 60-day expiration for each PicoScenes build. If your current build is expired, follow <a href="/userManual/installation.html" target="_blank">PicoScenes Installation &amp; Upgrade</a> to upgrade your PicoScenes software.</p>
</li>
<li>
<p><em>Problem</em>: apt system get deadlocked during PicoScenes upgrade</p>
<p><strong>Solution</strong>: <a href="https://github.com/wifisensing/PicoScenes-Issue-Tracker/-/issues/61" target="_blank" rel="noopener noreferrer">Issue #61 on GitHub</a></p>
</li>
</ul>
<h3>Runtime errors</h3>
<ul>
<li>
<p><em>Problem</em>: <strong>[Warning] Incompatible kernel version, current version: XXX, expected version: YYY.</strong></p>
<p><strong>Solution</strong>: This is because your system loads the incompatible kernel. Solution: reboot your computer and choose the expected kernel version YYY in grub menu.</p>
<p>If your computer doesn't show the grub boot selection menu, you may refer to <a href="https://askubuntu.com/questions/16042/how-to-get-to-the-grub-menu-at-boot-time/16049#16049" target="_blank" rel="noopener noreferrer">https://askubuntu.com/questions/16042/how-to-get-to-the-grub-menu-at-boot-time/16049#16049</a> to restore the menu.</p>
</li>
<li>
<p><em>Problem</em>: <strong>PicoScenes requires your system clock to be synchronous with a global NTP server.</strong></p>
<p><strong>Solution</strong>: This error usually happens when you connect to an AP but it has no internet connection and with wrong clock/time setting. You may either switch to an internet-connected AP or configure the AP's clock/time setting manually.</p>
</li>
<li>
<p><em>Problem</em>: <strong>Error during USRP B200 series installation, "Could not find the image 'usrp_b200_fw.hex' in the image directory /usr/share/uhd/images ...."</strong></p>
<p><strong>Solution</strong>: run <code>sudo /usr/lib/uhd/utils/uhd_images_downloader.py</code> to download <strong>all</strong> USRP images.</p>
</li>
</ul>
<h3>MATLAB Toolbox errors</h3>
<ul>
<li>
<p><em>Problem</em>: libstdc++.so.6: version GLIBCXX_3.4.26 not found</p>
<p><strong>Solution</strong>: install <code>matlab-support</code> package as described in <a href="/userManual/installation.html#install-picoscenes-matlab-toolbox-core" target="_blank">Install PicoScenes MATLAB Toolbox Core</a>.<br>
Thanks <em>Jinen Li</em> from Shenzhen University (SZU) for providing this bug fix!</p>
</li>
</ul>
<h2>Technical Support</h2>
<h3>PicoScenes Issues Tracker (PicoScenes官方交流问答)</h3>
<p>We provide the official and public technical support via <a href="https://github.com/wifisensing/PicoScenes-Issue-Tracker/issues" target="_blank" rel="noopener noreferrer">PicoScenes Issues Tracker</a>. You may post software bugs, encountered problems and suggestions to the issue tracker. Once you post an issue, GitHub will notify us and we will reach it as soon as possible.</p>
<p><strong>对于中文用户</strong>：如果您不想咬文嚼字用英语交流，没问题！ 您中文提问，我们中文回复：）</p>
<h3>PicoScenes微信群(PicoScenes WeChat group)</h3>
<p>If WeChat is one of your favorite IM APPs, you may join the PicoScenes WeChat Group by contacting Zhiping Jiang "jiangzhiping" in WeChat. As the group has exceeded 200 people, you can only be invited to the group.</p>
]]></content>
  </entry>
  <entry>
    <title type="text">Users</title>
    <id>https://ps.zpj.io/userManual/users.html</id>
    <link href="https://ps.zpj.io/userManual/users.html"/>
    <updated>2025-04-14T03:56:19.005Z</updated>
    <summary type="html"><![CDATA[<h2>Published Papers by PicoScenes Users</h2>
<ul>
<li>Viktor Erdélyi, Kazuki Miyao, Akira Uchiyama, Tomoki Murakami, <a href="https://dl.acm.org/doi/abs/10.1145/3643832.3661396" target="_blank" rel="noopener noreferrer">"Poster: Activity Recognition Using CSI Backscatter with Commodity Wi-Fi"</a>, 2024, MobiSys.</li>
<li>Hao Yin, Murali Ramanujam, Joe Schaefer, Stan Adermann, Srihari Narlanka, Perry Lea, Ravi Netravali, Krishna Chintalapudi, <a href="https://www.usenix.org/conference/nsdi24/presentation/yin" target="_blank" rel="noopener noreferrer">"ADR-X: ANN-Assisted Wireless Link Rate Adaptation for Compute-Constrained Embedded Gaming Devices"</a>, 2024 NSDI.</li>
<li>N.Ikuo, <a href="https://ieeexplore.ieee.org/abstract/document/10454882" target="_blank" rel="noopener noreferrer">"CSI2PC: 3D Point Cloud Reconstruction Using CSI"</a>, 2024 IEEE 21st Consumer Communications &amp; Networking Conference (CCNC).</li>
<li>C.-H.Lee, H.Choi, Y.Arakawa, D.-H.Kim, J.-D.Kim, <a href="https://ieeexplore.ieee.org/abstract/document/10643056" target="_blank" rel="noopener noreferrer">"Bilatangulation: A Novel Measurement Error Compensation Method for Wi-Fi Indoor Positioning with Two Anchors"</a>, 2024 IEEE Access.</li>
<li>T.-W.Hsu and H.-Y.Hsieh, <a href="https://ieeexplore.ieee.org/abstract/document/10623053" target="_blank" rel="noopener noreferrer">"Robust Multi-User Pose Estimation Based on Spatial and Temporal Features from WiFi CSI"</a>, ICC 2024 - IEEE International Conference on Communications.</li>
<li>V.V.Ratnam, <a href="https://ieeexplore.ieee.org/abstract/document/10556775" target="_blank" rel="noopener noreferrer">"WiDRa: Enabling Millimeter-Level Differential Ranging Accuracy in Wi-Fi Using Carrier Phase"</a>, 2024 in IEEE Journal on Selected Areas in Communications.</li>
<li>L.Zhang, <a href="https://ieeexplore.ieee.org/abstract/document/10597619" target="_blank" rel="noopener noreferrer">"Toward Robust and Effective Behavior Based User Authentication With Off-the-shelf Wi-Fi"</a>, 2024 IEEE Transactions on Information Forensics and Security.</li>
<li>Xin Na, Xiuzhen Guo, Zihao Yu, Jia Zhang, Yuan He, Yunhao Liu, <a href="https://dl.acm.org/doi/abs/10.1145/3581791.3596835" target="_blank" rel="noopener noreferrer">"Leggiero: Analog WiFi Backscatter with Payload Transparency"</a>, 2023 MobiSys.</li>
<li>Pengming Hu, Weidong Yang, Xuyu Wang, Shiwen Mao, Erbo Shen, <a href="https://ieeexplore.ieee.org/abstract/document/10225988" target="_blank" rel="noopener noreferrer">"WiWm-EP: Wi-Fi CSI-based Wheat Moisture Detection Using Equivalent Permittivity"</a>, IEEE INFOCOM 2023.</li>
<li>Xinyue Fang, Jianwei Liu, Yike Chen, Jinsong Han, Kui Ren, Gang Chen, <a href="https://ieeexplore.ieee.org/abstract/document/10228947" target="_blank" rel="noopener noreferrer">"Nowhere to Hide: Detecting Live Video Forgery via Vision-WiFi Silhouette Correspondence"</a>, IEEE INFOCOM 2023-IEEE Conference on Computer Communications, 2023.</li>
<li>Shiva Raj Pokhrel, Jonathan Kua, Deol Satish, Philip Williams, Arkady Zaslavsky, Seng W. Loke, Jinho Choi, <a href="https://ieeexplore.ieee.org/abstract/document/10271124" target="_blank" rel="noopener noreferrer">"Deakin RF-Sensing: Experiments on Correlated Knowledge Distillation for Monitoring Human Postures With Radios"</a>, IEEE Sensors Journal, 2023.</li>
<li>Viktor Erdélyi, Kazuki Miyao, Akira Uchiyama, Tomoki Murakami, <a href="https://ieeexplore.ieee.org/abstract/document/10150323" target="_blank" rel="noopener noreferrer">"Towards Activity Recognition Using Wi-Fi CSI from Backscatter Tags"</a>, 2023 IEEE International Conference on Pervasive Computing and Communications Workshops and other Affiliated Events (PerCom Workshops).</li>
<li>Wenli Jiao, Ju Wang, Yelu He, Xiangdong Xi, Fuwei Wang, <a href="https://ieeexplore.ieee.org/abstract/document/10061277" target="_blank" rel="noopener noreferrer">"SoilTAG: Fine-Grained Soil Moisture Sensing Through Chipless Tags"</a>, 2023 IEEE Transactions on Mobile Computing (Early Access).</li>
<li>Guoxuan Chi, Zheng Yang, Jingao Xu, Chenshu Wu, Jialin Zhang, Jianzhe Liang, Yunhao Liu, <a href="https://dl.acm.org/doi/abs/10.1145/3498361.3538936" target="_blank" rel="noopener noreferrer">"Wi-drone: wi-fi-based 6-DoF tracking for indoor drone flight control"</a>, 2022 MobiSys.</li>
<li>Pengming Hu, Weidong Yang, Xuyu Wang, Shiwen Mao, Chao Niu, <a href="https://ieeexplore.ieee.org/abstract/document/9973501" target="_blank" rel="noopener noreferrer">"WiPd: Contactless Water-Injected Pork Detection Using Commodity WiFi Devices"</a>, 2022 IEEE 19th International Conference on Mobile Ad Hoc and Smart Systems (MASS).</li>
<li>Ruilin Wang, Xiaolin Zhou, Bo Wang, Zhi Zheng, Yongxin Guo, <a href="https://ieeexplore.ieee.org/abstract/document/9790274" target="_blank" rel="noopener noreferrer">"A Subcarrier Selection Method for Wi-Fi-based Respiration Monitoring using IEEE 802.11ac/ax Protocols"</a>, 2022 IEEE MTT-S International Microwave Biomedical Conference (IMBioC).</li>
<li>Jie Zhang, Zhongmin Wang, Kexin Zhou, Ruohan Bai, <a href="https://www.htmlpi.com/1099-4300/24/11/1700" target="_blank" rel="noopener noreferrer">"A Novel Drinking Category Detection Method Based on Wireless Signals and Artificial Neural Network"</a>, Entropy, 2022.</li>
<li>Xiaoyu Ma, Wei Xi, Zuhao Chen, Han Hao, Jizhong Zhao, <a href="https://www.htmlpi.com/2076-3417/12/14/7321" target="_blank" rel="noopener noreferrer">"ECC: Passenger Counting in the Elevator Using Commodity WiFi"</a>, Applied Sciences, 2022.</li>
<li>Qing Yang, Tianzhang Xing, Zhiping Jiang, Junfeng Wang, Jingyi He, <a href="https://link.springer.com/chapter/10.1007/978-3-030-95388-1_23" target="_blank" rel="noopener noreferrer">"WiRD: Real-Time and Cross Domain Detection System on Edge Device"</a>, Algorithms and Architectures for Parallel Processing, 2022.</li>
<li>Xiaoyu Ma, Hui He, Hui Zhang, Wei Xi, Zuhao Chen, Jizhong Zhao, <a href="https://ieeexplore.ieee.org/abstract/document/9763705" target="_blank" rel="noopener noreferrer">"Measuring and Modeling Multipath of Wi-Fi to Locate People in Indoor Environments"</a>, 2021 IEEE 27th International Conference on Parallel and Distributed Systems (ICPADS).</li>
</ul>]]></summary>
    <content type="html"><![CDATA[<h2>Published Papers by PicoScenes Users</h2>
<ul>
<li>Viktor Erdélyi, Kazuki Miyao, Akira Uchiyama, Tomoki Murakami, <a href="https://dl.acm.org/doi/abs/10.1145/3643832.3661396" target="_blank" rel="noopener noreferrer">"Poster: Activity Recognition Using CSI Backscatter with Commodity Wi-Fi"</a>, 2024, MobiSys.</li>
<li>Hao Yin, Murali Ramanujam, Joe Schaefer, Stan Adermann, Srihari Narlanka, Perry Lea, Ravi Netravali, Krishna Chintalapudi, <a href="https://www.usenix.org/conference/nsdi24/presentation/yin" target="_blank" rel="noopener noreferrer">"ADR-X: ANN-Assisted Wireless Link Rate Adaptation for Compute-Constrained Embedded Gaming Devices"</a>, 2024 NSDI.</li>
<li>N.Ikuo, <a href="https://ieeexplore.ieee.org/abstract/document/10454882" target="_blank" rel="noopener noreferrer">"CSI2PC: 3D Point Cloud Reconstruction Using CSI"</a>, 2024 IEEE 21st Consumer Communications &amp; Networking Conference (CCNC).</li>
<li>C.-H.Lee, H.Choi, Y.Arakawa, D.-H.Kim, J.-D.Kim, <a href="https://ieeexplore.ieee.org/abstract/document/10643056" target="_blank" rel="noopener noreferrer">"Bilatangulation: A Novel Measurement Error Compensation Method for Wi-Fi Indoor Positioning with Two Anchors"</a>, 2024 IEEE Access.</li>
<li>T.-W.Hsu and H.-Y.Hsieh, <a href="https://ieeexplore.ieee.org/abstract/document/10623053" target="_blank" rel="noopener noreferrer">"Robust Multi-User Pose Estimation Based on Spatial and Temporal Features from WiFi CSI"</a>, ICC 2024 - IEEE International Conference on Communications.</li>
<li>V.V.Ratnam, <a href="https://ieeexplore.ieee.org/abstract/document/10556775" target="_blank" rel="noopener noreferrer">"WiDRa: Enabling Millimeter-Level Differential Ranging Accuracy in Wi-Fi Using Carrier Phase"</a>, 2024 in IEEE Journal on Selected Areas in Communications.</li>
<li>L.Zhang, <a href="https://ieeexplore.ieee.org/abstract/document/10597619" target="_blank" rel="noopener noreferrer">"Toward Robust and Effective Behavior Based User Authentication With Off-the-shelf Wi-Fi"</a>, 2024 IEEE Transactions on Information Forensics and Security.</li>
<li>Xin Na, Xiuzhen Guo, Zihao Yu, Jia Zhang, Yuan He, Yunhao Liu, <a href="https://dl.acm.org/doi/abs/10.1145/3581791.3596835" target="_blank" rel="noopener noreferrer">"Leggiero: Analog WiFi Backscatter with Payload Transparency"</a>, 2023 MobiSys.</li>
<li>Pengming Hu, Weidong Yang, Xuyu Wang, Shiwen Mao, Erbo Shen, <a href="https://ieeexplore.ieee.org/abstract/document/10225988" target="_blank" rel="noopener noreferrer">"WiWm-EP: Wi-Fi CSI-based Wheat Moisture Detection Using Equivalent Permittivity"</a>, IEEE INFOCOM 2023.</li>
<li>Xinyue Fang, Jianwei Liu, Yike Chen, Jinsong Han, Kui Ren, Gang Chen, <a href="https://ieeexplore.ieee.org/abstract/document/10228947" target="_blank" rel="noopener noreferrer">"Nowhere to Hide: Detecting Live Video Forgery via Vision-WiFi Silhouette Correspondence"</a>, IEEE INFOCOM 2023-IEEE Conference on Computer Communications, 2023.</li>
<li>Shiva Raj Pokhrel, Jonathan Kua, Deol Satish, Philip Williams, Arkady Zaslavsky, Seng W. Loke, Jinho Choi, <a href="https://ieeexplore.ieee.org/abstract/document/10271124" target="_blank" rel="noopener noreferrer">"Deakin RF-Sensing: Experiments on Correlated Knowledge Distillation for Monitoring Human Postures With Radios"</a>, IEEE Sensors Journal, 2023.</li>
<li>Viktor Erdélyi, Kazuki Miyao, Akira Uchiyama, Tomoki Murakami, <a href="https://ieeexplore.ieee.org/abstract/document/10150323" target="_blank" rel="noopener noreferrer">"Towards Activity Recognition Using Wi-Fi CSI from Backscatter Tags"</a>, 2023 IEEE International Conference on Pervasive Computing and Communications Workshops and other Affiliated Events (PerCom Workshops).</li>
<li>Wenli Jiao, Ju Wang, Yelu He, Xiangdong Xi, Fuwei Wang, <a href="https://ieeexplore.ieee.org/abstract/document/10061277" target="_blank" rel="noopener noreferrer">"SoilTAG: Fine-Grained Soil Moisture Sensing Through Chipless Tags"</a>, 2023 IEEE Transactions on Mobile Computing (Early Access).</li>
<li>Guoxuan Chi, Zheng Yang, Jingao Xu, Chenshu Wu, Jialin Zhang, Jianzhe Liang, Yunhao Liu, <a href="https://dl.acm.org/doi/abs/10.1145/3498361.3538936" target="_blank" rel="noopener noreferrer">"Wi-drone: wi-fi-based 6-DoF tracking for indoor drone flight control"</a>, 2022 MobiSys.</li>
<li>Pengming Hu, Weidong Yang, Xuyu Wang, Shiwen Mao, Chao Niu, <a href="https://ieeexplore.ieee.org/abstract/document/9973501" target="_blank" rel="noopener noreferrer">"WiPd: Contactless Water-Injected Pork Detection Using Commodity WiFi Devices"</a>, 2022 IEEE 19th International Conference on Mobile Ad Hoc and Smart Systems (MASS).</li>
<li>Ruilin Wang, Xiaolin Zhou, Bo Wang, Zhi Zheng, Yongxin Guo, <a href="https://ieeexplore.ieee.org/abstract/document/9790274" target="_blank" rel="noopener noreferrer">"A Subcarrier Selection Method for Wi-Fi-based Respiration Monitoring using IEEE 802.11ac/ax Protocols"</a>, 2022 IEEE MTT-S International Microwave Biomedical Conference (IMBioC).</li>
<li>Jie Zhang, Zhongmin Wang, Kexin Zhou, Ruohan Bai, <a href="https://www.htmlpi.com/1099-4300/24/11/1700" target="_blank" rel="noopener noreferrer">"A Novel Drinking Category Detection Method Based on Wireless Signals and Artificial Neural Network"</a>, Entropy, 2022.</li>
<li>Xiaoyu Ma, Wei Xi, Zuhao Chen, Han Hao, Jizhong Zhao, <a href="https://www.htmlpi.com/2076-3417/12/14/7321" target="_blank" rel="noopener noreferrer">"ECC: Passenger Counting in the Elevator Using Commodity WiFi"</a>, Applied Sciences, 2022.</li>
<li>Qing Yang, Tianzhang Xing, Zhiping Jiang, Junfeng Wang, Jingyi He, <a href="https://link.springer.com/chapter/10.1007/978-3-030-95388-1_23" target="_blank" rel="noopener noreferrer">"WiRD: Real-Time and Cross Domain Detection System on Edge Device"</a>, Algorithms and Architectures for Parallel Processing, 2022.</li>
<li>Xiaoyu Ma, Hui He, Hui Zhang, Wei Xi, Zuhao Chen, Jizhong Zhao, <a href="https://ieeexplore.ieee.org/abstract/document/9763705" target="_blank" rel="noopener noreferrer">"Measuring and Modeling Multipath of Wi-Fi to Locate People in Indoor Environments"</a>, 2021 IEEE 27th International Conference on Parallel and Distributed Systems (ICPADS).</li>
</ul>
<h2>Affiliations using PicoScenes</h2>
<p>The following grid lists the affiliations that use PicoScenes platform in their latest research.</p>
<h3>China Mainland Users</h3>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<h3>Global Users</h3>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ol>
<li>All affiliations listed above are identified from the collected software usage data. Data collection is expressly stated in the <a href="/userManual/eula.html" target="_blank">PicoScenes Software End User License Agreement</a>.2. The list of affiliations is updated periodically and may not reflect real-time changes.</li>
</ol>
</div>
]]></content>
  </entry>
  <entry>
    <title type="text">Utility Programs and Bash Scripts</title>
    <id>https://ps.zpj.io/userManual/utilities.html</id>
    <link href="https://ps.zpj.io/userManual/utilities.html"/>
    <updated>2025-04-14T03:56:19.010Z</updated>
    <summary type="html"><![CDATA[<h2>UDP-Forwarder Plugin &amp; UDPRemoteLogger</h2>
<p>The UDP-Forwarder plugin can forward the received PicoScenes Rx frame to a remote computer via UDP. The UDPRemoteLogger program can listen to UDP and save the PicoScenes Rx frames to a .csi file on another machine. Their usage is straightforward.</p>]]></summary>
    <content type="html"><![CDATA[<h2>UDP-Forwarder Plugin &amp; UDPRemoteLogger</h2>
<p>The UDP-Forwarder plugin can forward the received PicoScenes Rx frame to a remote computer via UDP. The UDPRemoteLogger program can listen to UDP and save the PicoScenes Rx frames to a .csi file on another machine. Their usage is straightforward.</p>
<p>The following command forwards the received frames to a remote machine with IP/port 192.168.10.10:50000.</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PicoScenes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "-d debug -i usrp --mode logger --freq 5190 --forward-to 192.168.10.10:50000"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>The following command receives PicoScenes Rx frames from port 50000 and save to a .csi file.</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">UDPRemoteLogger</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --port</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 50000</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>UDP-Forwarder and UDPRemoteLogger are fully open-sourced at <a href="https://github.com/wifisensing/PicoScenes-PDK" target="_blank" rel="noopener noreferrer">https://github.com/wifisensing/PicoScenes-PDK</a>.</p>
</div>
<h2>Utility Scripts</h2>
<p>Besides the <code>PicoScenes</code> main program, we also provide several handy bash scripts.</p>
<ol>
<li>
<p><strong>switch5300Firmware</strong>: switch between the normal and CSI-measurement firmware for IWL5300 NIC</p>
<p>CSI measurement on IWL5300 is powered by a special CSI measurement firmware, which cannot connect to the encryption-protected Wi-Fi network. To restore the regular connection, you have to switch to the ordinary firmware. This script does the firmware switch. It has three modes:</p>
<ul>
<li>
<p>Running <code>switch5300Firmware</code> without argument will perform the auto-switching between the ordinary firmware and the CSI firmware.</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">csi@csi-System:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> switch5300Firmware</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Current</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> iwlwifi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> firmware</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> CSI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> measurement</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> version,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Switching</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> plain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ordinary</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> measurement</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> version...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Reloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> iwlwifi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> module</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">csi@csi-System:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> switch5300Firmware</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> # auto-switch to CSI firmware</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Current</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> iwlwifi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> firmware</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> plain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ordinary</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> version,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Switching</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> CSI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> measurement</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> version...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Reloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> iwlwifi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> module</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ...</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>Run <code>switch5300Firmware csi</code> to force switch to the CSI firmware</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">csi@csi-System:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> switch5300Firmware</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> csi</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Switching</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> CSI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> measurement</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> version...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Reloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> iwlwifi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> module</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ...</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>Run <code>switch5300Firmware ordinary</code> to force switch to the ordinary firmware</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">csi@csi-System:~$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> switch5300Firmware</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ordinary</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Switching</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> plain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ordinary</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> measurement</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> version...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Reloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> iwlwifi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> module</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ...</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>
</li>
<li>
<p><strong>array_status</strong>: list all PCI-E connected Wi-Fi NICs</p>
<p>As discussed in <a href="/userManual/scenarios.html#device-naming" target="_blank">Device Naming</a>, PicoScenes uses an ID system to refer to the specific Wi-Fi NICs. <code>array_status</code> shows the PhyPath, DevId, PhyId, [MonId], Device MAC address (changeable), Hardware MAC address (unchangeable), Carrier Frequency, Bandwidth, and Model description for each NIC. The default parameter is all, which lists all NICs. The following is a sample output:</p>
<div class="language-console line-numbers-mode" data-highlighter="shiki" data-ext="console" data-title="console" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">csi@csi-System:~$ array_status</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Device Status of Wi-Fi NIC array "all":</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">PhyPath DEV PHY [MON] DEV_MacAddr [MON_MacAddr] [CF] [BW] ProductName</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">3 wlp3s0 phy5 00:21:6a:2a:8f:82 Ultimate N WiFi Link 5300 </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">4 wlp4s0 phy1 00:16:ea:12:34:56 AR93xx Wireless Network Adapter </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">7 wlp7s0 phy6 00:16:ea:12:34:56 Wi-Fi 6 AX200</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>array_prepare_for_picoscenes</strong>: Put the NIC into monitor mode, get them unmanaged by Network-Manager, and more ...</p>
<p>The most convenient CSI measurement mode for QCA9300 and IWL5300 is the packet injection-monitor mode. Some preparation needs to be done to put NICs in the CSI measurement mode, and <code>array_prepare_for_picoscenes</code> is the shortcut for the preparation. The following sample command prepares the NICs with PhyPath <code>3</code> and <code>4</code> for CSI measurement.</p>
<div class="language-console line-numbers-mode" data-highlighter="shiki" data-ext="console" data-title="console" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">csi@csi-System:~$ array_prepare_for_picoscenes </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"3 4"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "5200 HT20"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Change CPU frequency governor to performance ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">CPU frequency governor has been set to performance for 10 core(s).</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Un-managing NICs from Network-Manager ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Unlocking RF-Kill...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Disabling power management...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Disconnecting Wi-Fi...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Stopping monitor interfaces...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Changing MAC address...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Skip setting the mac address (00:16:ea:12:34:56) for Intel 5300 NIC (wlp3s0)...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Adding monitor interfaces...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Adding a monitor interface for phy1 (phy1), named phy1mon ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Adding a monitor interface for phy13 (phy13), named phy13mon ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Changing working frequency to 5200 HT20 ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">Preparation is done.</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>
]]></content>
  </entry>
</feed>